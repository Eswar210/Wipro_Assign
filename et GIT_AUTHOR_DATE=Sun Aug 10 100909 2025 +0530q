[33mcommit 59e0fb4f65526052d6d0b77d52a2e91a729fcc91[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m
Author:     Eswar210 <eswar2k2@gmail.com>
AuthorDate: Sun Aug 10 10:09:09 2025 +0530
Commit:     Eswar210 <eswar2k2@gmail.com>
CommitDate: Mon Aug 11 10:19:38 2025 +0530

    f

[1mdiff --git a/AppointmentBooking/.classpath b/AppointmentBooking/.classpath[m
[1mnew file mode 100644[m
[1mindex 0000000..653dfd7[m
[1m--- /dev/null[m
[1m+++ b/AppointmentBooking/.classpath[m
[36m@@ -0,0 +1,57 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<classpath>[m
[32m+[m	[32m<classpathentry kind="src" output="target/classes" path="src/main/java">[m
[32m+[m		[32m<attributes>[m
[32m+[m			[32m<attribute name="optional" value="true"/>[m
[32m+[m			[32m<attribute name="maven.pomderived" value="true"/>[m
[32m+[m		[32m</attributes>[m
[32m+[m	[32m</classpathentry>[m
[32m+[m	[32m<classpathentry excluding="**" kind="src" output="target/classes" path="src/main/resources">[m
[32m+[m		[32m<attributes>[m
[32m+[m			[32m<attribute name="maven.pomderived" value="true"/>[m
[32m+[m			[32m<attribute name="optional" value="true"/>[m
[32m+[m		[32m</attributes>[m
[32m+[m	[32m</classpathentry>[m
[32m+[m	[32m<classpathentry kind="src" output="target/test-classes" path="src/test/java">[m
[32m+[m		[32m<attributes>[m
[32m+[m			[32m<attribute name="optional" value="true"/>[m
[32m+[m			[32m<attribute name="maven.pomderived" value="true"/>[m
[32m+[m			[32m<attribute name="test" value="true"/>[m
[32m+[m		[32m</attributes>[m
[32m+[m	[32m</classpathentry>[m
[32m+[m	[32m<classpathentry excluding="**" kind="src" output="target/test-classes" path="src/test/resources">[m
[32m+[m		[32m<attributes>[m
[32m+[m			[32m<attribute name="maven.pomderived" value="true"/>[m
[32m+[m			[32m<attribute name="test" value="true"/>[m
[32m+[m			[32m<attribute name="optional" value="true"/>[m
[32m+[m		[32m</attributes>[m
[32m+[m	[32m</classpathentry>[m
[32m+[m	[32m<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8">[m
[32m+[m		[32m<attributes>[m
[32m+[m			[32m<attribute name="maven.pomderived" value="true"/>[m
[32m+[m		[32m</attributes>[m
[32m+[m	[32m</classpathentry>[m
[32m+[m	[32m<classpathentry kind="con" path="org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER">[m
[32m+[m		[32m<attributes>[m
[32m+[m			[32m<attribute name="maven.pomderived" value="true"/>[m
[32m+[m		[32m</attributes>[m
[32m+[m	[32m</classpathentry>[m
[32m+[m	[32m<classpathentry kind="src" path="target/generated-sources/annotations">[m
[32m+[m		[32m<attributes>[m
[32m+[m			[32m<attribute name="optional" value="true"/>[m
[32m+[m			[32m<attribute name="maven.pomderived" value="true"/>[m
[32m+[m			[32m<attribute name="ignore_optional_problems" value="true"/>[m
[32m+[m			[32m<attribute name="m2e-apt" value="true"/>[m
[32m+[m		[32m</attributes>[m
[32m+[m	[32m</classpathentry>[m
[32m+[m	[32m<classpathentry kind="src" output="target/test-classes" path="target/generated-test-sources/test-annotations">[m
[32m+[m		[32m<attributes>[m
[32m+[m			[32m<attribute name="optional" value="true"/>[m
[32m+[m			[32m<attribute name="maven.pomderived" value="true"/>[m
[32m+[m			[32m<attribute name="ignore_optional_problems" value="true"/>[m
[32m+[m			[32m<attribute name="m2e-apt" value="true"/>[m
[32m+[m			[32m<attribute name="test" value="true"/>[m
[32m+[m		[32m</attributes>[m
[32m+[m	[32m</classpathentry>[m
[32m+[m	[32m<classpathentry kind="output" path="target/classes"/>[m
[32m+[m[32m</classpath>[m
[1mdiff --git a/AppointmentBooking/.project b/AppointmentBooking/.project[m
[1mnew file mode 100644[m
[1mindex 0000000..b39e9a8[m
[1m--- /dev/null[m
[1m+++ b/AppointmentBooking/.project[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<projectDescription>[m
[32m+[m	[32m<name>AppointmentBooking</name>[m
[32m+[m	[32m<comment></comment>[m
[32m+[m	[32m<projects>[m
[32m+[m	[32m</projects>[m
[32m+[m	[32m<buildSpec>[m
[32m+[m		[32m<buildCommand>[m
[32m+[m			[32m<name>org.eclipse.jdt.core.javabuilder</name>[m
[32m+[m			[32m<arguments>[m
[32m+[m			[32m</arguments>[m
[32m+[m		[32m</buildCommand>[m
[32m+[m		[32m<buildCommand>[m
[32m+[m			[32m<name>org.eclipse.m2e.core.maven2Builder</name>[m
[32m+[m			[32m<arguments>[m
[32m+[m			[32m</arguments>[m
[32m+[m		[32m</buildCommand>[m
[32m+[m	[32m</buildSpec>[m
[32m+[m	[32m<natures>[m
[32m+[m		[32m<nature>org.eclipse.jdt.core.javanature</nature>[m
[32m+[m		[32m<nature>org.eclipse.m2e.core.maven2Nature</nature>[m
[32m+[m	[32m</natures>[m
[32m+[m[32m</projectDescription>[m
[1mdiff --git a/AppointmentBooking/.settings/org.eclipse.jdt.apt.core.prefs b/AppointmentBooking/.settings/org.eclipse.jdt.apt.core.prefs[m
[1mnew file mode 100644[m
[1mindex 0000000..d4313d4[m
[1m--- /dev/null[m
[1m+++ b/AppointmentBooking/.settings/org.eclipse.jdt.apt.core.prefs[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32meclipse.preferences.version=1[m
[32m+[m[32morg.eclipse.jdt.apt.aptEnabled=false[m
[1mdiff --git a/AppointmentBooking/.settings/org.eclipse.jdt.core.prefs b/AppointmentBooking/.settings/org.eclipse.jdt.core.prefs[m
[1mnew file mode 100644[m
[1mindex 0000000..1b6e1ef[m
[1m--- /dev/null[m
[1m+++ b/AppointmentBooking/.settings/org.eclipse.jdt.core.prefs[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32meclipse.preferences.version=1[m
[32m+[m[32morg.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8[m
[32m+[m[32morg.eclipse.jdt.core.compiler.compliance=1.8[m
[32m+[m[32morg.eclipse.jdt.core.compiler.problem.enablePreviewFeatures=disabled[m
[32m+[m[32morg.eclipse.jdt.core.compiler.problem.forbiddenReference=warning[m
[32m+[m[32morg.eclipse.jdt.core.compiler.problem.reportPreviewFeatures=ignore[m
[32m+[m[32morg.eclipse.jdt.core.compiler.processAnnotations=disabled[m
[32m+[m[32morg.eclipse.jdt.core.compiler.release=disabled[m
[32m+[m[32morg.eclipse.jdt.core.compiler.source=1.8[m
[1mdiff --git a/AppointmentBooking/.settings/org.eclipse.m2e.core.prefs b/AppointmentBooking/.settings/org.eclipse.m2e.core.prefs[m
[1mnew file mode 100644[m
[1mindex 0000000..f897a7f[m
[1m--- /dev/null[m
[1m+++ b/AppointmentBooking/.settings/org.eclipse.m2e.core.prefs[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32mactiveProfiles=[m
[32m+[m[32meclipse.preferences.version=1[m
[32m+[m[32mresolveWorkspaceProjects=true[m
[32m+[m[32mversion=1[m
[1mdiff --git a/AppointmentBooking/pom.xml b/AppointmentBooking/pom.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..b0845a3[m
[1m--- /dev/null[m
[1m+++ b/AppointmentBooking/pom.xml[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32m<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">[m
[32m+[m[32m  <modelVersion>4.0.0</modelVersion>[m
[32m+[m[32m  <groupId>com.abs</groupId>[m
[32m+[m[32m  <artifactId>AppointmentBooking</artifactId>[m
[32m+[m[32m  <version>0.0.1-SNAPSHOT</version>[m
[32m+[m[32m  <dependencies>[m
[32m+[m[41m  [m	[32m<dependency>[m
[32m+[m		[32m<groupId>org.springframework</groupId>[m
[32m+[m		[32m<artifactId>spring-core</artifactId>[m
[32m+[m		[32m<version>6.1.1</version>[m
[32m+[m	[32m</dependency>[m
[32m+[m	[32m<dependency>[m
[32m+[m		[32m<groupId>org.springframework</groupId>[m
[32m+[m		[32m<artifactId>spring-context</artifactId>[m
[32m+[m		[32m<version>6.1.1</version>[m
[32m+[m	[32m</dependency>[m
[32m+[m[32m  </dependencies>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/AppointmentBooking/src/main/java/com/abs/main/Booking.java b/AppointmentBooking/src/main/java/com/abs/main/Booking.java[m
[1mnew file mode 100644[m
[1mindex 0000000..cc8c8ac[m
[1m--- /dev/null[m
[1m+++ b/AppointmentBooking/src/main/java/com/abs/main/Booking.java[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32mpackage com.abs.main;[m
[32m+[m
[32m+[m[32mimport org.springframework.context.support.ClassPathXmlApplicationContext;[m
[32m+[m
[32m+[m[32mimport com.abs.service.AppointmentService;[m
[32m+[m
[32m+[m[32mimport java.time.LocalDate;[m
[32m+[m
[32m+[m
[32m+[m[32mpublic class Booking {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m[41m		[m
[32m+[m		[32mtry (ClassPathXmlApplicationContext ctx =[m
[32m+[m[32m                new ClassPathXmlApplicationContext("beans.xml")) {[m
[32m+[m
[32m+[m[32m       AppointmentService appointmentService = ctx.getBean("appointmentService", AppointmentService.class);[m
[32m+[m
[32m+[m[32m       String result1 = appointmentService.book("DOC101", LocalDate.of(2025, 4, 10));[m
[32m+[m[32m       System.out.println("Input: appointmentService.book(\"DOC101\", \"2025-04-10\")");[m
[32m+[m[32m       System.out.println("Output: " + result1);[m
[32m+[m
[32m+[m
[32m+[m[32m       String result2 = appointmentService.book("DOC101", LocalDate.of(2025, 4, 1));[m
[32m+[m[32m       System.out.println("book DOC101 on 2025-04-01 => " + result2);[m
[32m+[m[41m		[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/AppointmentBooking/src/main/java/com/abs/repo/DoctorRepository.java b/AppointmentBooking/src/main/java/com/abs/repo/DoctorRepository.java[m
[1mnew file mode 100644[m
[1mindex 0000000..5bb44f4[m
[1m--- /dev/null[m
[1m+++ b/AppointmentBooking/src/main/java/com/abs/repo/DoctorRepository.java[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32mpackage com.abs.repo;[m
[32m+[m
[32m+[m[32mimport java.time.LocalDate;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m
[32m+[m[32mpublic interface DoctorRepository {[m
[32m+[m[41m	[m
[32m+[m[41m	[m
[32m+[m	[32mboolean isAvailable(String doctorId, LocalDate date);[m
[32m+[m[32m    boolean book(String doctorId, LocalDate date);[m
[32m+[m[32m    List<LocalDate> getSchedule(String doctorId);[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/AppointmentBooking/src/main/java/com/abs/repo/DoctorRepositoryImpl.java b/AppointmentBooking/src/main/java/com/abs/repo/DoctorRepositoryImpl.java[m
[1mnew file mode 100644[m
[1mindex 0000000..4d1871c[m
[1m--- /dev/null[m
[1m+++ b/AppointmentBooking/src/main/java/com/abs/repo/DoctorRepositoryImpl.java[m
[36m@@ -0,0 +1,52 @@[m
[32m+[m[32mpackage com.abs.repo;[m
[32m+[m
[32m+[m[32mimport java.time.LocalDate;[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.Arrays;[m
[32m+[m[32mimport java.util.HashMap;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m[32mimport java.util.Map;[m
[32m+[m
[32m+[m[32mpublic class DoctorRepositoryImpl implements DoctorRepository {[m
[32m+[m
[32m+[m	[32m    private final Map<String, List<LocalDate>> bookedDates = new HashMap<>();[m
[32m+[m
[32m+[m	[32m    public DoctorRepositoryImpl() {[m
[32m+[m	[32m        bookedDates.put("DOC101", new ArrayList<>(Arrays.asList([m
[32m+[m	[32m                LocalDate.of(2025, 4, 1),[m
[32m+[m	[32m                LocalDate.of(2025, 4, 2)[m
[32m+[m	[32m        )));[m
[32m+[m	[32m        bookedDates.put("DOC102", new ArrayList<>());[m
[32m+[m	[32m    }[m
[32m+[m
[32m+[m	[32m    @Override[m
[32m+[m	[32m    public boolean isAvailable(String doctorId, LocalDate date) {[m
[32m+[m	[32m        List<LocalDate> dates = bookedDates.get(doctorId);[m
[32m+[m
[32m+[m	[32m        if (dates == null) {[m
[32m+[m	[32m            return true;[m
[32m+[m	[32m        }[m
[32m+[m	[32m        return !dates.contains(date);[m
[32m+[m	[32m    }[m
[32m+[m
[32m+[m	[32m    @Override[m
[32m+[m	[32m    public boolean book(String doctorId, LocalDate date) {[m
[32m+[m
[32m+[m	[32m        List<LocalDate> dates = bookedDates.get(doctorId);[m
[32m+[m	[32m        if (dates == null) {[m
[32m+[m	[32m            dates = new ArrayList<>();[m
[32m+[m	[32m            bookedDates.put(doctorId, dates);[m
[32m+[m	[32m        }[m
[32m+[m	[32m        if (dates.contains(date)) {[m
[32m+[m	[32m            return false;[m
[32m+[m	[32m        }[m
[32m+[m[41m	        [m
[32m+[m	[32m        dates.add(date);[m
[32m+[m	[32m        return true;[m
[32m+[m	[32m    }[m
[32m+[m
[32m+[m	[32m    @Override[m
[32m+[m	[32m    public List<LocalDate> getSchedule(String doctorId) {[m
[32m+[m	[32m        return bookedDates.getOrDefault(doctorId, new ArrayList<>());[m
[32m+[m	[32m    }[m
[32m+[m	[32m}[m
[1mdiff --git a/AppointmentBooking/src/main/java/com/abs/service/AppointmentService.java b/AppointmentBooking/src/main/java/com/abs/service/AppointmentService.java[m
[1mnew file mode 100644[m
[1mindex 0000000..65f7c15[m
[1m--- /dev/null[m
[1m+++ b/AppointmentBooking/src/main/java/com/abs/service/AppointmentService.java[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32mpackage com.abs.service;[m
[32m+[m
[32m+[m[32mimport java.time.LocalDate;[m
[32m+[m
[32m+[m[32mimport com.abs.repo.DoctorRepository;[m
[32m+[m
[32m+[m
[32m+[m[32mpublic class AppointmentService {[m
[32m+[m[41m	[m
[32m+[m	[32mprivate DoctorRepository doctorRepository;[m
[32m+[m
[32m+[m[32m    public void setDoctorRepository(DoctorRepository doctorRepository) {[m
[32m+[m[32m        this.doctorRepository = doctorRepository;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public String book(String doctorId, LocalDate date) {[m
[32m+[m[32m        if (doctorRepository == null) {[m
[32m+[m[32m            throw new IllegalStateException("DoctorRepository not configured");[m
[32m+[m[32m        }[m
[32m+[m[32m        if (doctorRepository.isAvailable(doctorId, date)) {[m
[32m+[m[32m            boolean booked = doctorRepository.book(doctorId, date);[m
[32m+[m[32m            return booked ? "Appointment confirmed" : "Doctor not available";[m
[32m+[m[32m        } else {[m
[32m+[m[32m            return "Doctor not available";[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[41m		[m
[32m+[m[32m}[m
[32m+[m
[1mdiff --git a/AppointmentBooking/src/main/resources/beans.xml b/AppointmentBooking/src/main/resources/beans.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..0b5f677[m
[1m--- /dev/null[m
[1m+++ b/AppointmentBooking/src/main/resources/beans.xml[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<beans xmlns="http://www.springframework.org/schema/beans"[m
[32m+[m[32m       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[32m+[m[32m       xsi:schemaLocation="http://www.springframework.org/schema/beans[m
[32m+[m[32m       http://www.springframework.org/schema/beans/spring-beans.xsd">[m
[32m+[m[41m [m
[32m+[m[32m    <bean id="doctorRepository" class="com.abs.repo.DoctorRepositoryImpl"></bean>[m
[32m+[m[41m    [m
[32m+[m[32m    <bean id="appointmentService" class = "com.abs.service.AppointmentService">[m
[32m+[m[41m    [m	[32m<property name="doctorRepository" ref="doctorRepository"></property>[m
[32m+[m[32m    </bean>[m
[32m+[m[41m [m
[32m+[m[32m</beans>[m
[1mdiff --git a/AppointmentBooking/target/classes/META-INF/MANIFEST.MF b/AppointmentBooking/target/classes/META-INF/MANIFEST.MF[m
[1mnew file mode 100644[m
[1mindex 0000000..9bdf3b1[m
[1m--- /dev/null[m
[1m+++ b/AppointmentBooking/target/classes/META-INF/MANIFEST.MF[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32mManifest-Version: 1.0[m
[32m+[m[32mBuild-Jdk-Spec: 21[m
[32m+[m[32mCreated-By: Maven Integration for Eclipse[m
[32m+[m
[1mdiff --git a/AppointmentBooking/target/classes/META-INF/maven/com.abs/AppointmentBooking/pom.properties b/AppointmentBooking/target/classes/META-INF/maven/com.abs/AppointmentBooking/pom.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..28e5b8d[m
[1m--- /dev/null[m
[1m+++ b/AppointmentBooking/target/classes/META-INF/maven/com.abs/AppointmentBooking/pom.properties[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m#Generated by Maven Integration for Eclipse[m
[32m+[m[32m#Fri Aug 08 22:37:51 IST 2025[m
[32m+[m[32martifactId=AppointmentBooking[m
[32m+[m[32mgroupId=com.abs[m
[32m+[m[32mm2e.projectLocation=C\:\\Users\\BALAJI\\Wipro_SpringBoot\\AppointmentBooking[m
[32m+[m[32mm2e.projectName=AppointmentBooking[m
[32m+[m[32mversion=0.0.1-SNAPSHOT[m
[1mdiff --git a/AppointmentBooking/target/classes/META-INF/maven/com.abs/AppointmentBooking/pom.xml b/AppointmentBooking/target/classes/META-INF/maven/com.abs/AppointmentBooking/pom.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..b0845a3[m
[1m--- /dev/null[m
[1m+++ b/AppointmentBooking/target/classes/META-INF/maven/com.abs/AppointmentBooking/pom.xml[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32m<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">[m
[32m+[m[32m  <modelVersion>4.0.0</modelVersion>[m
[32m+[m[32m  <groupId>com.abs</groupId>[m
[32m+[m[32m  <artifactId>AppointmentBooking</artifactId>[m
[32m+[m[32m  <version>0.0.1-SNAPSHOT</version>[m
[32m+[m[32m  <dependencies>[m
[32m+[m[41m  [m	[32m<dependency>[m
[32m+[m		[32m<groupId>org.springframework</groupId>[m
[32m+[m		[32m<artifactId>spring-core</artifactId>[m
[32m+[m		[32m<version>6.1.1</version>[m
[32m+[m	[32m</dependency>[m
[32m+[m	[32m<dependency>[m
[32m+[m		[32m<groupId>org.springframework</groupId>[m
[32m+[m		[32m<artifactId>spring-context</artifactId>[m
[32m+[m		[32m<version>6.1.1</version>[m
[32m+[m	[32m</dependency>[m
[32m+[m[32m  </dependencies>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/AppointmentBooking/target/classes/beans.xml b/AppointmentBooking/target/classes/beans.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..0b5f677[m
[1m--- /dev/null[m
[1m+++ b/AppointmentBooking/target/classes/beans.xml[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<beans xmlns="http://www.springframework.org/schema/beans"[m
[32m+[m[32m       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[32m+[m[32m       xsi:schemaLocation="http://www.springframework.org/schema/beans[m
[32m+[m[32m       http://www.springframework.org/schema/beans/spring-beans.xsd">[m
[32m+[m[41m [m
[32m+[m[32m    <bean id="doctorRepository" class="com.abs.repo.DoctorRepositoryImpl"></bean>[m
[32m+[m[41m    [m
[32m+[m[32m    <bean id="appointmentService" class = "com.abs.service.AppointmentService">[m
[32m+[m[41m    [m	[32m<property name="doctorRepository" ref="doctorRepository"></property>[m
[32m+[m[32m    </bean>[m
[32m+[m[41m [m
[32m+[m[32m</beans>[m
[1mdiff --git a/AppointmentBooking/target/classes/com/abs/main/Booking.class b/AppointmentBooking/target/classes/com/abs/main/Booking.class[m
[1mnew file mode 100644[m
[1mindex 0000000..2f8d457[m
Binary files /dev/null and b/AppointmentBooking/target/classes/com/abs/main/Booking.class differ
[1mdiff --git a/AppointmentBooking/target/classes/com/abs/repo/DoctorRepository.class b/AppointmentBooking/target/classes/com/abs/repo/DoctorRepository.class[m
[1mnew file mode 100644[m
[1mindex 0000000..37fa455[m
Binary files /dev/null and b/AppointmentBooking/target/classes/com/abs/repo/DoctorRepository.class differ
[1mdiff --git a/AppointmentBooking/target/classes/com/abs/repo/DoctorRepositoryImpl.class b/AppointmentBooking/target/classes/com/abs/repo/DoctorRepositoryImpl.class[m
[1mnew file mode 100644[m
[1mindex 0000000..f862164[m
Binary files /dev/null and b/AppointmentBooking/target/classes/com/abs/repo/DoctorRepositoryImpl.class differ
[1mdiff --git a/AppointmentBooking/target/classes/com/abs/service/AppointmentService.class b/AppointmentBooking/target/classes/com/abs/service/AppointmentService.class[m
[1mnew file mode 100644[m
[1mindex 0000000..bd13b61[m
Binary files /dev/null and b/AppointmentBooking/target/classes/com/abs/service/AppointmentService.class differ
[1mdiff --git a/FlightBooking/.classpath b/FlightBooking/.classpath[m
[1mnew file mode 100644[m
[1mindex 0000000..653dfd7[m
[1m--- /dev/null[m
[1m+++ b/FlightBooking/.classpath[m
[36m@@ -0,0 +1,57 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<classpath>[m
[32m+[m	[32m<classpathentry kind="src" output="target/classes" path="src/main/java">[m
[32m+[m		[32m<attributes>[m
[32m+[m			[32m<attribute name="optional" value="true"/>[m
[32m+[m			[32m<attribute name="maven.pomderived" value="true"/>[m
[32m+[m		[32m</attributes>[m
[32m+[m	[32m</classpathentry>[m
[32m+[m	[32m<classpathentry excluding="**" kind="src" output="target/classes" path="src/main/resources">[m
[32m+[m		[32m<attributes>[m
[32m+[m			[32m<attribute name="maven.pomderived" value="true"/>[m
[32m+[m			[32m<attribute name="optional" value="true"/>[m
[32m+[m		[32m</attributes>[m
[32m+[m	[32m</classpathentry>[m
[32m+[m	[32m<classpathentry kind="src" output="target/test-classes" path="src/test/java">[m
[32m+[m		[32m<attributes>[m
[32m+[m			[32m<attribute name="optional" value="true"/>[m
[32m+[m			[32m<attribute name="maven.pomderived" value="true"/>[m
[32m+[m			[32m<attribute name="test" value="true"/>[m
[32m+[m		[32m</attributes>[m
[32m+[m	[32m</classpathentry>[m
[32m+[m	[32m<classpathentry excluding="**" kind="src" output="target/test-classes" path="src/test/resources">[m
[32m+[m		[32m<attributes>[m
[32m+[m			[32m<attribute name="maven.pomderived" value="true"/>[m
[32m+[m			[32m<attribute name="test" value="true"/>[m
[32m+[m			[32m<attribute name="optional" value="true"/>[m
[32m+[m		[32m</attributes>[m
[32m+[m	[32m</classpathentry>[m
[32m+[m	[32m<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8">[m
[32m+[m		[32m<attributes>[m
[32m+[m			[32m<attribute name="maven.pomderived" value="true"/>[m
[32m+[m		[32m</attributes>[m
[32m+[m	[32m</classpathentry>[m
[32m+[m	[32m<classpathentry kind="con" path="org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER">[m
[32m+[m		[32m<attributes>[m
[32m+[m			[32m<attribute name="maven.pomderived" value="true"/>[m
[32m+[m		[32m</attributes>[m
[32m+[m	[32m</classpathentry>[m
[32m+[m	[32m<classpathentry kind="src" path="target/generated-sources/annotations">[m
[32m+[m		[32m<attributes>[m
[32m+[m			[32m<attribute name="optional" value="true"/>[m
[32m+[m			[32m<attribute name="maven.pomderived" value="true"/>[m
[32m+[m			[32m<attribute name="ignore_optional_problems" value="true"/>[m
[32m+[m			[32m<attribute name="m2e-apt" value="true"/>[m
[32m+[m		[32m</attributes>[m
[32m+[m	[32m</classpathentry>[m
[32m+[m	[32m<classpathentry kind="src" output="target/test-classes" path="target/generated-test-sources/test-annotations">[m
[32m+[m		[32m<attributes>[m
[32m+[m			[32m<attribute name="optional" value="true"/>[m
[32m+[m			[32m<attribute name="maven.pomderived" value="true"/>[m
[32m+[m			[32m<attribute name="ignore_optional_problems" value="true"/>[m
[32m+[m			[32m<attribute name="m2e-apt" value="true"/>[m
[32m+[m			[32m<attribute name="test" value="true"/>[m
[32m+[m		[32m</attributes>[m
[32m+[m	[32m</classpathentry>[m
[32m+[m	[32m<classpathentry kind="output" path="target/classes"/>[m
[32m+[m[32m</classpath>[m
[1mdiff --git a/FlightBooking/.project b/FlightBooking/.project[m
[1mnew file mode 100644[m
[1mindex 0000000..0a86d4e[m
[1m--- /dev/null[m
[1m+++ b/FlightBooking/.project[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<projectDescription>[m
[32m+[m	[32m<name>FlightBooking</name>[m
[32m+[m	[32m<comment></comment>[m
[32m+[m	[32m<projects>[m
[32m+[m	[32m</projects>[m
[32m+[m	[32m<buildSpec>[m
[32m+[m		[32m<buildCommand>[m
[32m+[m			[32m<name>org.eclipse.jdt.core.javabuilder</name>[m
[32m+[m			[32m<arguments>[m
[32m+[m			[32m</arguments>[m
[32m+[m		[32m</buildCommand>[m
[32m+[m		[32m<buildCommand>[m
[32m+[m			[32m<name>org.eclipse.m2e.core.maven2Builder</name>[m
[32m+[m			[32m<arguments>[m
[32m+[m			[32m</arguments>[m
[32m+[m		[32m</buildCommand>[m
[32m+[m	[32m</buildSpec>[m
[32m+[m	[32m<natures>[m
[32m+[m		[32m<nature>org.eclipse.jdt.core.javanature</nature>[m
[32m+[m		[32m<nature>org.eclipse.m2e.core.maven2Nature</nature>[m
[32m+[m	[32m</natures>[m
[32m+[m[32m</projectDescription>[m
[1mdiff --git a/FlightBooking/.settings/org.eclipse.jdt.apt.core.prefs b/FlightBooking/.settings/org.eclipse.jdt.apt.core.prefs[m
[1mnew file mode 100644[m
[1mindex 0000000..d4313d4[m
[1m--- /dev/null[m
[1m+++ b/FlightBooking/.settings/org.eclipse.jdt.apt.core.prefs[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32meclipse.preferences.version=1[m
[32m+[m[32morg.eclipse.jdt.apt.aptEnabled=false[m
[1mdiff --git a/FlightBooking/.settings/org.eclipse.jdt.core.prefs b/FlightBooking/.settings/org.eclipse.jdt.core.prefs[m
[1mnew file mode 100644[m
[1mindex 0000000..1b6e1ef[m
[1m--- /dev/null[m
[1m+++ b/FlightBooking/.settings/org.eclipse.jdt.core.prefs[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32meclipse.preferences.version=1[m
[32m+[m[32morg.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8[m
[32m+[m[32morg.eclipse.jdt.core.compiler.compliance=1.8[m
[32m+[m[32morg.eclipse.jdt.core.compiler.problem.enablePreviewFeatures=disabled[m
[32m+[m[32morg.eclipse.jdt.core.compiler.problem.forbiddenReference=warning[m
[32m+[m[32morg.eclipse.jdt.core.compiler.problem.reportPreviewFeatures=ignore[m
[32m+[m[32morg.eclipse.jdt.core.compiler.processAnnotations=disabled[m
[32m+[m[32morg.eclipse.jdt.core.compiler.release=disabled[m
[32m+[m[32morg.eclipse.jdt.core.compiler.source=1.8[m
[1mdiff --git a/FlightBooking/.settings/org.eclipse.m2e.core.prefs b/FlightBooking/.settings/org.eclipse.m2e.core.prefs[m
[1mnew file mode 100644[m
[1mindex 0000000..f897a7f[m
[1m--- /dev/null[m
[1m+++ b/FlightBooking/.settings/org.eclipse.m2e.core.prefs[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32mactiveProfiles=[m
[32m+[m[32meclipse.preferences.version=1[m
[32m+[m[32mresolveWorkspaceProjects=true[m
[32m+[m[32mversion=1[m
[1mdiff --git a/FlightBooking/pom.xml b/FlightBooking/pom.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..ac2d769[m
[1m--- /dev/null[m
[1m+++ b/FlightBooking/pom.xml[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32m<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">[m
[32m+[m[32m  <modelVersion>4.0.0</modelVersion>[m
[32m+[m[32m  <groupId>com.fbs</groupId>[m
[32m+[m[32m  <artifactId>FlightBooking</artifactId>[m
[32m+[m[32m  <version>0.0.1-SNAPSHOT</version>[m
[32m+[m[32m  <dependencies>[m
[32m+[m
[32m+[m[41m  [m	[32m<dependency>[m
[32m+[m		[32m<groupId>org.springframework</groupId>[m
[32m+[m		[32m<artifactId>spring-core</artifactId>[m
[32m+[m		[32m<version>6.1.1</version>[m
[32m+[m	[32m</dependency>[m
[32m+[m	[32m<dependency>[m
[32m+[m		[32m<groupId>org.springframework</groupId>[m
[32m+[m		[32m<artifactId>spring-context</artifactId>[m
[32m+[m		[32m<version>6.1.1</version>[m
[32m+[m	[32m</dependency>[m
[32m+[m[41m	[m
[32m+[m[32m  </dependencies>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/FlightBooking/src/main/java/com/fbs/main/FlightMain.java b/FlightBooking/src/main/java/com/fbs/main/FlightMain.java[m
[1mnew file mode 100644[m
[1mindex 0000000..d3cd40c[m
[1m--- /dev/null[m
[1m+++ b/FlightBooking/src/main/java/com/fbs/main/FlightMain.java[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32mpackage com.fbs.main;[m
[32m+[m
[32m+[m[32mimport org.springframework.context.support.ClassPathXmlApplicationContext;[m
[32m+[m
[32m+[m[32mimport com.fbs.service.TicketService;[m
[32m+[m
[32m+[m[32mimport org.springframework.context.ApplicationContext;[m
[32m+[m
[32m+[m[32mpublic class FlightMain {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m[41m		[m
[32m+[m		[41m [m	[32mApplicationContext context = new ClassPathXmlApplicationContext("airline.xml");[m
[32m+[m
[32m+[m	[32m        TicketService ticketService = (TicketService) context.getBean("ticketService");[m
[32m+[m
[32m+[m	[32m        System.out.println(ticketService.confirmBooking("FL123", "USER456"));[m
[32m+[m	[32m        System.out.println(ticketService.confirmBooking("FL999", "USER789"));[m
[32m+[m[41m        [m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/FlightBooking/src/main/java/com/fbs/service/FlightService.java b/FlightBooking/src/main/java/com/fbs/service/FlightService.java[m
[1mnew file mode 100644[m
[1mindex 0000000..d73b648[m
[1m--- /dev/null[m
[1m+++ b/FlightBooking/src/main/java/com/fbs/service/FlightService.java[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32mpackage com.fbs.service;[m
[32m+[m
[32m+[m[32mpublic interface FlightService {[m
[32m+[m[41m	[m
[32m+[m	[32mboolean hasAvailableSeats(String flightId);[m
[32m+[m[32m    boolean bookSeat(String flightId);[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/FlightBooking/src/main/java/com/fbs/service/FlightServiceImpl.java b/FlightBooking/src/main/java/com/fbs/service/FlightServiceImpl.java[m
[1mnew file mode 100644[m
[1mindex 0000000..4242eff[m
[1m--- /dev/null[m
[1m+++ b/FlightBooking/src/main/java/com/fbs/service/FlightServiceImpl.java[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32mpackage com.fbs.service;[m
[32m+[m
[32m+[m[32mimport java.util.HashMap;[m
[32m+[m[32mimport java.util.Map;[m
[32m+[m
[32m+[m[32mpublic class FlightServiceImpl implements FlightService{[m
[32m+[m[41m	[m
[32m+[m	[32mprivate Map<String, Integer> seats = new HashMap<>();[m
[32m+[m
[32m+[m[32m    public void setSeats(Map<String, Integer> seats) {[m
[32m+[m[32m        this.seats = seats;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean hasAvailableSeats(String flightId) {[m
[32m+[m[32m        return seats.getOrDefault(flightId, 0) > 0;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public boolean bookSeat(String flightId) {[m
[32m+[m[32m        int available = seats.getOrDefault(flightId, 0);[m
[32m+[m[32m        if (available > 0) {[m
[32m+[m[32m            seats.put(flightId, available - 1);[m
[32m+[m[32m            return true;[m
[32m+[m[32m        }[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/FlightBooking/src/main/java/com/fbs/service/TicketService.java b/FlightBooking/src/main/java/com/fbs/service/TicketService.java[m
[1mnew file mode 100644[m
[1mindex 0000000..9149c7f[m
[1m--- /dev/null[m
[1m+++ b/FlightBooking/src/main/java/com/fbs/service/TicketService.java[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32mpackage com.fbs.service;[m
[32m+[m
[32m+[m[32mpublic class TicketService {[m
[32m+[m
[32m+[m	[32mprivate FlightService flightService;[m
[32m+[m
[32m+[m[32m    public void setFlightService(FlightService flightService) {[m
[32m+[m[32m        this.flightService = flightService;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public String confirmBooking(String flightId, String userId) {[m
[32m+[m[32m        if (flightService.hasAvailableSeats(flightId)) {[m
[32m+[m[32m            flightService.bookSeat(flightId);[m
[32m+[m[32m            return "Booking confirmed for " + userId + " on " + flightId;[m
[32m+[m[32m        } else {[m
[32m+[m[32m            return "Flight " + flightId + " is full";[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/FlightBooking/src/main/resources/airline.xml b/FlightBooking/src/main/resources/airline.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..78fc751[m
[1m--- /dev/null[m
[1m+++ b/FlightBooking/src/main/resources/airline.xml[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<beans xmlns="http://www.springframework.org/schema/beans"[m
[32m+[m[32m       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[32m+[m[32m       xsi:schemaLocation="http://www.springframework.org/schema/beans[m
[32m+[m[32m       http://www.springframework.org/schema/beans/spring-beans.xsd">[m
[32m+[m[41m [m
[32m+[m[32m    <bean id="flightService" class="com.fbs.service.FlightServiceImpl">[m
[32m+[m[32m        <property name="seats">[m
[32m+[m[32m            <map>[m
[32m+[m[32m                <entry key="FL123" value="5"/>[m
[32m+[m[32m                <entry key="FL999" value="0"/>[m
[32m+[m[32m            </map>[m
[32m+[m[32m        </property>[m
[32m+[m[32m    </bean>[m
[32m+[m
[32m+[m[41m    [m
[32m+[m[32m    <bean id="ticketService" class="com.fbs.service.TicketService">[m
[32m+[m[32m        <property name="flightService" ref="flightService"/>[m
[32m+[m[32m    </bean>[m
[32m+[m[41m [m
[32m+[m[32m</beans>[m
\ No newline at end of file[m
[1mdiff --git a/FlightBooking/target/classes/META-INF/MANIFEST.MF b/FlightBooking/target/classes/META-INF/MANIFEST.MF[m
[1mnew file mode 100644[m
[1mindex 0000000..9bdf3b1[m
[1m--- /dev/null[m
[1m+++ b/FlightBooking/target/classes/META-INF/MANIFEST.MF[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32mManifest-Version: 1.0[m
[32m+[m[32mBuild-Jdk-Spec: 21[m
[32m+[m[32mCreated-By: Maven Integration for Eclipse[m
[32m+[m
[1mdiff --git a/FlightBooking/target/classes/META-INF/maven/com.fbs/FlightBooking/pom.properties b/FlightBooking/target/classes/META-INF/maven/com.fbs/FlightBooking/pom.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..ac611b0[m
[1m--- /dev/null[m
[1m+++ b/FlightBooking/target/classes/META-INF/maven/com.fbs/FlightBooking/pom.properties[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m#Generated by Maven Integration for Eclipse[m
[32m+[m[32m#Fri Aug 08 23:17:56 IST 2025[m
[32m+[m[32martifactId=FlightBooking[m
[32m+[m[32mgroupId=com.fbs[m
[32m+[m[32mm2e.projectLocation=C\:\\Users\\BALAJI\\Wipro_SpringBoot\\FlightBooking[m
[32m+[m[32mm2e.projectName=FlightBooking[m
[32m+[m[32mversion=0.0.1-SNAPSHOT[m
[1mdiff --git a/FlightBooking/target/classes/META-INF/maven/com.fbs/FlightBooking/pom.xml b/FlightBooking/target/classes/META-INF/maven/com.fbs/FlightBooking/pom.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..ac2d769[m
[1m--- /dev/null[m
[1m+++ b/FlightBooking/target/classes/META-INF/maven/com.fbs/FlightBooking/pom.xml[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32m<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">[m
[32m+[m[32m  <modelVersion>4.0.0</modelVersion>[m
[32m+[m[32m  <groupId>com.fbs</groupId>[m
[32m+[m[32m  <artifactId>FlightBooking</artifactId>[m
[32m+[m[32m  <version>0.0.1-SNAPSHOT</version>[m
[32m+[m[32m  <dependencies>[m
[32m+[m
[32m+[m[41m  [m	[32m<dependency>[m
[32m+[m		[32m<groupId>org.springframework</groupId>[m
[32m+[m		[32m<artifactId>spring-core</artifactId>[m
[32m+[m		[32m<version>6.1.1</version>[m
[32m+[m	[32m</dependency>[m
[32m+[m	[32m<dependency>[m
[32m+[m		[32m<groupId>org.springframework</groupId>[m
[32m+[m		[32m<artifactId>spring-context</artifactId>[m
[32m+[m		[32m<version>6.1.1</version>[m
[32m+[m	[32m</dependency>[m
[32m+[m[41m	[m
[32m+[m[32m  </dependencies>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/FlightBooking/target/classes/airline.xml b/FlightBooking/target/classes/airline.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..78fc751[m
[1m--- /dev/null[m
[1m+++ b/FlightBooking/target/classes/airline.xml[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<beans xmlns="http://www.springframework.org/schema/beans"[m
[32m+[m[32m       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[32m+[m[32m       xsi:schemaLocation="http://www.springframework.org/schema/beans[m
[32m+[m[32m       http://www.springframework.org/schema/beans/spring-beans.xsd">[m
[32m+[m[41m [m
[32m+[m[32m    <bean id="flightService" class="com.fbs.service.FlightServiceImpl">[m
[32m+[m[32m        <property name="seats">[m
[32m+[m[32m            <map>[m
[32m+[m[32m                <entry key="FL123" value="5"/>[m
[32m+[m[32m                <entry key="FL999" value="0"/>[m
[32m+[m[32m            </map>[m
[32m+[m[32m        </property>[m
[32m+[m[32m    </bean>[m
[32m+[m
[32m+[m[41m    [m
[32m+[m[32m    <bean id="ticketService" class="com.fbs.service.TicketService">[m
[32m+[m[32m        <property name="flightService" ref="flightService"/>[m
[32m+[m[32m    </bean>[m
[32m+[m[41m [m
[32m+[m[32m</beans>[m
\ No newline at end of file[m
[1mdiff --git a/FlightBooking/target/classes/com/fbs/main/FlightMain.class b/FlightBooking/target/classes/com/fbs/main/FlightMain.class[m
[1mnew file mode 100644[m
[1mindex 0000000..29105a8[m
Binary files /dev/null and b/FlightBooking/target/classes/com/fbs/main/FlightMain.class differ
[1mdiff --git a/FlightBooking/target/classes/com/fbs/service/FlightService.class b/FlightBooking/target/classes/com/fbs/service/FlightService.class[m
[1mnew file mode 100644[m
[1mindex 0000000..e0efd59[m
Binary files /dev/null and b/FlightBooking/target/classes/com/fbs/service/FlightService.class differ
[1mdiff --git a/FlightBooking/target/classes/com/fbs/service/FlightServiceImpl.class b/FlightBooking/target/classes/com/fbs/service/FlightServiceImpl.class[m
[1mnew file mode 100644[m
[1mindex 0000000..761c472[m
Binary files /dev/null and b/FlightBooking/target/classes/com/fbs/service/FlightServiceImpl.class differ
[1mdiff --git a/FlightBooking/target/classes/com/fbs/service/TicketService.class b/FlightBooking/target/classes/com/fbs/service/TicketService.class[m
[1mnew file mode 100644[m
[1mindex 0000000..ad08ad2[m
Binary files /dev/null and b/FlightBooking/target/classes/com/fbs/service/TicketService.class differ
[1mdiff --git a/MovieApp/Api-Gateway/.gitattributes b/MovieApp/Api-Gateway/.gitattributes[m
[1mnew file mode 100644[m
[1mindex 0000000..3b41682[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Api-Gateway/.gitattributes[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m/mvnw text eol=lf[m
[32m+[m[32m*.cmd text eol=crlf[m
[1mdiff --git a/MovieApp/Api-Gateway/.gitignore b/MovieApp/Api-Gateway/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..667aaef[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Api-Gateway/.gitignore[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32mHELP.md[m
[32m+[m[32mtarget/[m
[32m+[m[32m.mvn/wrapper/maven-wrapper.jar[m
[32m+[m[32m!**/src/main/**/target/[m
[32m+[m[32m!**/src/test/**/target/[m
[32m+[m
[32m+[m[32m### STS ###[m
[32m+[m[32m.apt_generated[m
[32m+[m[32m.classpath[m
[32m+[m[32m.factorypath[m
[32m+[m[32m.project[m
[32m+[m[32m.settings[m
[32m+[m[32m.springBeans[m
[32m+[m[32m.sts4-cache[m
[32m+[m
[32m+[m[32m### IntelliJ IDEA ###[m
[32m+[m[32m.idea[m
[32m+[m[32m*.iws[m
[32m+[m[32m*.iml[m
[32m+[m[32m*.ipr[m
[32m+[m
[32m+[m[32m### NetBeans ###[m
[32m+[m[32m/nbproject/private/[m
[32m+[m[32m/nbbuild/[m
[32m+[m[32m/dist/[m
[32m+[m[32m/nbdist/[m
[32m+[m[32m/.nb-gradle/[m
[32m+[m[32mbuild/[m
[32m+[m[32m!**/src/main/**/build/[m
[32m+[m[32m!**/src/test/**/build/[m
[32m+[m
[32m+[m[32m### VS Code ###[m
[32m+[m[32m.vscode/[m
[1mdiff --git a/MovieApp/Api-Gateway/.mvn/wrapper/maven-wrapper.properties b/MovieApp/Api-Gateway/.mvn/wrapper/maven-wrapper.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..12fbe1e[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Api-Gateway/.mvn/wrapper/maven-wrapper.properties[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m# Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m# or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m# distributed with this work for additional information[m
[32m+[m[32m# regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m# to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m# "License"); you may not use this file except in compliance[m
[32m+[m[32m# with the License.  You may obtain a copy of the License at[m
[32m+[m[32m#[m
[32m+[m[32m#   http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m#[m
[32m+[m[32m# Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m# software distributed under the License is distributed on an[m
[32m+[m[32m# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m# KIND, either express or implied.  See the License for the[m
[32m+[m[32m# specific language governing permissions and limitations[m
[32m+[m[32m# under the License.[m
[32m+[m[32mwrapperVersion=3.3.2[m
[32m+[m[32mdistributionType=only-script[m
[32m+[m[32mdistributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.11/apache-maven-3.9.11-bin.zip[m
[1mdiff --git a/MovieApp/Api-Gateway/mvnw b/MovieApp/Api-Gateway/mvnw[m
[1mnew file mode 100644[m
[1mindex 0000000..19529dd[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Api-Gateway/mvnw[m
[36m@@ -0,0 +1,259 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m# or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m# distributed with this work for additional information[m
[32m+[m[32m# regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m# to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m# "License"); you may not use this file except in compliance[m
[32m+[m[32m# with the License.  You may obtain a copy of the License at[m
[32m+[m[32m#[m
[32m+[m[32m#    http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m#[m
[32m+[m[32m# Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m# software distributed under the License is distributed on an[m
[32m+[m[32m# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m# KIND, either express or implied.  See the License for the[m
[32m+[m[32m# specific language governing permissions and limitations[m
[32m+[m[32m# under the License.[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Apache Maven Wrapper startup batch script, version 3.3.2[m
[32m+[m[32m#[m
[32m+[m[32m# Optional ENV vars[m
[32m+[m[32m# -----------------[m
[32m+[m[32m#   JAVA_HOME - location of a JDK home dir, required when download maven via java source[m
[32m+[m[32m#   MVNW_REPOURL - repo url base for downloading maven distribution[m
[32m+[m[32m#   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven[m
[32m+[m[32m#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mset -euf[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != debug ] || set -x[m
[32m+[m
[32m+[m[32m# OS specific support.[m
[32m+[m[32mnative_path() { printf %s\\n "$1"; }[m
[32m+[m[32mcase "$(uname)" in[m
[32m+[m[32mCYGWIN* | MINGW*)[m
[32m+[m[32m  [ -z "${JAVA_HOME-}" ] || JAVA_HOME="$(cygpath --unix "$JAVA_HOME")"[m
[32m+[m[32m  native_path() { cygpath --path --windows "$1"; }[m
[32m+[m[32m  ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# set JAVACMD and JAVACCMD[m
[32m+[m[32mset_java_home() {[m
[32m+[m[32m  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched[m
[32m+[m[32m  if [ -n "${JAVA_HOME-}" ]; then[m
[32m+[m[32m    if [ -x "$JAVA_HOME/jre/sh/java" ]; then[m
[32m+[m[32m      # IBM's JDK on AIX uses strange locations for the executables[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/jre/sh/java"[m
[32m+[m[32m      JAVACCMD="$JAVA_HOME/jre/sh/javac"[m
[32m+[m[32m    else[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/bin/java"[m
[32m+[m[32m      JAVACCMD="$JAVA_HOME/bin/javac"[m
[32m+[m
[32m+[m[32m      if [ ! -x "$JAVACMD" ] || [ ! -x "$JAVACCMD" ]; then[m
[32m+[m[32m        echo "The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run." >&2[m
[32m+[m[32m        echo "JAVA_HOME is set to \"$JAVA_HOME\", but \"\$JAVA_HOME/bin/java\" or \"\$JAVA_HOME/bin/javac\" does not exist." >&2[m
[32m+[m[32m        return 1[m
[32m+[m[32m      fi[m
[32m+[m[32m    fi[m
[32m+[m[32m  else[m
[32m+[m[32m    JAVACMD="$([m
[32m+[m[32m      'set' +e[m
[32m+[m[32m      'unset' -f command 2>/dev/null[m
[32m+[m[32m      'command' -v java[m
[32m+[m[32m    )" || :[m
[32m+[m[32m    JAVACCMD="$([m
[32m+[m[32m      'set' +e[m
[32m+[m[32m      'unset' -f command 2>/dev/null[m
[32m+[m[32m      'command' -v javac[m
[32m+[m[32m    )" || :[m
[32m+[m
[32m+[m[32m    if [ ! -x "${JAVACMD-}" ] || [ ! -x "${JAVACCMD-}" ]; then[m
[32m+[m[32m      echo "The java/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run." >&2[m
[32m+[m[32m      return 1[m
[32m+[m[32m    fi[m
[32m+[m[32m  fi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# hash string like Java String::hashCode[m
[32m+[m[32mhash_string() {[m
[32m+[m[32m  str="${1:-}" h=0[m
[32m+[m[32m  while [ -n "$str" ]; do[m
[32m+[m[32m    char="${str%"${str#?}"}"[m
[32m+[m[32m    h=$(((h * 31 + $(LC_CTYPE=C printf %d "'$char")) % 4294967296))[m
[32m+[m[32m    str="${str#?}"[m
[32m+[m[32m  done[m
[32m+[m[32m  printf %x\\n $h[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mverbose() { :; }[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != true ] || verbose() { printf %s\\n "${1-}"; }[m
[32m+[m
[32m+[m[32mdie() {[m
[32m+[m[32m  printf %s\\n "$1" >&2[m
[32m+[m[32m  exit 1[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtrim() {[m
[32m+[m[32m  # MWRAPPER-139:[m
[32m+[m[32m  #   Trims trailing and leading whitespace, carriage returns, tabs, and linefeeds.[m
[32m+[m[32m  #   Needed for removing poorly interpreted newline sequences when running in more[m
[32m+[m[32m  #   exotic environments such as mingw bash on Windows.[m
[32m+[m[32m  printf "%s" "${1}" | tr -d '[:space:]'[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# parse distributionUrl and optional distributionSha256Sum, requires .mvn/wrapper/maven-wrapper.properties[m
[32m+[m[32mwhile IFS="=" read -r key value; do[m
[32m+[m[32m  case "${key-}" in[m
[32m+[m[32m  distributionUrl) distributionUrl=$(trim "${value-}") ;;[m
[32m+[m[32m  distributionSha256Sum) distributionSha256Sum=$(trim "${value-}") ;;[m
[32m+[m[32m  esac[m
[32m+[m[32mdone <"${0%/*}/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m[32m[ -n "${distributionUrl-}" ] || die "cannot read distributionUrl property in ${0%/*}/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m
[32m+[m[32mcase "${distributionUrl##*/}" in[m
[32m+[m[32mmaven-mvnd-*bin.*)[m
[32m+[m[32m  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/[m
[32m+[m[32m  case "${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)" in[m
[32m+[m[32m  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;[m
[32m+[m[32m  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;[m
[32m+[m[32m  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;[m
[32m+[m[32m  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;[m
[32m+[m[32m  *)[m
[32m+[m[32m    echo "Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version" >&2[m
[32m+[m[32m    distributionPlatform=linux-amd64[m
[32m+[m[32m    ;;[m
[32m+[m[32m  esac[m
[32m+[m[32m  distributionUrl="${distributionUrl%-bin.*}-$distributionPlatform.zip"[m
[32m+[m[32m  ;;[m
[32m+[m[32mmaven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/ ;;[m
[32m+[m[32m*) MVN_CMD="mvn${0##*/mvnw}" _MVNW_REPO_PATTERN=/org/apache/maven/ ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# apply MVNW_REPOURL and calculate MAVEN_HOME[m
[32m+[m[32m# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>[m
[32m+[m[32m[ -z "${MVNW_REPOURL-}" ] || distributionUrl="$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*"$_MVNW_REPO_PATTERN"}"[m
[32m+[m[32mdistributionUrlName="${distributionUrl##*/}"[m
[32m+[m[32mdistributionUrlNameMain="${distributionUrlName%.*}"[m
[32m+[m[32mdistributionUrlNameMain="${distributionUrlNameMain%-bin}"[m
[32m+[m[32mMAVEN_USER_HOME="${MAVEN_USER_HOME:-${HOME}/.m2}"[m
[32m+[m[32mMAVEN_HOME="${MAVEN_USER_HOME}/wrapper/dists/${distributionUrlNameMain-}/$(hash_string "$distributionUrl")"[m
[32m+[m
[32m+[m[32mexec_maven() {[m
[32m+[m[32m  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :[m
[32m+[m[32m  exec "$MAVEN_HOME/bin/$MVN_CMD" "$@" || die "cannot exec $MAVEN_HOME/bin/$MVN_CMD"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif [ -d "$MAVEN_HOME" ]; then[m
[32m+[m[32m  verbose "found existing MAVEN_HOME at $MAVEN_HOME"[m
[32m+[m[32m  exec_maven "$@"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mcase "${distributionUrl-}" in[m
[32m+[m[32m*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;[m
[32m+[m[32m*) die "distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'" ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# prepare tmp dir[m
[32m+[m[32mif TMP_DOWNLOAD_DIR="$(mktemp -d)" && [ -d "$TMP_DOWNLOAD_DIR" ]; then[m
[32m+[m[32m  clean() { rm -rf -- "$TMP_DOWNLOAD_DIR"; }[m
[32m+[m[32m  trap clean HUP INT TERM EXIT[m
[32m+[m[32melse[m
[32m+[m[32m  die "cannot create temp dir"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mmkdir -p -- "${MAVEN_HOME%/*}"[m
[32m+[m
[32m+[m[32m# Download and Install Apache Maven[m
[32m+[m[32mverbose "Couldn't find MAVEN_HOME, downloading and installing it ..."[m
[32m+[m[32mverbose "Downloading from: $distributionUrl"[m
[32m+[m[32mverbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m
[32m+[m[32m# select .zip or .tar.gz[m
[32m+[m[32mif ! command -v unzip >/dev/null; then[m
[32m+[m[32m  distributionUrl="${distributionUrl%.zip}.tar.gz"[m
[32m+[m[32m  distributionUrlName="${distributionUrl##*/}"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# verbose opt[m
[32m+[m[32m__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v[m
[32m+[m
[32m+[m[32m# normalize http auth[m
[32m+[m[32mcase "${MVNW_PASSWORD:+has-password}" in[m
[32m+[m[32m'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;[m
[32m+[m[32mhas-password) [ -n "${MVNW_USERNAME-}" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -z "${MVNW_USERNAME-}" ] && command -v wget >/dev/null; then[m
[32m+[m[32m  verbose "Found wget ... using wget"[m
[32m+[m[32m  wget ${__MVNW_QUIET_WGET:+"$__MVNW_QUIET_WGET"} "$distributionUrl" -O "$TMP_DOWNLOAD_DIR/$distributionUrlName" || die "wget: Failed to fetch $distributionUrl"[m
[32m+[m[32melif [ -z "${MVNW_USERNAME-}" ] && command -v curl >/dev/null; then[m
[32m+[m[32m  verbose "Found curl ... using curl"[m
[32m+[m[32m  curl ${__MVNW_QUIET_CURL:+"$__MVNW_QUIET_CURL"} -f -L -o "$TMP_DOWNLOAD_DIR/$distributionUrlName" "$distributionUrl" || die "curl: Failed to fetch $distributionUrl"[m
[32m+[m[32melif set_java_home; then[m
[32m+[m[32m  verbose "Falling back to use Java to download"[m
[32m+[m[32m  javaSource="$TMP_DOWNLOAD_DIR/Downloader.java"[m
[32m+[m[32m  targetZip="$TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m[32m  cat >"$javaSource" <<-END[m
[32m+[m	[32mpublic class Downloader extends java.net.Authenticator[m
[32m+[m	[32m{[m
[32m+[m	[32m  protected java.net.PasswordAuthentication getPasswordAuthentication()[m
[32m+[m	[32m  {[m
[32m+[m	[32m    return new java.net.PasswordAuthentication( System.getenv( "MVNW_USERNAME" ), System.getenv( "MVNW_PASSWORD" ).toCharArray() );[m
[32m+[m	[32m  }[m
[32m+[m	[32m  public static void main( String[] args ) throws Exception[m
[32m+[m	[32m  {[m
[32m+[m	[32m    setDefault( new Downloader() );[m
[32m+[m	[32m    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );[m
[32m+[m	[32m  }[m
[32m+[m	[32m}[m
[32m+[m	[32mEND[m
[32m+[m[32m  # For Cygwin/MinGW, switch paths to Windows format before running javac and java[m
[32m+[m[32m  verbose " - Compiling Downloader.java ..."[m
[32m+[m[32m  "$(native_path "$JAVACCMD")" "$(native_path "$javaSource")" || die "Failed to compile Downloader.java"[m
[32m+[m[32m  verbose " - Running Downloader.java ..."[m
[32m+[m[32m  "$(native_path "$JAVACMD")" -cp "$(native_path "$TMP_DOWNLOAD_DIR")" Downloader "$distributionUrl" "$(native_path "$targetZip")"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# If specified, validate the SHA-256 sum of the Maven distribution zip file[m
[32m+[m[32mif [ -n "${distributionSha256Sum-}" ]; then[m
[32m+[m[32m  distributionSha256Result=false[m
[32m+[m[32m  if [ "$MVN_CMD" = mvnd.sh ]; then[m
[32m+[m[32m    echo "Checksum validation is not supported for maven-mvnd." >&2[m
[32m+[m[32m    echo "Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  elif command -v sha256sum >/dev/null; then[m
[32m+[m[32m    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | sha256sum -c >/dev/null 2>&1; then[m
[32m+[m[32m      distributionSha256Result=true[m
[32m+[m[32m    fi[m
[32m+[m[32m  elif command -v shasum >/dev/null; then[m
[32m+[m[32m    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | shasum -a 256 -c >/dev/null 2>&1; then[m
[32m+[m[32m      distributionSha256Result=true[m
[32m+[m[32m    fi[m
[32m+[m[32m  else[m
[32m+[m[32m    echo "Checksum validation was requested but neither 'sha256sum' or 'shasum' are available." >&2[m
[32m+[m[32m    echo "Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  fi[m
[32m+[m[32m  if [ $distributionSha256Result = false ]; then[m
[32m+[m[32m    echo "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised." >&2[m
[32m+[m[32m    echo "If you updated your Maven version, you need to update the specified distributionSha256Sum property." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  fi[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# unzip and move[m
[32m+[m[32mif command -v unzip >/dev/null; then[m
[32m+[m[32m  unzip ${__MVNW_QUIET_UNZIP:+"$__MVNW_QUIET_UNZIP"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -d "$TMP_DOWNLOAD_DIR" || die "failed to unzip"[m
[32m+[m[32melse[m
[32m+[m[32m  tar xzf${__MVNW_QUIET_TAR:+"$__MVNW_QUIET_TAR"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -C "$TMP_DOWNLOAD_DIR" || die "failed to untar"[m
[32m+[m[32mfi[m
[32m+[m[32mprintf %s\\n "$distributionUrl" >"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain/mvnw.url"[m
[32m+[m[32mmv -- "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" "$MAVEN_HOME" || [ -d "$MAVEN_HOME" ] || die "fail to move MAVEN_HOME"[m
[32m+[m
[32m+[m[32mclean || :[m
[32m+[m[32mexec_maven "$@"[m
[1mdiff --git a/MovieApp/Api-Gateway/mvnw.cmd b/MovieApp/Api-Gateway/mvnw.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..249bdf3[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Api-Gateway/mvnw.cmd[m
[36m@@ -0,0 +1,149 @@[m
[32m+[m[32m<# : batch portion[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m[32m@REM Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m@REM or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m@REM distributed with this work for additional information[m
[32m+[m[32m@REM regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m@REM to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m@REM "License"); you may not use this file except in compliance[m
[32m+[m[32m@REM with the License.  You may obtain a copy of the License at[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM    http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m@REM software distributed under the License is distributed on an[m
[32m+[m[32m@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m@REM KIND, either express or implied.  See the License for the[m
[32m+[m[32m@REM specific language governing permissions and limitations[m
[32m+[m[32m@REM under the License.[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m[32m@REM Apache Maven Wrapper startup batch script, version 3.3.2[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Optional ENV vars[m
[32m+[m[32m@REM   MVNW_REPOURL - repo url base for downloading maven distribution[m
[32m+[m[32m@REM   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven[m
[32m+[m[32m@REM   MVNW_VERBOSE - true: enable verbose log; others: silence the output[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m@IF "%__MVNW_ARG0_NAME__%"=="" (SET __MVNW_ARG0_NAME__=%~nx0)[m
[32m+[m[32m@SET __MVNW_CMD__=[m
[32m+[m[32m@SET __MVNW_ERROR__=[m
[32m+[m[32m@SET __MVNW_PSMODULEP_SAVE=%PSModulePath%[m
[32m+[m[32m@SET PSModulePath=[m
[32m+[m[32m@FOR /F "usebackq tokens=1* delims==" %%A IN (`powershell -noprofile "& {$scriptDir='%~dp0'; $script='%__MVNW_ARG0_NAME__%'; icm -ScriptBlock ([Scriptblock]::Create((Get-Content -Raw '%~f0'))) -NoNewScope}"`) DO @([m
[32m+[m[32m  IF "%%A"=="MVN_CMD" (set __MVNW_CMD__=%%B) ELSE IF "%%B"=="" (echo %%A) ELSE (echo %%A=%%B)[m
[32m+[m[32m)[m
[32m+[m[32m@SET PSModulePath=%__MVNW_PSMODULEP_SAVE%[m
[32m+[m[32m@SET __MVNW_PSMODULEP_SAVE=[m
[32m+[m[32m@SET __MVNW_ARG0_NAME__=[m
[32m+[m[32m@SET MVNW_USERNAME=[m
[32m+[m[32m@SET MVNW_PASSWORD=[m
[32m+[m[32m@IF NOT "%__MVNW_CMD__%"=="" (%__MVNW_CMD__% %*)[m
[32m+[m[32m@echo Cannot start maven from wrapper >&2 && exit /b 1[m
[32m+[m[32m@GOTO :EOF[m
[32m+[m[32m: end batch / begin powershell #>[m
[32m+[m
[32m+[m[32m$ErrorActionPreference = "Stop"[m
[32m+[m[32mif ($env:MVNW_VERBOSE -eq "true") {[m
[32m+[m[32m  $VerbosePreference = "Continue"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# calculate distributionUrl, requires .mvn/wrapper/maven-wrapper.properties[m
[32m+[m[32m$distributionUrl = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionUrl[m
[32m+[m[32mif (!$distributionUrl) {[m
[32m+[m[32m  Write-Error "cannot read distributionUrl property in $scriptDir/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mswitch -wildcard -casesensitive ( $($distributionUrl -replace '^.*/','') ) {[m
[32m+[m[32m  "maven-mvnd-*" {[m
[32m+[m[32m    $USE_MVND = $true[m
[32m+[m[32m    $distributionUrl = $distributionUrl -replace '-bin\.[^.]*$',"-windows-amd64.zip"[m
[32m+[m[32m    $MVN_CMD = "mvnd.cmd"[m
[32m+[m[32m    break[m
[32m+[m[32m  }[m
[32m+[m[32m  default {[m
[32m+[m[32m    $USE_MVND = $false[m
[32m+[m[32m    $MVN_CMD = $script -replace '^mvnw','mvn'[m
[32m+[m[32m    break[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# apply MVNW_REPOURL and calculate MAVEN_HOME[m
[32m+[m[32m# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>[m
[32m+[m[32mif ($env:MVNW_REPOURL) {[m
[32m+[m[32m  $MVNW_REPO_PATTERN = if ($USE_MVND) { "/org/apache/maven/" } else { "/maven/mvnd/" }[m
[32m+[m[32m  $distributionUrl = "$env:MVNW_REPOURL$MVNW_REPO_PATTERN$($distributionUrl -replace '^.*'+$MVNW_REPO_PATTERN,'')"[m
[32m+[m[32m}[m
[32m+[m[32m$distributionUrlName = $distributionUrl -replace '^.*/',''[m
[32m+[m[32m$distributionUrlNameMain = $distributionUrlName -replace '\.[^.]*$','' -replace '-bin$',''[m
[32m+[m[32m$MAVEN_HOME_PARENT = "$HOME/.m2/wrapper/dists/$distributionUrlNameMain"[m
[32m+[m[32mif ($env:MAVEN_USER_HOME) {[m
[32m+[m[32m  $MAVEN_HOME_PARENT = "$env:MAVEN_USER_HOME/wrapper/dists/$distributionUrlNameMain"[m
[32m+[m[32m}[m
[32m+[m[32m$MAVEN_HOME_NAME = ([System.Security.Cryptography.MD5]::Create().ComputeHash([byte[]][char[]]$distributionUrl) | ForEach-Object {$_.ToString("x2")}) -join ''[m
[32m+[m[32m$MAVEN_HOME = "$MAVEN_HOME_PARENT/$MAVEN_HOME_NAME"[m
[32m+[m
[32m+[m[32mif (Test-Path -Path "$MAVEN_HOME" -PathType Container) {[m
[32m+[m[32m  Write-Verbose "found existing MAVEN_HOME at $MAVEN_HOME"[m
[32m+[m[32m  Write-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"[m
[32m+[m[32m  exit $?[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif (! $distributionUrlNameMain -or ($distributionUrlName -eq $distributionUrlNameMain)) {[m
[32m+[m[32m  Write-Error "distributionUrl is not valid, must end with *-bin.zip, but found $distributionUrl"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# prepare tmp dir[m
[32m+[m[32m$TMP_DOWNLOAD_DIR_HOLDER = New-TemporaryFile[m
[32m+[m[32m$TMP_DOWNLOAD_DIR = New-Item -Itemtype Directory -Path "$TMP_DOWNLOAD_DIR_HOLDER.dir"[m
[32m+[m[32m$TMP_DOWNLOAD_DIR_HOLDER.Delete() | Out-Null[m
[32m+[m[32mtrap {[m
[32m+[m[32m  if ($TMP_DOWNLOAD_DIR.Exists) {[m
[32m+[m[32m    try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }[m
[32m+[m[32m    catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mNew-Item -Itemtype Directory -Path "$MAVEN_HOME_PARENT" -Force | Out-Null[m
[32m+[m
[32m+[m[32m# Download and Install Apache Maven[m
[32m+[m[32mWrite-Verbose "Couldn't find MAVEN_HOME, downloading and installing it ..."[m
[32m+[m[32mWrite-Verbose "Downloading from: $distributionUrl"[m
[32m+[m[32mWrite-Verbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m
[32m+[m[32m$webclient = New-Object System.Net.WebClient[m
[32m+[m[32mif ($env:MVNW_USERNAME -and $env:MVNW_PASSWORD) {[m
[32m+[m[32m  $webclient.Credentials = New-Object System.Net.NetworkCredential($env:MVNW_USERNAME, $env:MVNW_PASSWORD)[m
[32m+[m[32m}[m
[32m+[m[32m[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12[m
[32m+[m[32m$webclient.DownloadFile($distributionUrl, "$TMP_DOWNLOAD_DIR/$distributionUrlName") | Out-Null[m
[32m+[m
[32m+[m[32m# If specified, validate the SHA-256 sum of the Maven distribution zip file[m
[32m+[m[32m$distributionSha256Sum = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionSha256Sum[m
[32m+[m[32mif ($distributionSha256Sum) {[m
[32m+[m[32m  if ($USE_MVND) {[m
[32m+[m[32m    Write-Error "Checksum validation is not supported for maven-mvnd. `nPlease disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties."[m
[32m+[m[32m  }[m
[32m+[m[32m  Import-Module $PSHOME\Modules\Microsoft.PowerShell.Utility -Function Get-FileHash[m
[32m+[m[32m  if ((Get-FileHash "$TMP_DOWNLOAD_DIR/$distributionUrlName" -Algorithm SHA256).Hash.ToLower() -ne $distributionSha256Sum) {[m
[32m+[m[32m    Write-Error "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised. If you updated your Maven version, you need to update the specified distributionSha256Sum property."[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# unzip and move[m
[32m+[m[32mExpand-Archive "$TMP_DOWNLOAD_DIR/$distributionUrlName" -DestinationPath "$TMP_DOWNLOAD_DIR" | Out-Null[m
[32m+[m[32mRename-Item -Path "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" -NewName $MAVEN_HOME_NAME | Out-Null[m
[32m+[m[32mtry {[m
[32m+[m[32m  Move-Item -Path "$TMP_DOWNLOAD_DIR/$MAVEN_HOME_NAME" -Destination $MAVEN_HOME_PARENT | Out-Null[m
[32m+[m[32m} catch {[m
[32m+[m[32m  if (! (Test-Path -Path "$MAVEN_HOME" -PathType Container)) {[m
[32m+[m[32m    Write-Error "fail to move MAVEN_HOME"[m
[32m+[m[32m  }[m
[32m+[m[32m} finally {[m
[32m+[m[32m  try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }[m
[32m+[m[32m  catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mWrite-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"[m
[1mdiff --git a/MovieApp/Api-Gateway/pom.xml b/MovieApp/Api-Gateway/pom.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..5ed367a[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Api-Gateway/pom.xml[m
[36m@@ -0,0 +1,70 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[32m+[m	[32mxsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">[m
[32m+[m	[32m<modelVersion>4.0.0</modelVersion>[m
[32m+[m	[32m<parent>[m
[32m+[m		[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m		[32m<artifactId>spring-boot-starter-parent</artifactId>[m
[32m+[m		[32m<version>3.5.4</version>[m
[32m+[m		[32m<relativePath/> <!-- lookup parent from repository -->[m
[32m+[m	[32m</parent>[m
[32m+[m	[32m<groupId>com.booking</groupId>[m
[32m+[m	[32m<artifactId>Api-Gateway</artifactId>[m
[32m+[m	[32m<version>0.0.1-SNAPSHOT</version>[m
[32m+[m	[32m<name>Api-Gateway</name>[m
[32m+[m	[32m<description>Demo project for Spring Boot</description>[m
[32m+[m	[32m<url/>[m
[32m+[m	[32m<licenses>[m
[32m+[m		[32m<license/>[m
[32m+[m	[32m</licenses>[m
[32m+[m	[32m<developers>[m
[32m+[m		[32m<developer/>[m
[32m+[m	[32m</developers>[m
[32m+[m	[32m<scm>[m
[32m+[m		[32m<connection/>[m
[32m+[m		[32m<developerConnection/>[m
[32m+[m		[32m<tag/>[m
[32m+[m		[32m<url/>[m
[32m+[m	[32m</scm>[m
[32m+[m	[32m<properties>[m
[32m+[m		[32m<java.version>17</java.version>[m
[32m+[m		[32m<spring-cloud.version>2025.0.0</spring-cloud.version>[m
[32m+[m	[32m</properties>[m
[32m+[m	[32m<dependencies>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.cloud</groupId>[m
[32m+[m			[32m<artifactId>spring-cloud-starter-gateway</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.cloud</groupId>[m
[32m+[m			[32m<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-test</artifactId>[m
[32m+[m			[32m<scope>test</scope>[m
[32m+[m		[32m</dependency>[m
[32m+[m	[32m</dependencies>[m
[32m+[m	[32m<dependencyManagement>[m
[32m+[m		[32m<dependencies>[m
[32m+[m			[32m<dependency>[m
[32m+[m				[32m<groupId>org.springframework.cloud</groupId>[m
[32m+[m				[32m<artifactId>spring-cloud-dependencies</artifactId>[m
[32m+[m				[32m<version>${spring-cloud.version}</version>[m
[32m+[m				[32m<type>pom</type>[m
[32m+[m				[32m<scope>import</scope>[m
[32m+[m			[32m</dependency>[m
[32m+[m		[32m</dependencies>[m
[32m+[m	[32m</dependencyManagement>[m
[32m+[m
[32m+[m	[32m<build>[m
[32m+[m		[32m<plugins>[m
[32m+[m			[32m<plugin>[m
[32m+[m				[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m				[32m<artifactId>spring-boot-maven-plugin</artifactId>[m
[32m+[m			[32m</plugin>[m
[32m+[m		[32m</plugins>[m
[32m+[m	[32m</build>[m
[32m+[m
[32m+[m[32m</project>[m
[1mdiff --git a/MovieApp/Api-Gateway/src/main/java/com/gateway/ApiGatewayApplication.java b/MovieApp/Api-Gateway/src/main/java/com/gateway/ApiGatewayApplication.java[m
[1mnew file mode 100644[m
[1mindex 0000000..642047e[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Api-Gateway/src/main/java/com/gateway/ApiGatewayApplication.java[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32mpackage com.gateway;[m
[32m+[m
[32m+[m[32mimport org.springframework.boot.SpringApplication;[m
[32m+[m[32mimport org.springframework.boot.autoconfigure.SpringBootApplication;[m
[32m+[m[32mimport org.springframework.cloud.gateway.route.RouteLocator;[m
[32m+[m[32mimport org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder;[m
[32m+[m[32mimport org.springframework.context.annotation.Bean;[m
[32m+[m
[32m+[m[32m@SpringBootApplication[m
[32m+[m[32mpublic class ApiGatewayApplication {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m		[32mSpringApplication.run(ApiGatewayApplication.class, args);[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32m@Bean[m
[32m+[m	[32mpublic RouteLocator route(RouteLocatorBuilder builder) {[m
[32m+[m	[32m    return builder.routes()[m
[32m+[m	[32m            .route("CUSTOMER-SERVICE-MS", r -> r.path("/customers/**").uri("http://localhost:2222"))[m
[32m+[m	[32m            .route("MOVIE-SERVICE-MS", r -> r.path("/movies/**").uri("http://localhost:3333"))[m
[32m+[m	[32m            .route("BOOKING-SERVICE-MS", r -> r.path("/bookings/**").uri("http://localhost:1111"))[m
[32m+[m	[32m            .route("THEATER-SERVICE-MS", r -> r.path("/theaters/**").uri("http://localhost:4444"))[m
[32m+[m	[32m            .build();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Api-Gateway/src/main/resources/application.properties b/MovieApp/Api-Gateway/src/main/resources/application.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..1d39425[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Api-Gateway/src/main/resources/application.properties[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32mspring.application.name=Api-Gateway[m
[32m+[m
[32m+[m[32mserver.port = 9090[m
[32m+[m[32meureka.client.register-with-eureka=true[m
[32m+[m[32meureka.client.fetch-registry=true[m
[32m+[m[32meureka.client.service-url.defaultZone=http://localhost:8761/eureka/[m
[32m+[m[32meureka.instance.hostname=localhost[m
[32m+[m
[32m+[m[32mlogging.level.org.springframework.cloud.gateway=DEBUG[m
[32m+[m[32mlogging.level.reactor.netty.http.client=DEBUG[m
[32m+[m[32mlogging.level.org.springframework.web.reactive.function.client.ExchangeFunctions=TRACE[m
[32m+[m
[1mdiff --git a/MovieApp/Api-Gateway/src/test/java/com/gateway/ApiGatewayApplicationTests.java b/MovieApp/Api-Gateway/src/test/java/com/gateway/ApiGatewayApplicationTests.java[m
[1mnew file mode 100644[m
[1mindex 0000000..d17f71e[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Api-Gateway/src/test/java/com/gateway/ApiGatewayApplicationTests.java[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mpackage com.gateway;[m
[32m+[m
[32m+[m[32mimport org.junit.jupiter.api.Test;[m
[32m+[m[32mimport org.springframework.boot.test.context.SpringBootTest;[m
[32m+[m
[32m+[m[32m@SpringBootTest[m
[32m+[m[32mclass ApiGatewayApplicationTests {[m
[32m+[m
[32m+[m	[32m@Test[m
[32m+[m	[32mvoid contextLoads() {[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Booking-Service-MS/.gitattributes b/MovieApp/Booking-Service-MS/.gitattributes[m
[1mnew file mode 100644[m
[1mindex 0000000..3b41682[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/.gitattributes[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m/mvnw text eol=lf[m
[32m+[m[32m*.cmd text eol=crlf[m
[1mdiff --git a/MovieApp/Booking-Service-MS/.gitignore b/MovieApp/Booking-Service-MS/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..667aaef[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/.gitignore[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32mHELP.md[m
[32m+[m[32mtarget/[m
[32m+[m[32m.mvn/wrapper/maven-wrapper.jar[m
[32m+[m[32m!**/src/main/**/target/[m
[32m+[m[32m!**/src/test/**/target/[m
[32m+[m
[32m+[m[32m### STS ###[m
[32m+[m[32m.apt_generated[m
[32m+[m[32m.classpath[m
[32m+[m[32m.factorypath[m
[32m+[m[32m.project[m
[32m+[m[32m.settings[m
[32m+[m[32m.springBeans[m
[32m+[m[32m.sts4-cache[m
[32m+[m
[32m+[m[32m### IntelliJ IDEA ###[m
[32m+[m[32m.idea[m
[32m+[m[32m*.iws[m
[32m+[m[32m*.iml[m
[32m+[m[32m*.ipr[m
[32m+[m
[32m+[m[32m### NetBeans ###[m
[32m+[m[32m/nbproject/private/[m
[32m+[m[32m/nbbuild/[m
[32m+[m[32m/dist/[m
[32m+[m[32m/nbdist/[m
[32m+[m[32m/.nb-gradle/[m
[32m+[m[32mbuild/[m
[32m+[m[32m!**/src/main/**/build/[m
[32m+[m[32m!**/src/test/**/build/[m
[32m+[m
[32m+[m[32m### VS Code ###[m
[32m+[m[32m.vscode/[m
[1mdiff --git a/MovieApp/Booking-Service-MS/.mvn/wrapper/maven-wrapper.properties b/MovieApp/Booking-Service-MS/.mvn/wrapper/maven-wrapper.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..12fbe1e[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/.mvn/wrapper/maven-wrapper.properties[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m# Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m# or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m# distributed with this work for additional information[m
[32m+[m[32m# regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m# to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m# "License"); you may not use this file except in compliance[m
[32m+[m[32m# with the License.  You may obtain a copy of the License at[m
[32m+[m[32m#[m
[32m+[m[32m#   http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m#[m
[32m+[m[32m# Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m# software distributed under the License is distributed on an[m
[32m+[m[32m# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m# KIND, either express or implied.  See the License for the[m
[32m+[m[32m# specific language governing permissions and limitations[m
[32m+[m[32m# under the License.[m
[32m+[m[32mwrapperVersion=3.3.2[m
[32m+[m[32mdistributionType=only-script[m
[32m+[m[32mdistributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.11/apache-maven-3.9.11-bin.zip[m
[1mdiff --git a/MovieApp/Booking-Service-MS/mvnw b/MovieApp/Booking-Service-MS/mvnw[m
[1mnew file mode 100644[m
[1mindex 0000000..19529dd[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/mvnw[m
[36m@@ -0,0 +1,259 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m# or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m# distributed with this work for additional information[m
[32m+[m[32m# regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m# to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m# "License"); you may not use this file except in compliance[m
[32m+[m[32m# with the License.  You may obtain a copy of the License at[m
[32m+[m[32m#[m
[32m+[m[32m#    http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m#[m
[32m+[m[32m# Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m# software distributed under the License is distributed on an[m
[32m+[m[32m# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m# KIND, either express or implied.  See the License for the[m
[32m+[m[32m# specific language governing permissions and limitations[m
[32m+[m[32m# under the License.[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Apache Maven Wrapper startup batch script, version 3.3.2[m
[32m+[m[32m#[m
[32m+[m[32m# Optional ENV vars[m
[32m+[m[32m# -----------------[m
[32m+[m[32m#   JAVA_HOME - location of a JDK home dir, required when download maven via java source[m
[32m+[m[32m#   MVNW_REPOURL - repo url base for downloading maven distribution[m
[32m+[m[32m#   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven[m
[32m+[m[32m#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mset -euf[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != debug ] || set -x[m
[32m+[m
[32m+[m[32m# OS specific support.[m
[32m+[m[32mnative_path() { printf %s\\n "$1"; }[m
[32m+[m[32mcase "$(uname)" in[m
[32m+[m[32mCYGWIN* | MINGW*)[m
[32m+[m[32m  [ -z "${JAVA_HOME-}" ] || JAVA_HOME="$(cygpath --unix "$JAVA_HOME")"[m
[32m+[m[32m  native_path() { cygpath --path --windows "$1"; }[m
[32m+[m[32m  ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# set JAVACMD and JAVACCMD[m
[32m+[m[32mset_java_home() {[m
[32m+[m[32m  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched[m
[32m+[m[32m  if [ -n "${JAVA_HOME-}" ]; then[m
[32m+[m[32m    if [ -x "$JAVA_HOME/jre/sh/java" ]; then[m
[32m+[m[32m      # IBM's JDK on AIX uses strange locations for the executables[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/jre/sh/java"[m
[32m+[m[32m      JAVACCMD="$JAVA_HOME/jre/sh/javac"[m
[32m+[m[32m    else[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/bin/java"[m
[32m+[m[32m      JAVACCMD="$JAVA_HOME/bin/javac"[m
[32m+[m
[32m+[m[32m      if [ ! -x "$JAVACMD" ] || [ ! -x "$JAVACCMD" ]; then[m
[32m+[m[32m        echo "The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run." >&2[m
[32m+[m[32m        echo "JAVA_HOME is set to \"$JAVA_HOME\", but \"\$JAVA_HOME/bin/java\" or \"\$JAVA_HOME/bin/javac\" does not exist." >&2[m
[32m+[m[32m        return 1[m
[32m+[m[32m      fi[m
[32m+[m[32m    fi[m
[32m+[m[32m  else[m
[32m+[m[32m    JAVACMD="$([m
[32m+[m[32m      'set' +e[m
[32m+[m[32m      'unset' -f command 2>/dev/null[m
[32m+[m[32m      'command' -v java[m
[32m+[m[32m    )" || :[m
[32m+[m[32m    JAVACCMD="$([m
[32m+[m[32m      'set' +e[m
[32m+[m[32m      'unset' -f command 2>/dev/null[m
[32m+[m[32m      'command' -v javac[m
[32m+[m[32m    )" || :[m
[32m+[m
[32m+[m[32m    if [ ! -x "${JAVACMD-}" ] || [ ! -x "${JAVACCMD-}" ]; then[m
[32m+[m[32m      echo "The java/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run." >&2[m
[32m+[m[32m      return 1[m
[32m+[m[32m    fi[m
[32m+[m[32m  fi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# hash string like Java String::hashCode[m
[32m+[m[32mhash_string() {[m
[32m+[m[32m  str="${1:-}" h=0[m
[32m+[m[32m  while [ -n "$str" ]; do[m
[32m+[m[32m    char="${str%"${str#?}"}"[m
[32m+[m[32m    h=$(((h * 31 + $(LC_CTYPE=C printf %d "'$char")) % 4294967296))[m
[32m+[m[32m    str="${str#?}"[m
[32m+[m[32m  done[m
[32m+[m[32m  printf %x\\n $h[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mverbose() { :; }[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != true ] || verbose() { printf %s\\n "${1-}"; }[m
[32m+[m
[32m+[m[32mdie() {[m
[32m+[m[32m  printf %s\\n "$1" >&2[m
[32m+[m[32m  exit 1[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtrim() {[m
[32m+[m[32m  # MWRAPPER-139:[m
[32m+[m[32m  #   Trims trailing and leading whitespace, carriage returns, tabs, and linefeeds.[m
[32m+[m[32m  #   Needed for removing poorly interpreted newline sequences when running in more[m
[32m+[m[32m  #   exotic environments such as mingw bash on Windows.[m
[32m+[m[32m  printf "%s" "${1}" | tr -d '[:space:]'[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# parse distributionUrl and optional distributionSha256Sum, requires .mvn/wrapper/maven-wrapper.properties[m
[32m+[m[32mwhile IFS="=" read -r key value; do[m
[32m+[m[32m  case "${key-}" in[m
[32m+[m[32m  distributionUrl) distributionUrl=$(trim "${value-}") ;;[m
[32m+[m[32m  distributionSha256Sum) distributionSha256Sum=$(trim "${value-}") ;;[m
[32m+[m[32m  esac[m
[32m+[m[32mdone <"${0%/*}/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m[32m[ -n "${distributionUrl-}" ] || die "cannot read distributionUrl property in ${0%/*}/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m
[32m+[m[32mcase "${distributionUrl##*/}" in[m
[32m+[m[32mmaven-mvnd-*bin.*)[m
[32m+[m[32m  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/[m
[32m+[m[32m  case "${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)" in[m
[32m+[m[32m  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;[m
[32m+[m[32m  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;[m
[32m+[m[32m  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;[m
[32m+[m[32m  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;[m
[32m+[m[32m  *)[m
[32m+[m[32m    echo "Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version" >&2[m
[32m+[m[32m    distributionPlatform=linux-amd64[m
[32m+[m[32m    ;;[m
[32m+[m[32m  esac[m
[32m+[m[32m  distributionUrl="${distributionUrl%-bin.*}-$distributionPlatform.zip"[m
[32m+[m[32m  ;;[m
[32m+[m[32mmaven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/ ;;[m
[32m+[m[32m*) MVN_CMD="mvn${0##*/mvnw}" _MVNW_REPO_PATTERN=/org/apache/maven/ ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# apply MVNW_REPOURL and calculate MAVEN_HOME[m
[32m+[m[32m# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>[m
[32m+[m[32m[ -z "${MVNW_REPOURL-}" ] || distributionUrl="$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*"$_MVNW_REPO_PATTERN"}"[m
[32m+[m[32mdistributionUrlName="${distributionUrl##*/}"[m
[32m+[m[32mdistributionUrlNameMain="${distributionUrlName%.*}"[m
[32m+[m[32mdistributionUrlNameMain="${distributionUrlNameMain%-bin}"[m
[32m+[m[32mMAVEN_USER_HOME="${MAVEN_USER_HOME:-${HOME}/.m2}"[m
[32m+[m[32mMAVEN_HOME="${MAVEN_USER_HOME}/wrapper/dists/${distributionUrlNameMain-}/$(hash_string "$distributionUrl")"[m
[32m+[m
[32m+[m[32mexec_maven() {[m
[32m+[m[32m  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :[m
[32m+[m[32m  exec "$MAVEN_HOME/bin/$MVN_CMD" "$@" || die "cannot exec $MAVEN_HOME/bin/$MVN_CMD"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif [ -d "$MAVEN_HOME" ]; then[m
[32m+[m[32m  verbose "found existing MAVEN_HOME at $MAVEN_HOME"[m
[32m+[m[32m  exec_maven "$@"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mcase "${distributionUrl-}" in[m
[32m+[m[32m*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;[m
[32m+[m[32m*) die "distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'" ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# prepare tmp dir[m
[32m+[m[32mif TMP_DOWNLOAD_DIR="$(mktemp -d)" && [ -d "$TMP_DOWNLOAD_DIR" ]; then[m
[32m+[m[32m  clean() { rm -rf -- "$TMP_DOWNLOAD_DIR"; }[m
[32m+[m[32m  trap clean HUP INT TERM EXIT[m
[32m+[m[32melse[m
[32m+[m[32m  die "cannot create temp dir"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mmkdir -p -- "${MAVEN_HOME%/*}"[m
[32m+[m
[32m+[m[32m# Download and Install Apache Maven[m
[32m+[m[32mverbose "Couldn't find MAVEN_HOME, downloading and installing it ..."[m
[32m+[m[32mverbose "Downloading from: $distributionUrl"[m
[32m+[m[32mverbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m
[32m+[m[32m# select .zip or .tar.gz[m
[32m+[m[32mif ! command -v unzip >/dev/null; then[m
[32m+[m[32m  distributionUrl="${distributionUrl%.zip}.tar.gz"[m
[32m+[m[32m  distributionUrlName="${distributionUrl##*/}"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# verbose opt[m
[32m+[m[32m__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v[m
[32m+[m
[32m+[m[32m# normalize http auth[m
[32m+[m[32mcase "${MVNW_PASSWORD:+has-password}" in[m
[32m+[m[32m'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;[m
[32m+[m[32mhas-password) [ -n "${MVNW_USERNAME-}" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -z "${MVNW_USERNAME-}" ] && command -v wget >/dev/null; then[m
[32m+[m[32m  verbose "Found wget ... using wget"[m
[32m+[m[32m  wget ${__MVNW_QUIET_WGET:+"$__MVNW_QUIET_WGET"} "$distributionUrl" -O "$TMP_DOWNLOAD_DIR/$distributionUrlName" || die "wget: Failed to fetch $distributionUrl"[m
[32m+[m[32melif [ -z "${MVNW_USERNAME-}" ] && command -v curl >/dev/null; then[m
[32m+[m[32m  verbose "Found curl ... using curl"[m
[32m+[m[32m  curl ${__MVNW_QUIET_CURL:+"$__MVNW_QUIET_CURL"} -f -L -o "$TMP_DOWNLOAD_DIR/$distributionUrlName" "$distributionUrl" || die "curl: Failed to fetch $distributionUrl"[m
[32m+[m[32melif set_java_home; then[m
[32m+[m[32m  verbose "Falling back to use Java to download"[m
[32m+[m[32m  javaSource="$TMP_DOWNLOAD_DIR/Downloader.java"[m
[32m+[m[32m  targetZip="$TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m[32m  cat >"$javaSource" <<-END[m
[32m+[m	[32mpublic class Downloader extends java.net.Authenticator[m
[32m+[m	[32m{[m
[32m+[m	[32m  protected java.net.PasswordAuthentication getPasswordAuthentication()[m
[32m+[m	[32m  {[m
[32m+[m	[32m    return new java.net.PasswordAuthentication( System.getenv( "MVNW_USERNAME" ), System.getenv( "MVNW_PASSWORD" ).toCharArray() );[m
[32m+[m	[32m  }[m
[32m+[m	[32m  public static void main( String[] args ) throws Exception[m
[32m+[m	[32m  {[m
[32m+[m	[32m    setDefault( new Downloader() );[m
[32m+[m	[32m    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );[m
[32m+[m	[32m  }[m
[32m+[m	[32m}[m
[32m+[m	[32mEND[m
[32m+[m[32m  # For Cygwin/MinGW, switch paths to Windows format before running javac and java[m
[32m+[m[32m  verbose " - Compiling Downloader.java ..."[m
[32m+[m[32m  "$(native_path "$JAVACCMD")" "$(native_path "$javaSource")" || die "Failed to compile Downloader.java"[m
[32m+[m[32m  verbose " - Running Downloader.java ..."[m
[32m+[m[32m  "$(native_path "$JAVACMD")" -cp "$(native_path "$TMP_DOWNLOAD_DIR")" Downloader "$distributionUrl" "$(native_path "$targetZip")"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# If specified, validate the SHA-256 sum of the Maven distribution zip file[m
[32m+[m[32mif [ -n "${distributionSha256Sum-}" ]; then[m
[32m+[m[32m  distributionSha256Result=false[m
[32m+[m[32m  if [ "$MVN_CMD" = mvnd.sh ]; then[m
[32m+[m[32m    echo "Checksum validation is not supported for maven-mvnd." >&2[m
[32m+[m[32m    echo "Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  elif command -v sha256sum >/dev/null; then[m
[32m+[m[32m    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | sha256sum -c >/dev/null 2>&1; then[m
[32m+[m[32m      distributionSha256Result=true[m
[32m+[m[32m    fi[m
[32m+[m[32m  elif command -v shasum >/dev/null; then[m
[32m+[m[32m    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | shasum -a 256 -c >/dev/null 2>&1; then[m
[32m+[m[32m      distributionSha256Result=true[m
[32m+[m[32m    fi[m
[32m+[m[32m  else[m
[32m+[m[32m    echo "Checksum validation was requested but neither 'sha256sum' or 'shasum' are available." >&2[m
[32m+[m[32m    echo "Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  fi[m
[32m+[m[32m  if [ $distributionSha256Result = false ]; then[m
[32m+[m[32m    echo "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised." >&2[m
[32m+[m[32m    echo "If you updated your Maven version, you need to update the specified distributionSha256Sum property." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  fi[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# unzip and move[m
[32m+[m[32mif command -v unzip >/dev/null; then[m
[32m+[m[32m  unzip ${__MVNW_QUIET_UNZIP:+"$__MVNW_QUIET_UNZIP"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -d "$TMP_DOWNLOAD_DIR" || die "failed to unzip"[m
[32m+[m[32melse[m
[32m+[m[32m  tar xzf${__MVNW_QUIET_TAR:+"$__MVNW_QUIET_TAR"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -C "$TMP_DOWNLOAD_DIR" || die "failed to untar"[m
[32m+[m[32mfi[m
[32m+[m[32mprintf %s\\n "$distributionUrl" >"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain/mvnw.url"[m
[32m+[m[32mmv -- "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" "$MAVEN_HOME" || [ -d "$MAVEN_HOME" ] || die "fail to move MAVEN_HOME"[m
[32m+[m
[32m+[m[32mclean || :[m
[32m+[m[32mexec_maven "$@"[m
[1mdiff --git a/MovieApp/Booking-Service-MS/mvnw.cmd b/MovieApp/Booking-Service-MS/mvnw.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..249bdf3[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/mvnw.cmd[m
[36m@@ -0,0 +1,149 @@[m
[32m+[m[32m<# : batch portion[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m[32m@REM Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m@REM or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m@REM distributed with this work for additional information[m
[32m+[m[32m@REM regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m@REM to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m@REM "License"); you may not use this file except in compliance[m
[32m+[m[32m@REM with the License.  You may obtain a copy of the License at[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM    http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m@REM software distributed under the License is distributed on an[m
[32m+[m[32m@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m@REM KIND, either express or implied.  See the License for the[m
[32m+[m[32m@REM specific language governing permissions and limitations[m
[32m+[m[32m@REM under the License.[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m[32m@REM Apache Maven Wrapper startup batch script, version 3.3.2[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Optional ENV vars[m
[32m+[m[32m@REM   MVNW_REPOURL - repo url base for downloading maven distribution[m
[32m+[m[32m@REM   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven[m
[32m+[m[32m@REM   MVNW_VERBOSE - true: enable verbose log; others: silence the output[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m@IF "%__MVNW_ARG0_NAME__%"=="" (SET __MVNW_ARG0_NAME__=%~nx0)[m
[32m+[m[32m@SET __MVNW_CMD__=[m
[32m+[m[32m@SET __MVNW_ERROR__=[m
[32m+[m[32m@SET __MVNW_PSMODULEP_SAVE=%PSModulePath%[m
[32m+[m[32m@SET PSModulePath=[m
[32m+[m[32m@FOR /F "usebackq tokens=1* delims==" %%A IN (`powershell -noprofile "& {$scriptDir='%~dp0'; $script='%__MVNW_ARG0_NAME__%'; icm -ScriptBlock ([Scriptblock]::Create((Get-Content -Raw '%~f0'))) -NoNewScope}"`) DO @([m
[32m+[m[32m  IF "%%A"=="MVN_CMD" (set __MVNW_CMD__=%%B) ELSE IF "%%B"=="" (echo %%A) ELSE (echo %%A=%%B)[m
[32m+[m[32m)[m
[32m+[m[32m@SET PSModulePath=%__MVNW_PSMODULEP_SAVE%[m
[32m+[m[32m@SET __MVNW_PSMODULEP_SAVE=[m
[32m+[m[32m@SET __MVNW_ARG0_NAME__=[m
[32m+[m[32m@SET MVNW_USERNAME=[m
[32m+[m[32m@SET MVNW_PASSWORD=[m
[32m+[m[32m@IF NOT "%__MVNW_CMD__%"=="" (%__MVNW_CMD__% %*)[m
[32m+[m[32m@echo Cannot start maven from wrapper >&2 && exit /b 1[m
[32m+[m[32m@GOTO :EOF[m
[32m+[m[32m: end batch / begin powershell #>[m
[32m+[m
[32m+[m[32m$ErrorActionPreference = "Stop"[m
[32m+[m[32mif ($env:MVNW_VERBOSE -eq "true") {[m
[32m+[m[32m  $VerbosePreference = "Continue"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# calculate distributionUrl, requires .mvn/wrapper/maven-wrapper.properties[m
[32m+[m[32m$distributionUrl = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionUrl[m
[32m+[m[32mif (!$distributionUrl) {[m
[32m+[m[32m  Write-Error "cannot read distributionUrl property in $scriptDir/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mswitch -wildcard -casesensitive ( $($distributionUrl -replace '^.*/','') ) {[m
[32m+[m[32m  "maven-mvnd-*" {[m
[32m+[m[32m    $USE_MVND = $true[m
[32m+[m[32m    $distributionUrl = $distributionUrl -replace '-bin\.[^.]*$',"-windows-amd64.zip"[m
[32m+[m[32m    $MVN_CMD = "mvnd.cmd"[m
[32m+[m[32m    break[m
[32m+[m[32m  }[m
[32m+[m[32m  default {[m
[32m+[m[32m    $USE_MVND = $false[m
[32m+[m[32m    $MVN_CMD = $script -replace '^mvnw','mvn'[m
[32m+[m[32m    break[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# apply MVNW_REPOURL and calculate MAVEN_HOME[m
[32m+[m[32m# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>[m
[32m+[m[32mif ($env:MVNW_REPOURL) {[m
[32m+[m[32m  $MVNW_REPO_PATTERN = if ($USE_MVND) { "/org/apache/maven/" } else { "/maven/mvnd/" }[m
[32m+[m[32m  $distributionUrl = "$env:MVNW_REPOURL$MVNW_REPO_PATTERN$($distributionUrl -replace '^.*'+$MVNW_REPO_PATTERN,'')"[m
[32m+[m[32m}[m
[32m+[m[32m$distributionUrlName = $distributionUrl -replace '^.*/',''[m
[32m+[m[32m$distributionUrlNameMain = $distributionUrlName -replace '\.[^.]*$','' -replace '-bin$',''[m
[32m+[m[32m$MAVEN_HOME_PARENT = "$HOME/.m2/wrapper/dists/$distributionUrlNameMain"[m
[32m+[m[32mif ($env:MAVEN_USER_HOME) {[m
[32m+[m[32m  $MAVEN_HOME_PARENT = "$env:MAVEN_USER_HOME/wrapper/dists/$distributionUrlNameMain"[m
[32m+[m[32m}[m
[32m+[m[32m$MAVEN_HOME_NAME = ([System.Security.Cryptography.MD5]::Create().ComputeHash([byte[]][char[]]$distributionUrl) | ForEach-Object {$_.ToString("x2")}) -join ''[m
[32m+[m[32m$MAVEN_HOME = "$MAVEN_HOME_PARENT/$MAVEN_HOME_NAME"[m
[32m+[m
[32m+[m[32mif (Test-Path -Path "$MAVEN_HOME" -PathType Container) {[m
[32m+[m[32m  Write-Verbose "found existing MAVEN_HOME at $MAVEN_HOME"[m
[32m+[m[32m  Write-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"[m
[32m+[m[32m  exit $?[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif (! $distributionUrlNameMain -or ($distributionUrlName -eq $distributionUrlNameMain)) {[m
[32m+[m[32m  Write-Error "distributionUrl is not valid, must end with *-bin.zip, but found $distributionUrl"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# prepare tmp dir[m
[32m+[m[32m$TMP_DOWNLOAD_DIR_HOLDER = New-TemporaryFile[m
[32m+[m[32m$TMP_DOWNLOAD_DIR = New-Item -Itemtype Directory -Path "$TMP_DOWNLOAD_DIR_HOLDER.dir"[m
[32m+[m[32m$TMP_DOWNLOAD_DIR_HOLDER.Delete() | Out-Null[m
[32m+[m[32mtrap {[m
[32m+[m[32m  if ($TMP_DOWNLOAD_DIR.Exists) {[m
[32m+[m[32m    try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }[m
[32m+[m[32m    catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mNew-Item -Itemtype Directory -Path "$MAVEN_HOME_PARENT" -Force | Out-Null[m
[32m+[m
[32m+[m[32m# Download and Install Apache Maven[m
[32m+[m[32mWrite-Verbose "Couldn't find MAVEN_HOME, downloading and installing it ..."[m
[32m+[m[32mWrite-Verbose "Downloading from: $distributionUrl"[m
[32m+[m[32mWrite-Verbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m
[32m+[m[32m$webclient = New-Object System.Net.WebClient[m
[32m+[m[32mif ($env:MVNW_USERNAME -and $env:MVNW_PASSWORD) {[m
[32m+[m[32m  $webclient.Credentials = New-Object System.Net.NetworkCredential($env:MVNW_USERNAME, $env:MVNW_PASSWORD)[m
[32m+[m[32m}[m
[32m+[m[32m[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12[m
[32m+[m[32m$webclient.DownloadFile($distributionUrl, "$TMP_DOWNLOAD_DIR/$distributionUrlName") | Out-Null[m
[32m+[m
[32m+[m[32m# If specified, validate the SHA-256 sum of the Maven distribution zip file[m
[32m+[m[32m$distributionSha256Sum = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionSha256Sum[m
[32m+[m[32mif ($distributionSha256Sum) {[m
[32m+[m[32m  if ($USE_MVND) {[m
[32m+[m[32m    Write-Error "Checksum validation is not supported for maven-mvnd. `nPlease disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties."[m
[32m+[m[32m  }[m
[32m+[m[32m  Import-Module $PSHOME\Modules\Microsoft.PowerShell.Utility -Function Get-FileHash[m
[32m+[m[32m  if ((Get-FileHash "$TMP_DOWNLOAD_DIR/$distributionUrlName" -Algorithm SHA256).Hash.ToLower() -ne $distributionSha256Sum) {[m
[32m+[m[32m    Write-Error "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised. If you updated your Maven version, you need to update the specified distributionSha256Sum property."[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# unzip and move[m
[32m+[m[32mExpand-Archive "$TMP_DOWNLOAD_DIR/$distributionUrlName" -DestinationPath "$TMP_DOWNLOAD_DIR" | Out-Null[m
[32m+[m[32mRename-Item -Path "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" -NewName $MAVEN_HOME_NAME | Out-Null[m
[32m+[m[32mtry {[m
[32m+[m[32m  Move-Item -Path "$TMP_DOWNLOAD_DIR/$MAVEN_HOME_NAME" -Destination $MAVEN_HOME_PARENT | Out-Null[m
[32m+[m[32m} catch {[m
[32m+[m[32m  if (! (Test-Path -Path "$MAVEN_HOME" -PathType Container)) {[m
[32m+[m[32m    Write-Error "fail to move MAVEN_HOME"[m
[32m+[m[32m  }[m
[32m+[m[32m} finally {[m
[32m+[m[32m  try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }[m
[32m+[m[32m  catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mWrite-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"[m
[1mdiff --git a/MovieApp/Booking-Service-MS/pom.xml b/MovieApp/Booking-Service-MS/pom.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..5714d9d[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/pom.xml[m
[36m@@ -0,0 +1,124 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[32m+[m	[32mxsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">[m
[32m+[m	[32m<modelVersion>4.0.0</modelVersion>[m
[32m+[m	[32m<parent>[m
[32m+[m		[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m		[32m<artifactId>spring-boot-starter-parent</artifactId>[m
[32m+[m		[32m<version>3.5.4</version>[m
[32m+[m		[32m<relativePath/> <!-- lookup parent from repository -->[m
[32m+[m	[32m</parent>[m
[32m+[m	[32m<groupId>com.booking</groupId>[m
[32m+[m	[32m<artifactId>Booking-Service-MS</artifactId>[m
[32m+[m	[32m<version>0.0.1-SNAPSHOT</version>[m
[32m+[m	[32m<name>Booking-Service-MS</name>[m
[32m+[m	[32m<description>Demo project for Spring Boot</description>[m
[32m+[m	[32m<url/>[m
[32m+[m	[32m<licenses>[m
[32m+[m		[32m<license/>[m
[32m+[m	[32m</licenses>[m
[32m+[m	[32m<developers>[m
[32m+[m		[32m<developer/>[m
[32m+[m	[32m</developers>[m
[32m+[m	[32m<scm>[m
[32m+[m		[32m<connection/>[m
[32m+[m		[32m<developerConnection/>[m
[32m+[m		[32m<tag/>[m
[32m+[m		[32m<url/>[m
[32m+[m	[32m</scm>[m
[32m+[m	[32m<properties>[m
[32m+[m		[32m<java.version>17</java.version>[m
[32m+[m		[32m<spring-cloud.version>2025.0.0</spring-cloud.version>[m
[32m+[m	[32m</properties>[m
[32m+[m	[32m<dependencies>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-actuator</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-data-jpa</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-web</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.cloud</groupId>[m
[32m+[m			[32m<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.cloud</groupId>[m
[32m+[m			[32m<artifactId>spring-cloud-starter-openfeign</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m[41m		[m
[32m+[m		[32m<dependency>[m
[32m+[m[41m    [m		[32m<groupId>org.springdoc</groupId>[m
[32m+[m[41m    [m		[32m<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>[m
[32m+[m[41m    [m		[32m<version>2.8.9</version>[m
[32m+[m		[32m</dependency>[m
[32m+[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-devtools</artifactId>[m
[32m+[m			[32m<scope>runtime</scope>[m
[32m+[m			[32m<optional>true</optional>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>com.mysql</groupId>[m
[32m+[m			[32m<artifactId>mysql-connector-j</artifactId>[m
[32m+[m			[32m<scope>runtime</scope>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.projectlombok</groupId>[m
[32m+[m			[32m<artifactId>lombok</artifactId>[m
[32m+[m			[32m<optional>true</optional>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-test</artifactId>[m
[32m+[m			[32m<scope>test</scope>[m
[32m+[m		[32m</dependency>[m
[32m+[m	[32m</dependencies>[m
[32m+[m	[32m<dependencyManagement>[m
[32m+[m		[32m<dependencies>[m
[32m+[m			[32m<dependency>[m
[32m+[m				[32m<groupId>org.springframework.cloud</groupId>[m
[32m+[m				[32m<artifactId>spring-cloud-dependencies</artifactId>[m
[32m+[m				[32m<version>${spring-cloud.version}</version>[m
[32m+[m				[32m<type>pom</type>[m
[32m+[m				[32m<scope>import</scope>[m
[32m+[m			[32m</dependency>[m
[32m+[m		[32m</dependencies>[m
[32m+[m	[32m</dependencyManagement>[m
[32m+[m
[32m+[m	[32m<build>[m
[32m+[m		[32m<plugins>[m
[32m+[m			[32m<plugin>[m
[32m+[m				[32m<groupId>org.apache.maven.plugins</groupId>[m
[32m+[m				[32m<artifactId>maven-compiler-plugin</artifactId>[m
[32m+[m				[32m<configuration>[m
[32m+[m					[32m<annotationProcessorPaths>[m
[32m+[m						[32m<path>[m
[32m+[m							[32m<groupId>org.projectlombok</groupId>[m
[32m+[m							[32m<artifactId>lombok</artifactId>[m
[32m+[m						[32m</path>[m
[32m+[m					[32m</annotationProcessorPaths>[m
[32m+[m				[32m</configuration>[m
[32m+[m			[32m</plugin>[m
[32m+[m			[32m<plugin>[m
[32m+[m				[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m				[32m<artifactId>spring-boot-maven-plugin</artifactId>[m
[32m+[m				[32m<configuration>[m
[32m+[m					[32m<excludes>[m
[32m+[m						[32m<exclude>[m
[32m+[m							[32m<groupId>org.projectlombok</groupId>[m
[32m+[m							[32m<artifactId>lombok</artifactId>[m
[32m+[m						[32m</exclude>[m
[32m+[m					[32m</excludes>[m
[32m+[m				[32m</configuration>[m
[32m+[m			[32m</plugin>[m
[32m+[m		[32m</plugins>[m
[32m+[m	[32m</build>[m
[32m+[m
[32m+[m[32m</project>[m
[1mdiff --git a/MovieApp/Booking-Service-MS/src/main/java/com/booking/BookingServiceMsApplication.java b/MovieApp/Booking-Service-MS/src/main/java/com/booking/BookingServiceMsApplication.java[m
[1mnew file mode 100644[m
[1mindex 0000000..e9695d3[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/src/main/java/com/booking/BookingServiceMsApplication.java[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mpackage com.booking;[m
[32m+[m
[32m+[m[32mimport org.springframework.boot.SpringApplication;[m
[32m+[m[32mimport org.springframework.boot.autoconfigure.SpringBootApplication;[m
[32m+[m[32mimport org.springframework.cloud.openfeign.EnableFeignClients;[m
[32m+[m
[32m+[m[32m@SpringBootApplication[m
[32m+[m[32m@EnableFeignClients[m
[32m+[m[32mpublic class BookingServiceMsApplication {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m		[32mSpringApplication.run(BookingServiceMsApplication.class, args);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Booking-Service-MS/src/main/java/com/booking/client/CustomerClient.java b/MovieApp/Booking-Service-MS/src/main/java/com/booking/client/CustomerClient.java[m
[1mnew file mode 100644[m
[1mindex 0000000..65a6758[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/src/main/java/com/booking/client/CustomerClient.java[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32mpackage com.booking.client;[m
[32m+[m
[32m+[m[32mimport org.springframework.cloud.openfeign.FeignClient;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.GetMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PathVariable;[m
[32m+[m
[32m+[m[32mimport com.booking.dto.CustomerDTO;[m
[32m+[m
[32m+[m[32m@FeignClient(name = "Customer-Service-MS", url = "http://localhost:2222")[m
[32m+[m[32mpublic interface CustomerClient {[m
[32m+[m
[32m+[m[32m    @GetMapping("/customers/{id}")[m
[32m+[m[32m    CustomerDTO getCustomerById(@PathVariable("id") Long id);[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Booking-Service-MS/src/main/java/com/booking/client/MovieClient.java b/MovieApp/Booking-Service-MS/src/main/java/com/booking/client/MovieClient.java[m
[1mnew file mode 100644[m
[1mindex 0000000..91f310d[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/src/main/java/com/booking/client/MovieClient.java[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32mpackage com.booking.client;[m
[32m+[m
[32m+[m[32mimport org.springframework.cloud.openfeign.FeignClient;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.GetMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PathVariable;[m
[32m+[m
[32m+[m[32mimport com.booking.dto.MovieDTO;[m
[32m+[m
[32m+[m[32m@FeignClient(name = "Movie-Service-MS", url = "http://localhost:3333")[m
[32m+[m[32mpublic interface MovieClient {[m
[32m+[m
[32m+[m[32m    @GetMapping("/movies/{id}")[m
[32m+[m[32m    MovieDTO getMovieById(@PathVariable("id") Long id);[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Booking-Service-MS/src/main/java/com/booking/config/AppConfig.java b/MovieApp/Booking-Service-MS/src/main/java/com/booking/config/AppConfig.java[m
[1mnew file mode 100644[m
[1mindex 0000000..78d4652[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/src/main/java/com/booking/config/AppConfig.java[m
[36m@@ -0,0 +1,49 @@[m
[32m+[m[32mpackage com.booking.config;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport org.springframework.beans.factory.annotation.Value;[m
[32m+[m[32mimport org.springframework.context.annotation.Bean;[m
[32m+[m[32mimport org.springframework.context.annotation.Configuration;[m
[32m+[m
[32m+[m[32mimport io.swagger.v3.oas.models.OpenAPI;[m
[32m+[m[32mimport io.swagger.v3.oas.models.info.Contact;[m
[32m+[m[32mimport io.swagger.v3.oas.models.info.Info;[m
[32m+[m[32mimport io.swagger.v3.oas.models.info.License;[m
[32m+[m[32mimport io.swagger.v3.oas.models.servers.Server;[m
[32m+[m
[32m+[m
[32m+[m[32m@Configuration[m
[32m+[m[32mpublic class AppConfig {[m
[32m+[m	[32m@Value("${techacademy.openapi.dev-url}")[m
[32m+[m	[32mprivate String devUrl;[m
[32m+[m[41m [m
[32m+[m	[32m@Value("${techacademy.openapi.prod-url}")[m
[32m+[m	[32mprivate String prodUrl;[m
[32m+[m[41m [m
[32m+[m	[32m@Bean[m
[32m+[m	[32mpublic OpenAPI myOpenAPI() {[m
[32m+[m		[32mServer devServer = new Server();[m
[32m+[m		[32mdevServer.setUrl(devUrl);[m
[32m+[m		[32mdevServer.setDescription("Server URL in Development environment");[m
[32m+[m[41m [m
[32m+[m		[32mServer prodServer = new Server();[m
[32m+[m		[32mprodServer.setUrl(prodUrl);[m
[32m+[m		[32mprodServer.setDescription("Server URL in Production environment");[m
[32m+[m[41m [m
[32m+[m		[32mContact contact = new Contact();[m
[32m+[m		[32mcontact.setEmail("XXXX@gmail.com");[m
[32m+[m		[32mcontact.setName("XXXx");[m
[32m+[m		[32mcontact.setUrl("https://www.XXXX.com");[m
[32m+[m[41m [m
[32m+[m		[32mLicense mitLicense = new License().name("MIT License").url("https://choosealicense.com/licenses/mit/");[m
[32m+[m[41m [m
[32m+[m		[32mInfo info = new Info().title("Ecommerce REST API").version("1.0").contact(contact)[m
[32m+[m				[32m.description("This API exposes endpoints to manage ECOMMERCE OPERATIONS.")[m
[32m+[m				[32m.termsOfService("https://www.XXXX.com/terms").license(mitLicense);[m
[32m+[m[41m [m
[32m+[m		[32mreturn new OpenAPI().info(info).servers(List.of(devServer, prodServer));[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Booking-Service-MS/src/main/java/com/booking/controller/BookingController.java b/MovieApp/Booking-Service-MS/src/main/java/com/booking/controller/BookingController.java[m
[1mnew file mode 100644[m
[1mindex 0000000..833706c[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/src/main/java/com/booking/controller/BookingController.java[m
[36m@@ -0,0 +1,60 @@[m
[32m+[m[32mpackage com.booking.controller;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport org.springframework.http.HttpStatus;[m
[32m+[m[32mimport org.springframework.http.ResponseEntity;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.DeleteMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.GetMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PathVariable;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PostMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PutMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RequestBody;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RequestMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.ResponseStatus;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RestController;[m
[32m+[m
[32m+[m[32mimport com.booking.dto.BookingDTO;[m
[32m+[m[32mimport com.booking.model.Booking;[m
[32m+[m[32mimport com.booking.service.BookingService;[m
[32m+[m
[32m+[m[32mimport lombok.RequiredArgsConstructor;[m
[32m+[m
[32m+[m[32m@RestController[m
[32m+[m[32m@RequestMapping("/bookings")[m
[32m+[m[32m@RequiredArgsConstructor[m
[32m+[m[32mpublic class BookingController {[m
[32m+[m
[32m+[m[32m    private final BookingService bookingService;[m
[32m+[m
[32m+[m[32m    @PostMapping[m
[32m+[m[32m    public ResponseEntity<BookingDTO> createBooking(@RequestBody BookingDTO bookingDTO) {[m
[32m+[m[32m        BookingDTO createdBooking = bookingService.createBooking(bookingDTO);[m
[32m+[m[32m        return new ResponseEntity<>(createdBooking, HttpStatus.CREATED);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @PutMapping[m
[32m+[m[32m    public ResponseEntity<BookingDTO> updateBooking(@RequestBody BookingDTO bookingDTO) {[m
[32m+[m[32m        BookingDTO updatedBooking = bookingService.updateBooking(bookingDTO);[m
[32m+[m[32m        return ResponseEntity.ok(updatedBooking);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m    @DeleteMapping("/{id}")[m
[32m+[m[32m    @ResponseStatus(HttpStatus.NO_CONTENT)[m
[32m+[m[32m    public void deleteBooking(@PathVariable Long id) {[m
[32m+[m[32m        bookingService.deleteBooking(id);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m    @GetMapping("/{customerId}")[m
[32m+[m[32m    public List<BookingDTO> getBookingsByCustomer(@PathVariable Long customerId) {[m
[32m+[m[32m        return bookingService.getBookingsByCustomer(customerId);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    @GetMapping[m
[32m+[m[32m    public List<Booking> getAllBookings() {[m
[32m+[m[32m        return bookingService.getAllBookings();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Booking-Service-MS/src/main/java/com/booking/dto/BookingDTO.java b/MovieApp/Booking-Service-MS/src/main/java/com/booking/dto/BookingDTO.java[m
[1mnew file mode 100644[m
[1mindex 0000000..37d5d3c[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/src/main/java/com/booking/dto/BookingDTO.java[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32mpackage com.booking.dto;[m
[32m+[m
[32m+[m[32mimport java.time.LocalDate;[m
[32m+[m
[32m+[m[32mimport lombok.Builder;[m
[32m+[m[32mimport lombok.Data;[m
[32m+[m
[32m+[m[32m@Data[m
[32m+[m[32m@Builder[m
[32m+[m[32mpublic class BookingDTO {[m
[32m+[m[41m	[m
[32m+[m	[32mprivate Long id;[m
[32m+[m[32m    private Long customerId;[m
[32m+[m[32m    private Long movieId;[m
[32m+[m[32m    private String seatNumber;[m
[32m+[m[32m    private LocalDate bookingDate;[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Booking-Service-MS/src/main/java/com/booking/dto/BookingDetailsResponseDTO.java b/MovieApp/Booking-Service-MS/src/main/java/com/booking/dto/BookingDetailsResponseDTO.java[m
[1mnew file mode 100644[m
[1mindex 0000000..091649c[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/src/main/java/com/booking/dto/BookingDetailsResponseDTO.java[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mpackage com.booking.dto;[m
[32m+[m
[32m+[m[32mimport lombok.Builder;[m
[32m+[m[32mimport lombok.Data;[m
[32m+[m
[32m+[m[32m@Data[m
[32m+[m[32m@Builder[m
[32m+[m[32mpublic class BookingDetailsResponseDTO {[m
[32m+[m	[32mprivate BookingDTO booking;[m
[32m+[m[32m    private CustomerDTO customer;[m
[32m+[m[32m    private MovieDTO movie;[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Booking-Service-MS/src/main/java/com/booking/dto/CustomerDTO.java b/MovieApp/Booking-Service-MS/src/main/java/com/booking/dto/CustomerDTO.java[m
[1mnew file mode 100644[m
[1mindex 0000000..aed99e7[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/src/main/java/com/booking/dto/CustomerDTO.java[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mpackage com.booking.dto;[m
[32m+[m
[32m+[m[32mimport lombok.Builder;[m
[32m+[m[32mimport lombok.Data;[m
[32m+[m
[32m+[m[32m@Data[m
[32m+[m[32m@Builder[m
[32m+[m[32mpublic class CustomerDTO {[m
[32m+[m[32m    private Long id;[m
[32m+[m[32m    private String name;[m
[32m+[m[32m    private String email;[m
[32m+[m[41m    [m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Booking-Service-MS/src/main/java/com/booking/dto/MovieDTO.java b/MovieApp/Booking-Service-MS/src/main/java/com/booking/dto/MovieDTO.java[m
[1mnew file mode 100644[m
[1mindex 0000000..b53793a[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/src/main/java/com/booking/dto/MovieDTO.java[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32mpackage com.booking.dto;[m
[32m+[m
[32m+[m[32mimport lombok.Builder;[m
[32m+[m[32mimport lombok.Data;[m
[32m+[m
[32m+[m[32m@Data[m
[32m+[m[32m@Builder[m
[32m+[m[32mpublic class MovieDTO {[m
[32m+[m[32m    private Long id;[m
[32m+[m[32m    private String title;[m
[32m+[m[32m    private String genre;[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Booking-Service-MS/src/main/java/com/booking/exception/GlobalExceptionHandler.java b/MovieApp/Booking-Service-MS/src/main/java/com/booking/exception/GlobalExceptionHandler.java[m
[1mnew file mode 100644[m
[1mindex 0000000..93d54b8[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/src/main/java/com/booking/exception/GlobalExceptionHandler.java[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32mpackage com.booking.exception;[m
[32m+[m
[32m+[m[32mimport org.springframework.http.HttpStatus;[m
[32m+[m[32mimport org.springframework.http.ResponseEntity;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.ControllerAdvice;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.ExceptionHandler;[m
[32m+[m
[32m+[m[32m@ControllerAdvice[m
[32m+[m[32mpublic class GlobalExceptionHandler {[m
[32m+[m[41m	[m
[32m+[m	[32m@ExceptionHandler(ResourceNotFoundException.class)[m
[32m+[m[32m    public ResponseEntity<String> handleResourceNotFound(ResourceNotFoundException ex) {[m
[32m+[m[32m        return ResponseEntity.status(HttpStatus.NOT_FOUND).body(ex.getMessage());[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Booking-Service-MS/src/main/java/com/booking/exception/ResourceNotFoundException.java b/MovieApp/Booking-Service-MS/src/main/java/com/booking/exception/ResourceNotFoundException.java[m
[1mnew file mode 100644[m
[1mindex 0000000..976c4ae[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/src/main/java/com/booking/exception/ResourceNotFoundException.java[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32mpackage com.booking.exception;[m
[32m+[m
[32m+[m[32mpublic class ResourceNotFoundException extends RuntimeException{[m
[32m+[m[41m	[m
[32m+[m[41m	[m
[32m+[m	[32mprivate static final long serialVersionUID = 1L;[m
[32m+[m
[32m+[m	[32mpublic ResourceNotFoundException(String message) {[m
[32m+[m		[32msuper(message);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Booking-Service-MS/src/main/java/com/booking/model/Booking.java b/MovieApp/Booking-Service-MS/src/main/java/com/booking/model/Booking.java[m
[1mnew file mode 100644[m
[1mindex 0000000..364c57b[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/src/main/java/com/booking/model/Booking.java[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32mpackage com.booking.model;[m
[32m+[m
[32m+[m[32mimport java.time.LocalDate;[m
[32m+[m
[32m+[m[32mimport jakarta.persistence.Entity;[m
[32m+[m[32mimport jakarta.persistence.GeneratedValue;[m
[32m+[m[32mimport jakarta.persistence.GenerationType;[m
[32m+[m[32mimport jakarta.persistence.Id;[m
[32m+[m[32mimport jakarta.persistence.Table;[m
[32m+[m[32mimport lombok.AllArgsConstructor;[m
[32m+[m[32mimport lombok.Builder;[m
[32m+[m[32mimport lombok.Data;[m
[32m+[m[32mimport lombok.NoArgsConstructor;[m
[32m+[m
[32m+[m[32m@Entity[m
[32m+[m[32m@Table(name = "bookings")[m
[32m+[m[32m@Data[m
[32m+[m[32m@NoArgsConstructor[m
[32m+[m[32m@AllArgsConstructor[m
[32m+[m[32m@Builder[m
[32m+[m[32mpublic class Booking {[m
[32m+[m[41m    [m
[32m+[m[32m    @Id[m
[32m+[m[32m    @GeneratedValue(strategy = GenerationType.IDENTITY)[m
[32m+[m[32m    private Long id;[m
[32m+[m
[32m+[m[32m    private Long customerId;[m
[32m+[m[32m    private Long movieId;[m
[32m+[m[32m    private String seatNumber;[m
[32m+[m[32m    private LocalDate bookingDate;[m
[32m+[m[41m    [m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Booking-Service-MS/src/main/java/com/booking/repository/BookingRepository.java b/MovieApp/Booking-Service-MS/src/main/java/com/booking/repository/BookingRepository.java[m
[1mnew file mode 100644[m
[1mindex 0000000..d6f50c8[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/src/main/java/com/booking/repository/BookingRepository.java[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32mpackage com.booking.repository;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport org.springframework.data.jpa.repository.JpaRepository;[m
[32m+[m[32mimport org.springframework.stereotype.Repository;[m
[32m+[m
[32m+[m[32mimport com.booking.model.Booking;[m
[32m+[m
[32m+[m[32m@Repository[m
[32m+[m[32mpublic interface BookingRepository extends JpaRepository<Booking, Long>{[m
[32m+[m[41m	[m
[32m+[m	[32mList<Booking> findByCustomerId(Long customerId);[m
[32m+[m
[32m+[m[32m    //List<Booking> findByMovieId(Long movieId);[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Booking-Service-MS/src/main/java/com/booking/service/BookingService.java b/MovieApp/Booking-Service-MS/src/main/java/com/booking/service/BookingService.java[m
[1mnew file mode 100644[m
[1mindex 0000000..f79b813[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/src/main/java/com/booking/service/BookingService.java[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32mpackage com.booking.service;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport com.booking.dto.BookingDTO;[m
[32m+[m[32mimport com.booking.model.Booking;[m
[32m+[m
[32m+[m[32mpublic interface BookingService {[m
[32m+[m[41m	[m
[32m+[m	[32mBookingDTO createBooking(BookingDTO bookingDTO);[m
[32m+[m[32m    BookingDTO updateBooking(BookingDTO bookingDTO);[m
[32m+[m[32m    void deleteBooking(Long id);[m
[32m+[m[32m   // BookingDetailsResponseDTO getBookingDetails(Long id);[m
[32m+[m[32m    List<BookingDTO> getBookingsByCustomer(Long customerId);[m
[32m+[m[32m    List<Booking> getAllBookings();[m
[32m+[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Booking-Service-MS/src/main/java/com/booking/service/impl/BookingServiceImpl.java b/MovieApp/Booking-Service-MS/src/main/java/com/booking/service/impl/BookingServiceImpl.java[m
[1mnew file mode 100644[m
[1mindex 0000000..b38a2f1[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/src/main/java/com/booking/service/impl/BookingServiceImpl.java[m
[36m@@ -0,0 +1,90 @@[m
[32m+[m[32mpackage com.booking.service.impl;[m
[32m+[m
[32m+[m[32mimport java.time.LocalDate;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport org.springframework.stereotype.Service;[m
[32m+[m
[32m+[m[32mimport com.booking.client.CustomerClient;[m
[32m+[m[32mimport com.booking.client.MovieClient;[m
[32m+[m[32mimport com.booking.dto.BookingDTO;[m
[32m+[m[32mimport com.booking.exception.ResourceNotFoundException;[m
[32m+[m[32mimport com.booking.model.Booking;[m
[32m+[m[32mimport com.booking.repository.BookingRepository;[m
[32m+[m[32mimport com.booking.service.BookingService;[m
[32m+[m
[32m+[m[32mimport lombok.RequiredArgsConstructor;[m
[32m+[m
[32m+[m[32m@Service[m
[32m+[m[32m@RequiredArgsConstructor[m
[32m+[m[32mpublic class BookingServiceImpl implements BookingService{[m
[32m+[m[41m	[m
[32m+[m	[32mprivate final BookingRepository bookingRepository;[m
[32m+[m	[32mprivate final CustomerClient customerClient;[m
[32m+[m[32m    private final MovieClient movieClient;[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public BookingDTO createBooking(BookingDTO bookingDTO) {[m
[32m+[m[32m        // Validate customer and movie exist[m
[32m+[m[32m        customerClient.getCustomerById(bookingDTO.getCustomerId());[m
[32m+[m[32m        movieClient.getMovieById(bookingDTO.getMovieId());[m
[32m+[m
[32m+[m[32m        Booking booking = Booking.builder()[m
[32m+[m[32m                .customerId(bookingDTO.getCustomerId())   // set customerId[m
[32m+[m[32m                .movieId(bookingDTO.getMovieId())         // set movieId[m
[32m+[m[32m                .seatNumber(bookingDTO.getSeatNumber())[m
[32m+[m[32m                .bookingDate(LocalDate.now())[m
[32m+[m[32m                .build();[m
[32m+[m
[32m+[m[32m        Booking savedBooking = bookingRepository.save(booking);[m
[32m+[m[32m        return convertToDto(savedBooking);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public BookingDTO updateBooking(BookingDTO bookingDTO) {[m
[32m+[m[32m        Booking existing = bookingRepository.findById(bookingDTO.getId())[m
[32m+[m[32m                .orElseThrow(() -> new ResourceNotFoundException("Booking not found with id: " + bookingDTO.getId()));[m
[32m+[m
[32m+[m[32m        customerClient.getCustomerById(bookingDTO.getCustomerId());[m
[32m+[m[32m        movieClient.getMovieById(bookingDTO.getMovieId());[m
[32m+[m
[32m+[m[32m        existing.setCustomerId(bookingDTO.getCustomerId());[m
[32m+[m[32m        existing.setMovieId(bookingDTO.getMovieId());[m[41m        [m
[32m+[m[32m        existing.setSeatNumber(bookingDTO.getSeatNumber());[m
[32m+[m[32m        existing.setBookingDate(LocalDate.now());[m
[32m+[m
[32m+[m[32m        Booking updatedBooking = bookingRepository.save(existing);[m
[32m+[m[32m        return convertToDto(updatedBooking);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void deleteBooking(Long id) {[m
[32m+[m[32m        bookingRepository.deleteById(id);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public List<BookingDTO> getBookingsByCustomer(Long customerId) {[m
[32m+[m[32m        return bookingRepository.findByCustomerId(customerId)[m
[32m+[m[32m                .stream()[m
[32m+[m[32m                .map(this::convertToDto)[m
[32m+[m[32m                .toList();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private BookingDTO convertToDto(Booking booking) {[m
[32m+[m[32m        return BookingDTO.builder()[m
[32m+[m[32m                .id(booking.getId())[m
[32m+[m[32m                .customerId(booking.getCustomerId())[m
[32m+[m[32m                .movieId(booking.getMovieId())[m
[32m+[m[32m                .seatNumber(booking.getSeatNumber())[m
[32m+[m[32m                .bookingDate(booking.getBookingDate())[m
[32m+[m[32m                .build();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic List<Booking> getAllBookings() {[m
[32m+[m		[32mreturn bookingRepository.findAll();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[41m   [m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/MovieApp/Booking-Service-MS/src/main/resources/application.properties b/MovieApp/Booking-Service-MS/src/main/resources/application.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..39dbd83[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/src/main/resources/application.properties[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32mspring.application.name=Booking-Service-MS[m
[32m+[m
[32m+[m[32mserver.port = 1111[m
[32m+[m
[32m+[m[32meureka.client.register-with-eureka=true[m
[32m+[m[32meureka.client.fetch-registry=true[m
[32m+[m[32meureka.client.service-url.defaultZone=http://localhost:8761/eureka/[m
[32m+[m[32meureka.instance.hostname=localhost[m
[32m+[m
[32m+[m[32mspring.datasource.url=jdbc:mysql://localhost:3306/booking-service-ms?createDatabaseIfNotExist=true[m
[32m+[m[32mspring.datasource.username=root[m
[32m+[m[32mspring.datasource.password=root[m
[32m+[m[32mspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver[m
[32m+[m[32mspring.jpa.show-sql=true[m
[32m+[m[32mspring.jpa.format-sql = true[m
[32m+[m[32mspring.jpa.hibernate.ddl-auto=update[m
[32m+[m
[32m+[m[32mspring.jpa.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect[m
[32m+[m
[32m+[m[32mspringdoc.swagger-ui.path=/swagger-ui-custom.html[m
[32m+[m[32mspringdoc.swagger-ui.operationsSorter=method[m
[32m+[m
[32m+[m[32mtechacademy.openapi.dev-url=http://localhost:1111[m
[32m+[m[32mtechacademy.openapi.prod-url=https://xxx-api.com[m
[32m+[m
[1mdiff --git a/MovieApp/Booking-Service-MS/src/test/java/com/booking/BookingServiceMsApplicationTests.java b/MovieApp/Booking-Service-MS/src/test/java/com/booking/BookingServiceMsApplicationTests.java[m
[1mnew file mode 100644[m
[1mindex 0000000..45db1c9[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Booking-Service-MS/src/test/java/com/booking/BookingServiceMsApplicationTests.java[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mpackage com.booking;[m
[32m+[m
[32m+[m[32mimport org.junit.jupiter.api.Test;[m
[32m+[m[32mimport org.springframework.boot.test.context.SpringBootTest;[m
[32m+[m
[32m+[m[32m@SpringBootTest[m
[32m+[m[32mclass BookingServiceMsApplicationTests {[m
[32m+[m
[32m+[m	[32m@Test[m
[32m+[m	[32mvoid contextLoads() {[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Customer-Service-MS/.gitattributes b/MovieApp/Customer-Service-MS/.gitattributes[m
[1mnew file mode 100644[m
[1mindex 0000000..3b41682[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/.gitattributes[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m/mvnw text eol=lf[m
[32m+[m[32m*.cmd text eol=crlf[m
[1mdiff --git a/MovieApp/Customer-Service-MS/.gitignore b/MovieApp/Customer-Service-MS/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..667aaef[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/.gitignore[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32mHELP.md[m
[32m+[m[32mtarget/[m
[32m+[m[32m.mvn/wrapper/maven-wrapper.jar[m
[32m+[m[32m!**/src/main/**/target/[m
[32m+[m[32m!**/src/test/**/target/[m
[32m+[m
[32m+[m[32m### STS ###[m
[32m+[m[32m.apt_generated[m
[32m+[m[32m.classpath[m
[32m+[m[32m.factorypath[m
[32m+[m[32m.project[m
[32m+[m[32m.settings[m
[32m+[m[32m.springBeans[m
[32m+[m[32m.sts4-cache[m
[32m+[m
[32m+[m[32m### IntelliJ IDEA ###[m
[32m+[m[32m.idea[m
[32m+[m[32m*.iws[m
[32m+[m[32m*.iml[m
[32m+[m[32m*.ipr[m
[32m+[m
[32m+[m[32m### NetBeans ###[m
[32m+[m[32m/nbproject/private/[m
[32m+[m[32m/nbbuild/[m
[32m+[m[32m/dist/[m
[32m+[m[32m/nbdist/[m
[32m+[m[32m/.nb-gradle/[m
[32m+[m[32mbuild/[m
[32m+[m[32m!**/src/main/**/build/[m
[32m+[m[32m!**/src/test/**/build/[m
[32m+[m
[32m+[m[32m### VS Code ###[m
[32m+[m[32m.vscode/[m
[1mdiff --git a/MovieApp/Customer-Service-MS/.mvn/wrapper/maven-wrapper.properties b/MovieApp/Customer-Service-MS/.mvn/wrapper/maven-wrapper.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..12fbe1e[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/.mvn/wrapper/maven-wrapper.properties[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m# Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m# or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m# distributed with this work for additional information[m
[32m+[m[32m# regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m# to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m# "License"); you may not use this file except in compliance[m
[32m+[m[32m# with the License.  You may obtain a copy of the License at[m
[32m+[m[32m#[m
[32m+[m[32m#   http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m#[m
[32m+[m[32m# Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m# software distributed under the License is distributed on an[m
[32m+[m[32m# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m# KIND, either express or implied.  See the License for the[m
[32m+[m[32m# specific language governing permissions and limitations[m
[32m+[m[32m# under the License.[m
[32m+[m[32mwrapperVersion=3.3.2[m
[32m+[m[32mdistributionType=only-script[m
[32m+[m[32mdistributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.11/apache-maven-3.9.11-bin.zip[m
[1mdiff --git a/MovieApp/Customer-Service-MS/mvnw b/MovieApp/Customer-Service-MS/mvnw[m
[1mnew file mode 100644[m
[1mindex 0000000..19529dd[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/mvnw[m
[36m@@ -0,0 +1,259 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m# or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m# distributed with this work for additional information[m
[32m+[m[32m# regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m# to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m# "License"); you may not use this file except in compliance[m
[32m+[m[32m# with the License.  You may obtain a copy of the License at[m
[32m+[m[32m#[m
[32m+[m[32m#    http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m#[m
[32m+[m[32m# Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m# software distributed under the License is distributed on an[m
[32m+[m[32m# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m# KIND, either express or implied.  See the License for the[m
[32m+[m[32m# specific language governing permissions and limitations[m
[32m+[m[32m# under the License.[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Apache Maven Wrapper startup batch script, version 3.3.2[m
[32m+[m[32m#[m
[32m+[m[32m# Optional ENV vars[m
[32m+[m[32m# -----------------[m
[32m+[m[32m#   JAVA_HOME - location of a JDK home dir, required when download maven via java source[m
[32m+[m[32m#   MVNW_REPOURL - repo url base for downloading maven distribution[m
[32m+[m[32m#   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven[m
[32m+[m[32m#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mset -euf[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != debug ] || set -x[m
[32m+[m
[32m+[m[32m# OS specific support.[m
[32m+[m[32mnative_path() { printf %s\\n "$1"; }[m
[32m+[m[32mcase "$(uname)" in[m
[32m+[m[32mCYGWIN* | MINGW*)[m
[32m+[m[32m  [ -z "${JAVA_HOME-}" ] || JAVA_HOME="$(cygpath --unix "$JAVA_HOME")"[m
[32m+[m[32m  native_path() { cygpath --path --windows "$1"; }[m
[32m+[m[32m  ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# set JAVACMD and JAVACCMD[m
[32m+[m[32mset_java_home() {[m
[32m+[m[32m  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched[m
[32m+[m[32m  if [ -n "${JAVA_HOME-}" ]; then[m
[32m+[m[32m    if [ -x "$JAVA_HOME/jre/sh/java" ]; then[m
[32m+[m[32m      # IBM's JDK on AIX uses strange locations for the executables[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/jre/sh/java"[m
[32m+[m[32m      JAVACCMD="$JAVA_HOME/jre/sh/javac"[m
[32m+[m[32m    else[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/bin/java"[m
[32m+[m[32m      JAVACCMD="$JAVA_HOME/bin/javac"[m
[32m+[m
[32m+[m[32m      if [ ! -x "$JAVACMD" ] || [ ! -x "$JAVACCMD" ]; then[m
[32m+[m[32m        echo "The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run." >&2[m
[32m+[m[32m        echo "JAVA_HOME is set to \"$JAVA_HOME\", but \"\$JAVA_HOME/bin/java\" or \"\$JAVA_HOME/bin/javac\" does not exist." >&2[m
[32m+[m[32m        return 1[m
[32m+[m[32m      fi[m
[32m+[m[32m    fi[m
[32m+[m[32m  else[m
[32m+[m[32m    JAVACMD="$([m
[32m+[m[32m      'set' +e[m
[32m+[m[32m      'unset' -f command 2>/dev/null[m
[32m+[m[32m      'command' -v java[m
[32m+[m[32m    )" || :[m
[32m+[m[32m    JAVACCMD="$([m
[32m+[m[32m      'set' +e[m
[32m+[m[32m      'unset' -f command 2>/dev/null[m
[32m+[m[32m      'command' -v javac[m
[32m+[m[32m    )" || :[m
[32m+[m
[32m+[m[32m    if [ ! -x "${JAVACMD-}" ] || [ ! -x "${JAVACCMD-}" ]; then[m
[32m+[m[32m      echo "The java/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run." >&2[m
[32m+[m[32m      return 1[m
[32m+[m[32m    fi[m
[32m+[m[32m  fi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# hash string like Java String::hashCode[m
[32m+[m[32mhash_string() {[m
[32m+[m[32m  str="${1:-}" h=0[m
[32m+[m[32m  while [ -n "$str" ]; do[m
[32m+[m[32m    char="${str%"${str#?}"}"[m
[32m+[m[32m    h=$(((h * 31 + $(LC_CTYPE=C printf %d "'$char")) % 4294967296))[m
[32m+[m[32m    str="${str#?}"[m
[32m+[m[32m  done[m
[32m+[m[32m  printf %x\\n $h[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mverbose() { :; }[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != true ] || verbose() { printf %s\\n "${1-}"; }[m
[32m+[m
[32m+[m[32mdie() {[m
[32m+[m[32m  printf %s\\n "$1" >&2[m
[32m+[m[32m  exit 1[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtrim() {[m
[32m+[m[32m  # MWRAPPER-139:[m
[32m+[m[32m  #   Trims trailing and leading whitespace, carriage returns, tabs, and linefeeds.[m
[32m+[m[32m  #   Needed for removing poorly interpreted newline sequences when running in more[m
[32m+[m[32m  #   exotic environments such as mingw bash on Windows.[m
[32m+[m[32m  printf "%s" "${1}" | tr -d '[:space:]'[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# parse distributionUrl and optional distributionSha256Sum, requires .mvn/wrapper/maven-wrapper.properties[m
[32m+[m[32mwhile IFS="=" read -r key value; do[m
[32m+[m[32m  case "${key-}" in[m
[32m+[m[32m  distributionUrl) distributionUrl=$(trim "${value-}") ;;[m
[32m+[m[32m  distributionSha256Sum) distributionSha256Sum=$(trim "${value-}") ;;[m
[32m+[m[32m  esac[m
[32m+[m[32mdone <"${0%/*}/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m[32m[ -n "${distributionUrl-}" ] || die "cannot read distributionUrl property in ${0%/*}/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m
[32m+[m[32mcase "${distributionUrl##*/}" in[m
[32m+[m[32mmaven-mvnd-*bin.*)[m
[32m+[m[32m  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/[m
[32m+[m[32m  case "${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)" in[m
[32m+[m[32m  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;[m
[32m+[m[32m  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;[m
[32m+[m[32m  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;[m
[32m+[m[32m  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;[m
[32m+[m[32m  *)[m
[32m+[m[32m    echo "Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version" >&2[m
[32m+[m[32m    distributionPlatform=linux-amd64[m
[32m+[m[32m    ;;[m
[32m+[m[32m  esac[m
[32m+[m[32m  distributionUrl="${distributionUrl%-bin.*}-$distributionPlatform.zip"[m
[32m+[m[32m  ;;[m
[32m+[m[32mmaven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/ ;;[m
[32m+[m[32m*) MVN_CMD="mvn${0##*/mvnw}" _MVNW_REPO_PATTERN=/org/apache/maven/ ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# apply MVNW_REPOURL and calculate MAVEN_HOME[m
[32m+[m[32m# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>[m
[32m+[m[32m[ -z "${MVNW_REPOURL-}" ] || distributionUrl="$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*"$_MVNW_REPO_PATTERN"}"[m
[32m+[m[32mdistributionUrlName="${distributionUrl##*/}"[m
[32m+[m[32mdistributionUrlNameMain="${distributionUrlName%.*}"[m
[32m+[m[32mdistributionUrlNameMain="${distributionUrlNameMain%-bin}"[m
[32m+[m[32mMAVEN_USER_HOME="${MAVEN_USER_HOME:-${HOME}/.m2}"[m
[32m+[m[32mMAVEN_HOME="${MAVEN_USER_HOME}/wrapper/dists/${distributionUrlNameMain-}/$(hash_string "$distributionUrl")"[m
[32m+[m
[32m+[m[32mexec_maven() {[m
[32m+[m[32m  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :[m
[32m+[m[32m  exec "$MAVEN_HOME/bin/$MVN_CMD" "$@" || die "cannot exec $MAVEN_HOME/bin/$MVN_CMD"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif [ -d "$MAVEN_HOME" ]; then[m
[32m+[m[32m  verbose "found existing MAVEN_HOME at $MAVEN_HOME"[m
[32m+[m[32m  exec_maven "$@"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mcase "${distributionUrl-}" in[m
[32m+[m[32m*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;[m
[32m+[m[32m*) die "distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'" ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# prepare tmp dir[m
[32m+[m[32mif TMP_DOWNLOAD_DIR="$(mktemp -d)" && [ -d "$TMP_DOWNLOAD_DIR" ]; then[m
[32m+[m[32m  clean() { rm -rf -- "$TMP_DOWNLOAD_DIR"; }[m
[32m+[m[32m  trap clean HUP INT TERM EXIT[m
[32m+[m[32melse[m
[32m+[m[32m  die "cannot create temp dir"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mmkdir -p -- "${MAVEN_HOME%/*}"[m
[32m+[m
[32m+[m[32m# Download and Install Apache Maven[m
[32m+[m[32mverbose "Couldn't find MAVEN_HOME, downloading and installing it ..."[m
[32m+[m[32mverbose "Downloading from: $distributionUrl"[m
[32m+[m[32mverbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m
[32m+[m[32m# select .zip or .tar.gz[m
[32m+[m[32mif ! command -v unzip >/dev/null; then[m
[32m+[m[32m  distributionUrl="${distributionUrl%.zip}.tar.gz"[m
[32m+[m[32m  distributionUrlName="${distributionUrl##*/}"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# verbose opt[m
[32m+[m[32m__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v[m
[32m+[m
[32m+[m[32m# normalize http auth[m
[32m+[m[32mcase "${MVNW_PASSWORD:+has-password}" in[m
[32m+[m[32m'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;[m
[32m+[m[32mhas-password) [ -n "${MVNW_USERNAME-}" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -z "${MVNW_USERNAME-}" ] && command -v wget >/dev/null; then[m
[32m+[m[32m  verbose "Found wget ... using wget"[m
[32m+[m[32m  wget ${__MVNW_QUIET_WGET:+"$__MVNW_QUIET_WGET"} "$distributionUrl" -O "$TMP_DOWNLOAD_DIR/$distributionUrlName" || die "wget: Failed to fetch $distributionUrl"[m
[32m+[m[32melif [ -z "${MVNW_USERNAME-}" ] && command -v curl >/dev/null; then[m
[32m+[m[32m  verbose "Found curl ... using curl"[m
[32m+[m[32m  curl ${__MVNW_QUIET_CURL:+"$__MVNW_QUIET_CURL"} -f -L -o "$TMP_DOWNLOAD_DIR/$distributionUrlName" "$distributionUrl" || die "curl: Failed to fetch $distributionUrl"[m
[32m+[m[32melif set_java_home; then[m
[32m+[m[32m  verbose "Falling back to use Java to download"[m
[32m+[m[32m  javaSource="$TMP_DOWNLOAD_DIR/Downloader.java"[m
[32m+[m[32m  targetZip="$TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m[32m  cat >"$javaSource" <<-END[m
[32m+[m	[32mpublic class Downloader extends java.net.Authenticator[m
[32m+[m	[32m{[m
[32m+[m	[32m  protected java.net.PasswordAuthentication getPasswordAuthentication()[m
[32m+[m	[32m  {[m
[32m+[m	[32m    return new java.net.PasswordAuthentication( System.getenv( "MVNW_USERNAME" ), System.getenv( "MVNW_PASSWORD" ).toCharArray() );[m
[32m+[m	[32m  }[m
[32m+[m	[32m  public static void main( String[] args ) throws Exception[m
[32m+[m	[32m  {[m
[32m+[m	[32m    setDefault( new Downloader() );[m
[32m+[m	[32m    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );[m
[32m+[m	[32m  }[m
[32m+[m	[32m}[m
[32m+[m	[32mEND[m
[32m+[m[32m  # For Cygwin/MinGW, switch paths to Windows format before running javac and java[m
[32m+[m[32m  verbose " - Compiling Downloader.java ..."[m
[32m+[m[32m  "$(native_path "$JAVACCMD")" "$(native_path "$javaSource")" || die "Failed to compile Downloader.java"[m
[32m+[m[32m  verbose " - Running Downloader.java ..."[m
[32m+[m[32m  "$(native_path "$JAVACMD")" -cp "$(native_path "$TMP_DOWNLOAD_DIR")" Downloader "$distributionUrl" "$(native_path "$targetZip")"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# If specified, validate the SHA-256 sum of the Maven distribution zip file[m
[32m+[m[32mif [ -n "${distributionSha256Sum-}" ]; then[m
[32m+[m[32m  distributionSha256Result=false[m
[32m+[m[32m  if [ "$MVN_CMD" = mvnd.sh ]; then[m
[32m+[m[32m    echo "Checksum validation is not supported for maven-mvnd." >&2[m
[32m+[m[32m    echo "Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  elif command -v sha256sum >/dev/null; then[m
[32m+[m[32m    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | sha256sum -c >/dev/null 2>&1; then[m
[32m+[m[32m      distributionSha256Result=true[m
[32m+[m[32m    fi[m
[32m+[m[32m  elif command -v shasum >/dev/null; then[m
[32m+[m[32m    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | shasum -a 256 -c >/dev/null 2>&1; then[m
[32m+[m[32m      distributionSha256Result=true[m
[32m+[m[32m    fi[m
[32m+[m[32m  else[m
[32m+[m[32m    echo "Checksum validation was requested but neither 'sha256sum' or 'shasum' are available." >&2[m
[32m+[m[32m    echo "Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  fi[m
[32m+[m[32m  if [ $distributionSha256Result = false ]; then[m
[32m+[m[32m    echo "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised." >&2[m
[32m+[m[32m    echo "If you updated your Maven version, you need to update the specified distributionSha256Sum property." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  fi[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# unzip and move[m
[32m+[m[32mif command -v unzip >/dev/null; then[m
[32m+[m[32m  unzip ${__MVNW_QUIET_UNZIP:+"$__MVNW_QUIET_UNZIP"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -d "$TMP_DOWNLOAD_DIR" || die "failed to unzip"[m
[32m+[m[32melse[m
[32m+[m[32m  tar xzf${__MVNW_QUIET_TAR:+"$__MVNW_QUIET_TAR"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -C "$TMP_DOWNLOAD_DIR" || die "failed to untar"[m
[32m+[m[32mfi[m
[32m+[m[32mprintf %s\\n "$distributionUrl" >"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain/mvnw.url"[m
[32m+[m[32mmv -- "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" "$MAVEN_HOME" || [ -d "$MAVEN_HOME" ] || die "fail to move MAVEN_HOME"[m
[32m+[m
[32m+[m[32mclean || :[m
[32m+[m[32mexec_maven "$@"[m
[1mdiff --git a/MovieApp/Customer-Service-MS/mvnw.cmd b/MovieApp/Customer-Service-MS/mvnw.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..249bdf3[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/mvnw.cmd[m
[36m@@ -0,0 +1,149 @@[m
[32m+[m[32m<# : batch portion[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m[32m@REM Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m@REM or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m@REM distributed with this work for additional information[m
[32m+[m[32m@REM regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m@REM to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m@REM "License"); you may not use this file except in compliance[m
[32m+[m[32m@REM with the License.  You may obtain a copy of the License at[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM    http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m@REM software distributed under the License is distributed on an[m
[32m+[m[32m@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m@REM KIND, either express or implied.  See the License for the[m
[32m+[m[32m@REM specific language governing permissions and limitations[m
[32m+[m[32m@REM under the License.[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m[32m@REM Apache Maven Wrapper startup batch script, version 3.3.2[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Optional ENV vars[m
[32m+[m[32m@REM   MVNW_REPOURL - repo url base for downloading maven distribution[m
[32m+[m[32m@REM   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven[m
[32m+[m[32m@REM   MVNW_VERBOSE - true: enable verbose log; others: silence the output[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m@IF "%__MVNW_ARG0_NAME__%"=="" (SET __MVNW_ARG0_NAME__=%~nx0)[m
[32m+[m[32m@SET __MVNW_CMD__=[m
[32m+[m[32m@SET __MVNW_ERROR__=[m
[32m+[m[32m@SET __MVNW_PSMODULEP_SAVE=%PSModulePath%[m
[32m+[m[32m@SET PSModulePath=[m
[32m+[m[32m@FOR /F "usebackq tokens=1* delims==" %%A IN (`powershell -noprofile "& {$scriptDir='%~dp0'; $script='%__MVNW_ARG0_NAME__%'; icm -ScriptBlock ([Scriptblock]::Create((Get-Content -Raw '%~f0'))) -NoNewScope}"`) DO @([m
[32m+[m[32m  IF "%%A"=="MVN_CMD" (set __MVNW_CMD__=%%B) ELSE IF "%%B"=="" (echo %%A) ELSE (echo %%A=%%B)[m
[32m+[m[32m)[m
[32m+[m[32m@SET PSModulePath=%__MVNW_PSMODULEP_SAVE%[m
[32m+[m[32m@SET __MVNW_PSMODULEP_SAVE=[m
[32m+[m[32m@SET __MVNW_ARG0_NAME__=[m
[32m+[m[32m@SET MVNW_USERNAME=[m
[32m+[m[32m@SET MVNW_PASSWORD=[m
[32m+[m[32m@IF NOT "%__MVNW_CMD__%"=="" (%__MVNW_CMD__% %*)[m
[32m+[m[32m@echo Cannot start maven from wrapper >&2 && exit /b 1[m
[32m+[m[32m@GOTO :EOF[m
[32m+[m[32m: end batch / begin powershell #>[m
[32m+[m
[32m+[m[32m$ErrorActionPreference = "Stop"[m
[32m+[m[32mif ($env:MVNW_VERBOSE -eq "true") {[m
[32m+[m[32m  $VerbosePreference = "Continue"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# calculate distributionUrl, requires .mvn/wrapper/maven-wrapper.properties[m
[32m+[m[32m$distributionUrl = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionUrl[m
[32m+[m[32mif (!$distributionUrl) {[m
[32m+[m[32m  Write-Error "cannot read distributionUrl property in $scriptDir/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mswitch -wildcard -casesensitive ( $($distributionUrl -replace '^.*/','') ) {[m
[32m+[m[32m  "maven-mvnd-*" {[m
[32m+[m[32m    $USE_MVND = $true[m
[32m+[m[32m    $distributionUrl = $distributionUrl -replace '-bin\.[^.]*$',"-windows-amd64.zip"[m
[32m+[m[32m    $MVN_CMD = "mvnd.cmd"[m
[32m+[m[32m    break[m
[32m+[m[32m  }[m
[32m+[m[32m  default {[m
[32m+[m[32m    $USE_MVND = $false[m
[32m+[m[32m    $MVN_CMD = $script -replace '^mvnw','mvn'[m
[32m+[m[32m    break[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# apply MVNW_REPOURL and calculate MAVEN_HOME[m
[32m+[m[32m# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>[m
[32m+[m[32mif ($env:MVNW_REPOURL) {[m
[32m+[m[32m  $MVNW_REPO_PATTERN = if ($USE_MVND) { "/org/apache/maven/" } else { "/maven/mvnd/" }[m
[32m+[m[32m  $distributionUrl = "$env:MVNW_REPOURL$MVNW_REPO_PATTERN$($distributionUrl -replace '^.*'+$MVNW_REPO_PATTERN,'')"[m
[32m+[m[32m}[m
[32m+[m[32m$distributionUrlName = $distributionUrl -replace '^.*/',''[m
[32m+[m[32m$distributionUrlNameMain = $distributionUrlName -replace '\.[^.]*$','' -replace '-bin$',''[m
[32m+[m[32m$MAVEN_HOME_PARENT = "$HOME/.m2/wrapper/dists/$distributionUrlNameMain"[m
[32m+[m[32mif ($env:MAVEN_USER_HOME) {[m
[32m+[m[32m  $MAVEN_HOME_PARENT = "$env:MAVEN_USER_HOME/wrapper/dists/$distributionUrlNameMain"[m
[32m+[m[32m}[m
[32m+[m[32m$MAVEN_HOME_NAME = ([System.Security.Cryptography.MD5]::Create().ComputeHash([byte[]][char[]]$distributionUrl) | ForEach-Object {$_.ToString("x2")}) -join ''[m
[32m+[m[32m$MAVEN_HOME = "$MAVEN_HOME_PARENT/$MAVEN_HOME_NAME"[m
[32m+[m
[32m+[m[32mif (Test-Path -Path "$MAVEN_HOME" -PathType Container) {[m
[32m+[m[32m  Write-Verbose "found existing MAVEN_HOME at $MAVEN_HOME"[m
[32m+[m[32m  Write-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"[m
[32m+[m[32m  exit $?[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif (! $distributionUrlNameMain -or ($distributionUrlName -eq $distributionUrlNameMain)) {[m
[32m+[m[32m  Write-Error "distributionUrl is not valid, must end with *-bin.zip, but found $distributionUrl"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# prepare tmp dir[m
[32m+[m[32m$TMP_DOWNLOAD_DIR_HOLDER = New-TemporaryFile[m
[32m+[m[32m$TMP_DOWNLOAD_DIR = New-Item -Itemtype Directory -Path "$TMP_DOWNLOAD_DIR_HOLDER.dir"[m
[32m+[m[32m$TMP_DOWNLOAD_DIR_HOLDER.Delete() | Out-Null[m
[32m+[m[32mtrap {[m
[32m+[m[32m  if ($TMP_DOWNLOAD_DIR.Exists) {[m
[32m+[m[32m    try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }[m
[32m+[m[32m    catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mNew-Item -Itemtype Directory -Path "$MAVEN_HOME_PARENT" -Force | Out-Null[m
[32m+[m
[32m+[m[32m# Download and Install Apache Maven[m
[32m+[m[32mWrite-Verbose "Couldn't find MAVEN_HOME, downloading and installing it ..."[m
[32m+[m[32mWrite-Verbose "Downloading from: $distributionUrl"[m
[32m+[m[32mWrite-Verbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m
[32m+[m[32m$webclient = New-Object System.Net.WebClient[m
[32m+[m[32mif ($env:MVNW_USERNAME -and $env:MVNW_PASSWORD) {[m
[32m+[m[32m  $webclient.Credentials = New-Object System.Net.NetworkCredential($env:MVNW_USERNAME, $env:MVNW_PASSWORD)[m
[32m+[m[32m}[m
[32m+[m[32m[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12[m
[32m+[m[32m$webclient.DownloadFile($distributionUrl, "$TMP_DOWNLOAD_DIR/$distributionUrlName") | Out-Null[m
[32m+[m
[32m+[m[32m# If specified, validate the SHA-256 sum of the Maven distribution zip file[m
[32m+[m[32m$distributionSha256Sum = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionSha256Sum[m
[32m+[m[32mif ($distributionSha256Sum) {[m
[32m+[m[32m  if ($USE_MVND) {[m
[32m+[m[32m    Write-Error "Checksum validation is not supported for maven-mvnd. `nPlease disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties."[m
[32m+[m[32m  }[m
[32m+[m[32m  Import-Module $PSHOME\Modules\Microsoft.PowerShell.Utility -Function Get-FileHash[m
[32m+[m[32m  if ((Get-FileHash "$TMP_DOWNLOAD_DIR/$distributionUrlName" -Algorithm SHA256).Hash.ToLower() -ne $distributionSha256Sum) {[m
[32m+[m[32m    Write-Error "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised. If you updated your Maven version, you need to update the specified distributionSha256Sum property."[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# unzip and move[m
[32m+[m[32mExpand-Archive "$TMP_DOWNLOAD_DIR/$distributionUrlName" -DestinationPath "$TMP_DOWNLOAD_DIR" | Out-Null[m
[32m+[m[32mRename-Item -Path "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" -NewName $MAVEN_HOME_NAME | Out-Null[m
[32m+[m[32mtry {[m
[32m+[m[32m  Move-Item -Path "$TMP_DOWNLOAD_DIR/$MAVEN_HOME_NAME" -Destination $MAVEN_HOME_PARENT | Out-Null[m
[32m+[m[32m} catch {[m
[32m+[m[32m  if (! (Test-Path -Path "$MAVEN_HOME" -PathType Container)) {[m
[32m+[m[32m    Write-Error "fail to move MAVEN_HOME"[m
[32m+[m[32m  }[m
[32m+[m[32m} finally {[m
[32m+[m[32m  try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }[m
[32m+[m[32m  catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mWrite-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"[m
[1mdiff --git a/MovieApp/Customer-Service-MS/pom.xml b/MovieApp/Customer-Service-MS/pom.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..9107476[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/pom.xml[m
[36m@@ -0,0 +1,125 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[32m+[m	[32mxsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">[m
[32m+[m	[32m<modelVersion>4.0.0</modelVersion>[m
[32m+[m	[32m<parent>[m
[32m+[m		[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m		[32m<artifactId>spring-boot-starter-parent</artifactId>[m
[32m+[m		[32m<version>3.5.4</version>[m
[32m+[m		[32m<relativePath/> <!-- lookup parent from repository -->[m
[32m+[m	[32m</parent>[m
[32m+[m	[32m<groupId>com.customer</groupId>[m
[32m+[m	[32m<artifactId>Customer-Service-MS</artifactId>[m
[32m+[m	[32m<version>0.0.1-SNAPSHOT</version>[m
[32m+[m	[32m<name>Customer-Service-MS</name>[m
[32m+[m	[32m<description>Demo project for Spring Boot</description>[m
[32m+[m	[32m<url/>[m
[32m+[m	[32m<licenses>[m
[32m+[m		[32m<license/>[m
[32m+[m	[32m</licenses>[m
[32m+[m	[32m<developers>[m
[32m+[m		[32m<developer/>[m
[32m+[m	[32m</developers>[m
[32m+[m	[32m<scm>[m
[32m+[m		[32m<connection/>[m
[32m+[m		[32m<developerConnection/>[m
[32m+[m		[32m<tag/>[m
[32m+[m		[32m<url/>[m
[32m+[m	[32m</scm>[m
[32m+[m	[32m<properties>[m
[32m+[m		[32m<java.version>17</java.version>[m
[32m+[m		[32m<spring-cloud.version>2025.0.0</spring-cloud.version>[m
[32m+[m	[32m</properties>[m
[32m+[m	[32m<dependencies>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-actuator</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-data-jpa</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-web</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.cloud</groupId>[m
[32m+[m			[32m<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m[41m		[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.cloud</groupId>[m
[32m+[m			[32m<artifactId>spring-cloud-starter-openfeign</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m[41m		[m
[32m+[m		[32m<dependency>[m
[32m+[m[41m    [m		[32m<groupId>org.springdoc</groupId>[m
[32m+[m[41m    [m		[32m<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>[m
[32m+[m[41m    [m		[32m<version>2.8.9</version>[m
[32m+[m		[32m</dependency>[m
[32m+[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-devtools</artifactId>[m
[32m+[m			[32m<scope>runtime</scope>[m
[32m+[m			[32m<optional>true</optional>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>com.mysql</groupId>[m
[32m+[m			[32m<artifactId>mysql-connector-j</artifactId>[m
[32m+[m			[32m<scope>runtime</scope>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.projectlombok</groupId>[m
[32m+[m			[32m<artifactId>lombok</artifactId>[m
[32m+[m			[32m<optional>true</optional>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-test</artifactId>[m
[32m+[m			[32m<scope>test</scope>[m
[32m+[m		[32m</dependency>[m
[32m+[m	[32m</dependencies>[m
[32m+[m	[32m<dependencyManagement>[m
[32m+[m		[32m<dependencies>[m
[32m+[m			[32m<dependency>[m
[32m+[m				[32m<groupId>org.springframework.cloud</groupId>[m
[32m+[m				[32m<artifactId>spring-cloud-dependencies</artifactId>[m
[32m+[m				[32m<version>${spring-cloud.version}</version>[m
[32m+[m				[32m<type>pom</type>[m
[32m+[m				[32m<scope>import</scope>[m
[32m+[m			[32m</dependency>[m
[32m+[m		[32m</dependencies>[m
[32m+[m	[32m</dependencyManagement>[m
[32m+[m
[32m+[m	[32m<build>[m
[32m+[m		[32m<plugins>[m
[32m+[m			[32m<plugin>[m
[32m+[m				[32m<groupId>org.apache.maven.plugins</groupId>[m
[32m+[m				[32m<artifactId>maven-compiler-plugin</artifactId>[m
[32m+[m				[32m<configuration>[m
[32m+[m					[32m<annotationProcessorPaths>[m
[32m+[m						[32m<path>[m
[32m+[m							[32m<groupId>org.projectlombok</groupId>[m
[32m+[m							[32m<artifactId>lombok</artifactId>[m
[32m+[m						[32m</path>[m
[32m+[m					[32m</annotationProcessorPaths>[m
[32m+[m				[32m</configuration>[m
[32m+[m			[32m</plugin>[m
[32m+[m			[32m<plugin>[m
[32m+[m				[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m				[32m<artifactId>spring-boot-maven-plugin</artifactId>[m
[32m+[m				[32m<configuration>[m
[32m+[m					[32m<excludes>[m
[32m+[m						[32m<exclude>[m
[32m+[m							[32m<groupId>org.projectlombok</groupId>[m
[32m+[m							[32m<artifactId>lombok</artifactId>[m
[32m+[m						[32m</exclude>[m
[32m+[m					[32m</excludes>[m
[32m+[m				[32m</configuration>[m
[32m+[m			[32m</plugin>[m
[32m+[m		[32m</plugins>[m
[32m+[m	[32m</build>[m
[32m+[m
[32m+[m[32m</project>[m
[1mdiff --git a/MovieApp/Customer-Service-MS/src/main/java/com/customer/CustomerServiceMsApplication.java b/MovieApp/Customer-Service-MS/src/main/java/com/customer/CustomerServiceMsApplication.java[m
[1mnew file mode 100644[m
[1mindex 0000000..e46b394[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/src/main/java/com/customer/CustomerServiceMsApplication.java[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mpackage com.customer;[m
[32m+[m
[32m+[m[32mimport org.springframework.boot.SpringApplication;[m
[32m+[m[32mimport org.springframework.boot.autoconfigure.SpringBootApplication;[m
[32m+[m[32mimport org.springframework.cloud.openfeign.EnableFeignClients;[m
[32m+[m
[32m+[m[32m@SpringBootApplication[m
[32m+[m[32m@EnableFeignClients[m
[32m+[m[32mpublic class CustomerServiceMsApplication {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m		[32mSpringApplication.run(CustomerServiceMsApplication.class, args);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Customer-Service-MS/src/main/java/com/customer/client/BookingClient.java b/MovieApp/Customer-Service-MS/src/main/java/com/customer/client/BookingClient.java[m
[1mnew file mode 100644[m
[1mindex 0000000..c1bdccc[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/src/main/java/com/customer/client/BookingClient.java[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32mpackage com.customer.client;[m
[32m+[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport org.springframework.cloud.openfeign.FeignClient;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.GetMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PathVariable;[m
[32m+[m
[32m+[m[32mimport com.customer.dto.BookingDTO;[m
[32m+[m[32mimport com.customer.dto.CustomerBookingResponseDTO;[m
[32m+[m
[32m+[m[32m@FeignClient(name="Booking-Service-MS", url="http://localhost:1111")[m
[32m+[m[32mpublic interface BookingClient {[m
[32m+[m[41m	[m
[32m+[m[41m	[m
[32m+[m	[32m@GetMapping("/api/v1/{id}/bookings")[m
[32m+[m[32m    CustomerBookingResponseDTO getCustomerWithBookings(@PathVariable("id") Long id);[m
[32m+[m[41m	[m
[32m+[m	[32m@GetMapping("/api/v1/{customerId}/bookings-list")[m
[32m+[m[32m    List<BookingDTO> getBookingsByCustomerId(@PathVariable("customerId") Long customerId);[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Customer-Service-MS/src/main/java/com/customer/config/AppConfig.java b/MovieApp/Customer-Service-MS/src/main/java/com/customer/config/AppConfig.java[m
[1mnew file mode 100644[m
[1mindex 0000000..1abab5d[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/src/main/java/com/customer/config/AppConfig.java[m
[36m@@ -0,0 +1,49 @@[m
[32m+[m[32mpackage com.customer.config;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport org.springframework.beans.factory.annotation.Value;[m
[32m+[m[32mimport org.springframework.context.annotation.Bean;[m
[32m+[m[32mimport org.springframework.context.annotation.Configuration;[m
[32m+[m
[32m+[m[32mimport io.swagger.v3.oas.models.OpenAPI;[m
[32m+[m[32mimport io.swagger.v3.oas.models.info.Contact;[m
[32m+[m[32mimport io.swagger.v3.oas.models.info.Info;[m
[32m+[m[32mimport io.swagger.v3.oas.models.info.License;[m
[32m+[m[32mimport io.swagger.v3.oas.models.servers.Server;[m
[32m+[m
[32m+[m
[32m+[m[32m@Configuration[m
[32m+[m[32mpublic class AppConfig {[m
[32m+[m[41m	[m
[32m+[m	[32m@Value("${techacademy.openapi.dev-url}")[m
[32m+[m	[32mprivate String devUrl;[m
[32m+[m[41m [m
[32m+[m	[32m@Value("${techacademy.openapi.prod-url}")[m
[32m+[m	[32mprivate String prodUrl;[m
[32m+[m[41m [m
[32m+[m	[32m@Bean[m
[32m+[m	[32mpublic OpenAPI myOpenAPI() {[m
[32m+[m		[32mServer devServer = new Server();[m
[32m+[m		[32mdevServer.setUrl(devUrl);[m
[32m+[m		[32mdevServer.setDescription("Server URL in Development environment");[m
[32m+[m[41m [m
[32m+[m		[32mServer prodServer = new Server();[m
[32m+[m		[32mprodServer.setUrl(prodUrl);[m
[32m+[m		[32mprodServer.setDescription("Server URL in Production environment");[m
[32m+[m[41m [m
[32m+[m		[32mContact contact = new Contact();[m
[32m+[m		[32mcontact.setEmail("XXXX@gmail.com");[m
[32m+[m		[32mcontact.setName("XXXx");[m
[32m+[m		[32mcontact.setUrl("https://www.XXXX.com");[m
[32m+[m[41m [m
[32m+[m		[32mLicense mitLicense = new License().name("MIT License").url("https://choosealicense.com/licenses/mit/");[m
[32m+[m[41m [m
[32m+[m		[32mInfo info = new Info().title("Ecommerce REST API").version("1.0").contact(contact)[m
[32m+[m				[32m.description("This API exposes endpoints to manage ECOMMERCE OPERATIONS.")[m
[32m+[m				[32m.termsOfService("https://www.XXXX.com/terms").license(mitLicense);[m
[32m+[m[41m [m
[32m+[m		[32mreturn new OpenAPI().info(info).servers(List.of(devServer, prodServer));[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Customer-Service-MS/src/main/java/com/customer/controller/CustomerController.java b/MovieApp/Customer-Service-MS/src/main/java/com/customer/controller/CustomerController.java[m
[1mnew file mode 100644[m
[1mindex 0000000..fdd9983[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/src/main/java/com/customer/controller/CustomerController.java[m
[36m@@ -0,0 +1,72 @@[m
[32m+[m[32mpackage com.customer.controller;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport org.springframework.web.bind.annotation.DeleteMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.GetMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PathVariable;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PostMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PutMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RequestBody;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RequestMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RequestParam;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RestController;[m
[32m+[m
[32m+[m[32mimport com.customer.dto.BookingDTO;[m
[32m+[m[32mimport com.customer.model.Customer;[m
[32m+[m[32mimport com.customer.service.CustomerService;[m
[32m+[m
[32m+[m
[32m+[m[32mimport lombok.RequiredArgsConstructor;[m
[32m+[m
[32m+[m[32m@RestController[m
[32m+[m[32m@RequestMapping("/customers")[m
[32m+[m[32m@RequiredArgsConstructor[m
[32m+[m[32mpublic class CustomerController {[m
[32m+[m[41m	[m
[32m+[m	[32mprivate final CustomerService customerService;[m
[32m+[m
[32m+[m[32m    @GetMapping("/{id}")[m
[32m+[m[32m    public Customer getCustomerById(@PathVariable Long id) {[m
[32m+[m[32m        return customerService.getCustomerById(id);[m
[32m+[m[32m    }[m
[32m+[m[32m    @PostMapping[m
[32m+[m[32m    public Customer createCustomer(@RequestBody Customer customer){[m
[32m+[m[41m    [m	[32mreturn customerService.saveCustomer(customer);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @GetMapping[m
[32m+[m[32m    public List<Customer> getAllCustomers() {[m
[32m+[m[32m        return customerService.getAllCustomers();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @PutMapping[m
[32m+[m[32m    public Customer updateCustomer(@RequestBody Customer customer) {[m
[32m+[m[32m        if (customer.getId() == null) {[m
[32m+[m[32m            throw new IllegalArgumentException("Customer ID is required for update");[m
[32m+[m[32m        }[m
[32m+[m[32m        return customerService.updateCustomer(customer);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @DeleteMapping("/{id}")[m
[32m+[m[32m    public void deleteCustomer(@PathVariable Long id) {[m
[32m+[m[32m        customerService.deleteCustomer(id);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @GetMapping("/search")[m
[32m+[m[32m    public List<Customer> searchCustomersByName(@RequestParam String name) {[m
[32m+[m[32m        return customerService.searchCustomersByName(name);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @GetMapping("/email-domain")[m
[32m+[m[32m    public List<Customer> getCustomersByEmailDomain(@RequestParam String domain) {[m
[32m+[m[32m        return customerService.getCustomersByEmailDomain(domain);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    @GetMapping("/{customerId}/bookings-list")[m
[32m+[m[32m    public List<BookingDTO> getBookingsByCustomerId(@PathVariable Long customerId) {[m
[32m+[m[32m        return customerService.getBookingsByCustomerId(customerId);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Customer-Service-MS/src/main/java/com/customer/dto/BookingDTO.java b/MovieApp/Customer-Service-MS/src/main/java/com/customer/dto/BookingDTO.java[m
[1mnew file mode 100644[m
[1mindex 0000000..6944feb[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/src/main/java/com/customer/dto/BookingDTO.java[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32mpackage com.customer.dto;[m
[32m+[m
[32m+[m[32mimport lombok.AllArgsConstructor;[m
[32m+[m[32mimport lombok.Builder;[m
[32m+[m[32mimport lombok.Data;[m
[32m+[m[32mimport lombok.NoArgsConstructor;[m
[32m+[m
[32m+[m[32m@Data[m
[32m+[m[32m@Builder[m
[32m+[m[32m@NoArgsConstructor[m
[32m+[m[32m@AllArgsConstructor[m
[32m+[m[32mpublic class BookingDTO {[m
[32m+[m[32m    private Long id;[m
[32m+[m[32m    private String bookingDate;[m
[32m+[m[32m    private int seats;[m
[32m+[m[32m    private String movieTitle;[m
[32m+[m[32m    private String theaterName;[m
[32m+[m[41m    [m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Customer-Service-MS/src/main/java/com/customer/dto/CustomerBookingResponseDTO.java b/MovieApp/Customer-Service-MS/src/main/java/com/customer/dto/CustomerBookingResponseDTO.java[m
[1mnew file mode 100644[m
[1mindex 0000000..53b128d[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/src/main/java/com/customer/dto/CustomerBookingResponseDTO.java[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32mpackage com.customer.dto;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport lombok.AllArgsConstructor;[m
[32m+[m[32mimport lombok.Builder;[m
[32m+[m[32mimport lombok.Data;[m
[32m+[m[32mimport lombok.NoArgsConstructor;[m
[32m+[m
[32m+[m[32m@Data[m
[32m+[m[32m@Builder[m
[32m+[m[32m@NoArgsConstructor[m
[32m+[m[32m@AllArgsConstructor[m
[32m+[m[32mpublic class CustomerBookingResponseDTO {[m
[32m+[m[32m    private CustomerDTO customer;[m
[32m+[m[32m    private List<BookingDTO> bookings;[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Customer-Service-MS/src/main/java/com/customer/dto/CustomerDTO.java b/MovieApp/Customer-Service-MS/src/main/java/com/customer/dto/CustomerDTO.java[m
[1mnew file mode 100644[m
[1mindex 0000000..1d50243[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/src/main/java/com/customer/dto/CustomerDTO.java[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32mpackage com.customer.dto;[m
[32m+[m
[32m+[m[32mimport lombok.AllArgsConstructor;[m
[32m+[m[32mimport lombok.Builder;[m
[32m+[m[32mimport lombok.Data;[m
[32m+[m[32mimport lombok.NoArgsConstructor;[m
[32m+[m
[32m+[m[32m@Data[m
[32m+[m[32m@Builder[m
[32m+[m[32m@NoArgsConstructor[m
[32m+[m[32m@AllArgsConstructor[m
[32m+[m[32mpublic class CustomerDTO {[m
[32m+[m[32m    private Long id;[m
[32m+[m[32m    private String name;[m
[32m+[m[32m    private String email;[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Customer-Service-MS/src/main/java/com/customer/exception/GlobalExceptionHandler.java b/MovieApp/Customer-Service-MS/src/main/java/com/customer/exception/GlobalExceptionHandler.java[m
[1mnew file mode 100644[m
[1mindex 0000000..7b52783[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/src/main/java/com/customer/exception/GlobalExceptionHandler.java[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mpackage com.customer.exception;[m
[32m+[m
[32m+[m[32mimport org.springframework.web.bind.annotation.ControllerAdvice;[m
[32m+[m
[32m+[m[32m@ControllerAdvice[m
[32m+[m[32mpublic class GlobalExceptionHandler {[m
[32m+[m[41m	[m
[32m+[m[41m	[m
[32m+[m[41m	[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Customer-Service-MS/src/main/java/com/customer/exception/ResourceNotFoundException.java b/MovieApp/Customer-Service-MS/src/main/java/com/customer/exception/ResourceNotFoundException.java[m
[1mnew file mode 100644[m
[1mindex 0000000..2853a5e[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/src/main/java/com/customer/exception/ResourceNotFoundException.java[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32mpackage com.customer.exception;[m
[32m+[m
[32m+[m[32mpublic class ResourceNotFoundException extends RuntimeException{[m
[32m+[m[41m	[m
[32m+[m
[32m+[m	[32mprivate static final long serialVersionUID = 1L;[m
[32m+[m
[32m+[m	[32mpublic ResourceNotFoundException(String message) {[m
[32m+[m[32m        super(message);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Customer-Service-MS/src/main/java/com/customer/model/Customer.java b/MovieApp/Customer-Service-MS/src/main/java/com/customer/model/Customer.java[m
[1mnew file mode 100644[m
[1mindex 0000000..1729cfa[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/src/main/java/com/customer/model/Customer.java[m
[36m@@ -0,0 +1,26 @@[m
[32m+[m[32mpackage com.customer.model;[m
[32m+[m
[32m+[m[32mimport jakarta.persistence.Entity;[m
[32m+[m[32mimport jakarta.persistence.GeneratedValue;[m
[32m+[m[32mimport jakarta.persistence.GenerationType;[m
[32m+[m[32mimport jakarta.persistence.Id;[m
[32m+[m[32mimport jakarta.persistence.Table;[m
[32m+[m[32mimport lombok.AllArgsConstructor;[m
[32m+[m[32mimport lombok.Builder;[m
[32m+[m[32mimport lombok.Data;[m
[32m+[m[32mimport lombok.NoArgsConstructor;[m
[32m+[m
[32m+[m[32m@Entity[m
[32m+[m[32m@Table(name = "customers")[m
[32m+[m[32m@Data[m
[32m+[m[32m@AllArgsConstructor[m
[32m+[m[32m@NoArgsConstructor[m
[32m+[m[32m@Builder[m
[32m+[m[32mpublic class Customer {[m
[32m+[m[32m    @Id[m
[32m+[m[32m    @GeneratedValue(strategy = GenerationType.IDENTITY)[m
[32m+[m[32m    private Long id;[m
[32m+[m
[32m+[m[32m    private String name;[m
[32m+[m[32m    private String email;[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Customer-Service-MS/src/main/java/com/customer/repository/CustomerRepository.java b/MovieApp/Customer-Service-MS/src/main/java/com/customer/repository/CustomerRepository.java[m
[1mnew file mode 100644[m
[1mindex 0000000..318dcb9[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/src/main/java/com/customer/repository/CustomerRepository.java[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32mpackage com.customer.repository;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport org.springframework.data.jpa.repository.JpaRepository;[m
[32m+[m[32mimport org.springframework.data.jpa.repository.Query;[m
[32m+[m[32mimport org.springframework.data.repository.query.Param;[m
[32m+[m[32mimport org.springframework.stereotype.Repository;[m
[32m+[m
[32m+[m[32mimport com.customer.model.Customer;[m
[32m+[m
[32m+[m[32m@Repository[m
[32m+[m[32mpublic interface CustomerRepository extends JpaRepository<Customer, Long>{[m
[32m+[m[41m	[m
[32m+[m	[32m @Query("SELECT c FROM Customer c WHERE c.email LIKE %:domain")[m
[32m+[m	[32m  List<Customer> findCustomersByEmailDomain(@Param("domain") String domain);[m
[32m+[m[41m	 [m
[32m+[m	[32m  List<Customer> findByName(String name);[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Customer-Service-MS/src/main/java/com/customer/service/CustomerService.java b/MovieApp/Customer-Service-MS/src/main/java/com/customer/service/CustomerService.java[m
[1mnew file mode 100644[m
[1mindex 0000000..2a9b22e[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/src/main/java/com/customer/service/CustomerService.java[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32mpackage com.customer.service;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport com.customer.dto.BookingDTO;[m
[32m+[m[32mimport com.customer.dto.CustomerBookingResponseDTO;[m
[32m+[m[32mimport com.customer.model.Customer;[m
[32m+[m
[32m+[m[32mpublic interface CustomerService {[m
[32m+[m[41m	[m
[32m+[m	[32mCustomer getCustomerById(Long id);[m
[32m+[m
[32m+[m[32m    List<Customer> getAllCustomers();[m
[32m+[m
[32m+[m[32m    Customer updateCustomer(Customer customer);[m
[32m+[m
[32m+[m[32m    void deleteCustomer(Long id);[m
[32m+[m[41m    [m
[32m+[m[32m    Customer saveCustomer(Customer customer);[m
[32m+[m
[32m+[m[32m    List<Customer> searchCustomersByName(String name);[m
[32m+[m
[32m+[m[32m    List<Customer> getCustomersByEmailDomain(String domain);[m
[32m+[m
[32m+[m[32m    CustomerBookingResponseDTO getCustomerWithBookings(Long customerId);[m
[32m+[m[41m    [m
[32m+[m[32m    List<BookingDTO> getBookingsByCustomerId(Long customerId);[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Customer-Service-MS/src/main/java/com/customer/service/impl/CustomerServiceImpl.java b/MovieApp/Customer-Service-MS/src/main/java/com/customer/service/impl/CustomerServiceImpl.java[m
[1mnew file mode 100644[m
[1mindex 0000000..89f968a[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/src/main/java/com/customer/service/impl/CustomerServiceImpl.java[m
[36m@@ -0,0 +1,92 @@[m
[32m+[m[32mpackage com.customer.service.impl;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport org.springframework.stereotype.Service;[m
[32m+[m
[32m+[m[32mimport com.customer.client.BookingClient;[m
[32m+[m[32mimport com.customer.dto.BookingDTO;[m
[32m+[m[32mimport com.customer.dto.CustomerBookingResponseDTO;[m
[32m+[m[32mimport com.customer.dto.CustomerDTO;[m
[32m+[m[32mimport com.customer.exception.ResourceNotFoundException;[m
[32m+[m[32mimport com.customer.model.Customer;[m
[32m+[m[32mimport com.customer.repository.CustomerRepository;[m
[32m+[m[32mimport com.customer.service.CustomerService;[m
[32m+[m
[32m+[m[32mimport lombok.RequiredArgsConstructor;[m
[32m+[m
[32m+[m[32m@Service[m
[32m+[m[32m@RequiredArgsConstructor[m
[32m+[m[32mpublic class CustomerServiceImpl implements CustomerService {[m
[32m+[m[41m	[m
[32m+[m	[32mprivate final CustomerRepository customerRepository;[m
[32m+[m[32m    private final BookingClient bookingClient;[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public Customer getCustomerById(Long id) {[m
[32m+[m[32m        return customerRepository.findById(id)[m
[32m+[m[32m                .orElseThrow(() -> new ResourceNotFoundException("Customer with ID " + id + " not found"));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public List<Customer> getAllCustomers() {[m
[32m+[m[32m        return customerRepository.findAll();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public Customer updateCustomer(Customer customer) {[m
[32m+[m[32m        Customer existingCustomer = customerRepository.findById(customer.getId())[m
[32m+[m[32m                .orElseThrow(() -> new ResourceNotFoundException([m
[32m+[m[32m                        "Customer not found with id: " + customer.getId()));[m
[32m+[m
[32m+[m[32m        existingCustomer.setName(customer.getName());[m
[32m+[m[32m        existingCustomer.setEmail(customer.getEmail());[m
[32m+[m
[32m+[m[32m        return customerRepository.save(existingCustomer);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void deleteCustomer(Long id) {[m
[32m+[m[32m        if (!customerRepository.existsById(id)) {[m
[32m+[m[32m            throw new ResourceNotFoundException("Customer with ID " + id + " not found");[m
[32m+[m[32m        }[m
[32m+[m[32m        customerRepository.deleteById(id);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public List<Customer> searchCustomersByName(String name) {[m
[32m+[m[32m        return customerRepository.findByName(name);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public List<Customer> getCustomersByEmailDomain(String domain) {[m
[32m+[m[32m        return customerRepository.findCustomersByEmailDomain(domain);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public CustomerBookingResponseDTO getCustomerWithBookings(Long customerId) {[m
[32m+[m[32m        Customer customer = getCustomerById(customerId);[m
[32m+[m
[32m+[m[32m        List<BookingDTO> bookings = bookingClient.getBookingsByCustomerId(customerId);[m
[32m+[m
[32m+[m[32m        return CustomerBookingResponseDTO.builder()[m
[32m+[m[32m                .customer(CustomerDTO.builder()[m
[32m+[m[32m                        .id(customer.getId())[m
[32m+[m[32m                        .name(customer.getName())[m
[32m+[m[32m                        .email(customer.getEmail())[m
[32m+[m[32m                        .build())[m
[32m+[m[32m                .bookings(bookings)[m
[32m+[m[32m                .build();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic Customer saveCustomer(Customer customer) {[m
[32m+[m		[32mreturn customerRepository.save(customer);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic List<BookingDTO> getBookingsByCustomerId(Long customerId) {[m
[32m+[m	[32m    return bookingClient.getBookingsByCustomerId(customerId);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Customer-Service-MS/src/main/resources/application.properties b/MovieApp/Customer-Service-MS/src/main/resources/application.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..6b12c9f[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/src/main/resources/application.properties[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32mspring.application.name=Customer-Service-MS[m
[32m+[m
[32m+[m[32mserver.port = 2222[m
[32m+[m
[32m+[m[32meureka.client.register-with-eureka=true[m
[32m+[m[32meureka.client.fetch-registry=true[m
[32m+[m[32meureka.client.service-url.defaultZone=http://localhost:8761/eureka/[m
[32m+[m[32meureka.instance.hostname=localhost[m
[32m+[m
[32m+[m[32mspring.datasource.url=jdbc:mysql://localhost:3306/customer-service-ms?createDatabaseIfNotExist=true[m
[32m+[m[32mspring.datasource.username=root[m
[32m+[m[32mspring.datasource.password=root[m
[32m+[m[32mspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver[m
[32m+[m[32mspring.jpa.show-sql=true[m
[32m+[m[32mspring.jpa.format-sql = true[m
[32m+[m[32mspring.jpa.hibernate.ddl-auto=update[m
[32m+[m
[32m+[m[32mspring.jpa.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect[m
[32m+[m
[32m+[m[32mspringdoc.swagger-ui.path=/swagger-ui-custom.html[m
[32m+[m[32mspringdoc.swagger-ui.operationsSorter=method[m
[32m+[m
[32m+[m[32mtechacademy.openapi.dev-url=http://localhost:2222[m
[32m+[m[32mtechacademy.openapi.prod-url=https://xxx-api.com[m
\ No newline at end of file[m
[1mdiff --git a/MovieApp/Customer-Service-MS/src/test/java/com/customer/CustomerServiceMsApplicationTests.java b/MovieApp/Customer-Service-MS/src/test/java/com/customer/CustomerServiceMsApplicationTests.java[m
[1mnew file mode 100644[m
[1mindex 0000000..21f6178[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Customer-Service-MS/src/test/java/com/customer/CustomerServiceMsApplicationTests.java[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mpackage com.customer;[m
[32m+[m
[32m+[m[32mimport org.junit.jupiter.api.Test;[m
[32m+[m[32mimport org.springframework.boot.test.context.SpringBootTest;[m
[32m+[m
[32m+[m[32m@SpringBootTest[m
[32m+[m[32mclass CustomerServiceMsApplicationTests {[m
[32m+[m
[32m+[m	[32m@Test[m
[32m+[m	[32mvoid contextLoads() {[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Eureka-Server/.gitattributes b/MovieApp/Eureka-Server/.gitattributes[m
[1mnew file mode 100644[m
[1mindex 0000000..3b41682[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Eureka-Server/.gitattributes[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m/mvnw text eol=lf[m
[32m+[m[32m*.cmd text eol=crlf[m
[1mdiff --git a/MovieApp/Eureka-Server/.gitignore b/MovieApp/Eureka-Server/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..667aaef[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Eureka-Server/.gitignore[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32mHELP.md[m
[32m+[m[32mtarget/[m
[32m+[m[32m.mvn/wrapper/maven-wrapper.jar[m
[32m+[m[32m!**/src/main/**/target/[m
[32m+[m[32m!**/src/test/**/target/[m
[32m+[m
[32m+[m[32m### STS ###[m
[32m+[m[32m.apt_generated[m
[32m+[m[32m.classpath[m
[32m+[m[32m.factorypath[m
[32m+[m[32m.project[m
[32m+[m[32m.settings[m
[32m+[m[32m.springBeans[m
[32m+[m[32m.sts4-cache[m
[32m+[m
[32m+[m[32m### IntelliJ IDEA ###[m
[32m+[m[32m.idea[m
[32m+[m[32m*.iws[m
[32m+[m[32m*.iml[m
[32m+[m[32m*.ipr[m
[32m+[m
[32m+[m[32m### NetBeans ###[m
[32m+[m[32m/nbproject/private/[m
[32m+[m[32m/nbbuild/[m
[32m+[m[32m/dist/[m
[32m+[m[32m/nbdist/[m
[32m+[m[32m/.nb-gradle/[m
[32m+[m[32mbuild/[m
[32m+[m[32m!**/src/main/**/build/[m
[32m+[m[32m!**/src/test/**/build/[m
[32m+[m
[32m+[m[32m### VS Code ###[m
[32m+[m[32m.vscode/[m
[1mdiff --git a/MovieApp/Eureka-Server/.mvn/wrapper/maven-wrapper.properties b/MovieApp/Eureka-Server/.mvn/wrapper/maven-wrapper.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..12fbe1e[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Eureka-Server/.mvn/wrapper/maven-wrapper.properties[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m# Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m# or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m# distributed with this work for additional information[m
[32m+[m[32m# regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m# to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m# "License"); you may not use this file except in compliance[m
[32m+[m[32m# with the License.  You may obtain a copy of the License at[m
[32m+[m[32m#[m
[32m+[m[32m#   http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m#[m
[32m+[m[32m# Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m# software distributed under the License is distributed on an[m
[32m+[m[32m# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m# KIND, either express or implied.  See the License for the[m
[32m+[m[32m# specific language governing permissions and limitations[m
[32m+[m[32m# under the License.[m
[32m+[m[32mwrapperVersion=3.3.2[m
[32m+[m[32mdistributionType=only-script[m
[32m+[m[32mdistributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.11/apache-maven-3.9.11-bin.zip[m
[1mdiff --git a/MovieApp/Eureka-Server/mvnw b/MovieApp/Eureka-Server/mvnw[m
[1mnew file mode 100644[m
[1mindex 0000000..19529dd[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Eureka-Server/mvnw[m
[36m@@ -0,0 +1,259 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m# or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m# distributed with this work for additional information[m
[32m+[m[32m# regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m# to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m# "License"); you may not use this file except in compliance[m
[32m+[m[32m# with the License.  You may obtain a copy of the License at[m
[32m+[m[32m#[m
[32m+[m[32m#    http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m#[m
[32m+[m[32m# Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m# software distributed under the License is distributed on an[m
[32m+[m[32m# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m# KIND, either express or implied.  See the License for the[m
[32m+[m[32m# specific language governing permissions and limitations[m
[32m+[m[32m# under the License.[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Apache Maven Wrapper startup batch script, version 3.3.2[m
[32m+[m[32m#[m
[32m+[m[32m# Optional ENV vars[m
[32m+[m[32m# -----------------[m
[32m+[m[32m#   JAVA_HOME - location of a JDK home dir, required when download maven via java source[m
[32m+[m[32m#   MVNW_REPOURL - repo url base for downloading maven distribution[m
[32m+[m[32m#   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven[m
[32m+[m[32m#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mset -euf[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != debug ] || set -x[m
[32m+[m
[32m+[m[32m# OS specific support.[m
[32m+[m[32mnative_path() { printf %s\\n "$1"; }[m
[32m+[m[32mcase "$(uname)" in[m
[32m+[m[32mCYGWIN* | MINGW*)[m
[32m+[m[32m  [ -z "${JAVA_HOME-}" ] || JAVA_HOME="$(cygpath --unix "$JAVA_HOME")"[m
[32m+[m[32m  native_path() { cygpath --path --windows "$1"; }[m
[32m+[m[32m  ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# set JAVACMD and JAVACCMD[m
[32m+[m[32mset_java_home() {[m
[32m+[m[32m  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched[m
[32m+[m[32m  if [ -n "${JAVA_HOME-}" ]; then[m
[32m+[m[32m    if [ -x "$JAVA_HOME/jre/sh/java" ]; then[m
[32m+[m[32m      # IBM's JDK on AIX uses strange locations for the executables[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/jre/sh/java"[m
[32m+[m[32m      JAVACCMD="$JAVA_HOME/jre/sh/javac"[m
[32m+[m[32m    else[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/bin/java"[m
[32m+[m[32m      JAVACCMD="$JAVA_HOME/bin/javac"[m
[32m+[m
[32m+[m[32m      if [ ! -x "$JAVACMD" ] || [ ! -x "$JAVACCMD" ]; then[m
[32m+[m[32m        echo "The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run." >&2[m
[32m+[m[32m        echo "JAVA_HOME is set to \"$JAVA_HOME\", but \"\$JAVA_HOME/bin/java\" or \"\$JAVA_HOME/bin/javac\" does not exist." >&2[m
[32m+[m[32m        return 1[m
[32m+[m[32m      fi[m
[32m+[m[32m    fi[m
[32m+[m[32m  else[m
[32m+[m[32m    JAVACMD="$([m
[32m+[m[32m      'set' +e[m
[32m+[m[32m      'unset' -f command 2>/dev/null[m
[32m+[m[32m      'command' -v java[m
[32m+[m[32m    )" || :[m
[32m+[m[32m    JAVACCMD="$([m
[32m+[m[32m      'set' +e[m
[32m+[m[32m      'unset' -f command 2>/dev/null[m
[32m+[m[32m      'command' -v javac[m
[32m+[m[32m    )" || :[m
[32m+[m
[32m+[m[32m    if [ ! -x "${JAVACMD-}" ] || [ ! -x "${JAVACCMD-}" ]; then[m
[32m+[m[32m      echo "The java/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run." >&2[m
[32m+[m[32m      return 1[m
[32m+[m[32m    fi[m
[32m+[m[32m  fi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# hash string like Java String::hashCode[m
[32m+[m[32mhash_string() {[m
[32m+[m[32m  str="${1:-}" h=0[m
[32m+[m[32m  while [ -n "$str" ]; do[m
[32m+[m[32m    char="${str%"${str#?}"}"[m
[32m+[m[32m    h=$(((h * 31 + $(LC_CTYPE=C printf %d "'$char")) % 4294967296))[m
[32m+[m[32m    str="${str#?}"[m
[32m+[m[32m  done[m
[32m+[m[32m  printf %x\\n $h[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mverbose() { :; }[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != true ] || verbose() { printf %s\\n "${1-}"; }[m
[32m+[m
[32m+[m[32mdie() {[m
[32m+[m[32m  printf %s\\n "$1" >&2[m
[32m+[m[32m  exit 1[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtrim() {[m
[32m+[m[32m  # MWRAPPER-139:[m
[32m+[m[32m  #   Trims trailing and leading whitespace, carriage returns, tabs, and linefeeds.[m
[32m+[m[32m  #   Needed for removing poorly interpreted newline sequences when running in more[m
[32m+[m[32m  #   exotic environments such as mingw bash on Windows.[m
[32m+[m[32m  printf "%s" "${1}" | tr -d '[:space:]'[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# parse distributionUrl and optional distributionSha256Sum, requires .mvn/wrapper/maven-wrapper.properties[m
[32m+[m[32mwhile IFS="=" read -r key value; do[m
[32m+[m[32m  case "${key-}" in[m
[32m+[m[32m  distributionUrl) distributionUrl=$(trim "${value-}") ;;[m
[32m+[m[32m  distributionSha256Sum) distributionSha256Sum=$(trim "${value-}") ;;[m
[32m+[m[32m  esac[m
[32m+[m[32mdone <"${0%/*}/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m[32m[ -n "${distributionUrl-}" ] || die "cannot read distributionUrl property in ${0%/*}/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m
[32m+[m[32mcase "${distributionUrl##*/}" in[m
[32m+[m[32mmaven-mvnd-*bin.*)[m
[32m+[m[32m  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/[m
[32m+[m[32m  case "${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)" in[m
[32m+[m[32m  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;[m
[32m+[m[32m  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;[m
[32m+[m[32m  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;[m
[32m+[m[32m  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;[m
[32m+[m[32m  *)[m
[32m+[m[32m    echo "Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version" >&2[m
[32m+[m[32m    distributionPlatform=linux-amd64[m
[32m+[m[32m    ;;[m
[32m+[m[32m  esac[m
[32m+[m[32m  distributionUrl="${distributionUrl%-bin.*}-$distributionPlatform.zip"[m
[32m+[m[32m  ;;[m
[32m+[m[32mmaven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/ ;;[m
[32m+[m[32m*) MVN_CMD="mvn${0##*/mvnw}" _MVNW_REPO_PATTERN=/org/apache/maven/ ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# apply MVNW_REPOURL and calculate MAVEN_HOME[m
[32m+[m[32m# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>[m
[32m+[m[32m[ -z "${MVNW_REPOURL-}" ] || distributionUrl="$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*"$_MVNW_REPO_PATTERN"}"[m
[32m+[m[32mdistributionUrlName="${distributionUrl##*/}"[m
[32m+[m[32mdistributionUrlNameMain="${distributionUrlName%.*}"[m
[32m+[m[32mdistributionUrlNameMain="${distributionUrlNameMain%-bin}"[m
[32m+[m[32mMAVEN_USER_HOME="${MAVEN_USER_HOME:-${HOME}/.m2}"[m
[32m+[m[32mMAVEN_HOME="${MAVEN_USER_HOME}/wrapper/dists/${distributionUrlNameMain-}/$(hash_string "$distributionUrl")"[m
[32m+[m
[32m+[m[32mexec_maven() {[m
[32m+[m[32m  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :[m
[32m+[m[32m  exec "$MAVEN_HOME/bin/$MVN_CMD" "$@" || die "cannot exec $MAVEN_HOME/bin/$MVN_CMD"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif [ -d "$MAVEN_HOME" ]; then[m
[32m+[m[32m  verbose "found existing MAVEN_HOME at $MAVEN_HOME"[m
[32m+[m[32m  exec_maven "$@"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mcase "${distributionUrl-}" in[m
[32m+[m[32m*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;[m
[32m+[m[32m*) die "distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'" ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# prepare tmp dir[m
[32m+[m[32mif TMP_DOWNLOAD_DIR="$(mktemp -d)" && [ -d "$TMP_DOWNLOAD_DIR" ]; then[m
[32m+[m[32m  clean() { rm -rf -- "$TMP_DOWNLOAD_DIR"; }[m
[32m+[m[32m  trap clean HUP INT TERM EXIT[m
[32m+[m[32melse[m
[32m+[m[32m  die "cannot create temp dir"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mmkdir -p -- "${MAVEN_HOME%/*}"[m
[32m+[m
[32m+[m[32m# Download and Install Apache Maven[m
[32m+[m[32mverbose "Couldn't find MAVEN_HOME, downloading and installing it ..."[m
[32m+[m[32mverbose "Downloading from: $distributionUrl"[m
[32m+[m[32mverbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m
[32m+[m[32m# select .zip or .tar.gz[m
[32m+[m[32mif ! command -v unzip >/dev/null; then[m
[32m+[m[32m  distributionUrl="${distributionUrl%.zip}.tar.gz"[m
[32m+[m[32m  distributionUrlName="${distributionUrl##*/}"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# verbose opt[m
[32m+[m[32m__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v[m
[32m+[m
[32m+[m[32m# normalize http auth[m
[32m+[m[32mcase "${MVNW_PASSWORD:+has-password}" in[m
[32m+[m[32m'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;[m
[32m+[m[32mhas-password) [ -n "${MVNW_USERNAME-}" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -z "${MVNW_USERNAME-}" ] && command -v wget >/dev/null; then[m
[32m+[m[32m  verbose "Found wget ... using wget"[m
[32m+[m[32m  wget ${__MVNW_QUIET_WGET:+"$__MVNW_QUIET_WGET"} "$distributionUrl" -O "$TMP_DOWNLOAD_DIR/$distributionUrlName" || die "wget: Failed to fetch $distributionUrl"[m
[32m+[m[32melif [ -z "${MVNW_USERNAME-}" ] && command -v curl >/dev/null; then[m
[32m+[m[32m  verbose "Found curl ... using curl"[m
[32m+[m[32m  curl ${__MVNW_QUIET_CURL:+"$__MVNW_QUIET_CURL"} -f -L -o "$TMP_DOWNLOAD_DIR/$distributionUrlName" "$distributionUrl" || die "curl: Failed to fetch $distributionUrl"[m
[32m+[m[32melif set_java_home; then[m
[32m+[m[32m  verbose "Falling back to use Java to download"[m
[32m+[m[32m  javaSource="$TMP_DOWNLOAD_DIR/Downloader.java"[m
[32m+[m[32m  targetZip="$TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m[32m  cat >"$javaSource" <<-END[m
[32m+[m	[32mpublic class Downloader extends java.net.Authenticator[m
[32m+[m	[32m{[m
[32m+[m	[32m  protected java.net.PasswordAuthentication getPasswordAuthentication()[m
[32m+[m	[32m  {[m
[32m+[m	[32m    return new java.net.PasswordAuthentication( System.getenv( "MVNW_USERNAME" ), System.getenv( "MVNW_PASSWORD" ).toCharArray() );[m
[32m+[m	[32m  }[m
[32m+[m	[32m  public static void main( String[] args ) throws Exception[m
[32m+[m	[32m  {[m
[32m+[m	[32m    setDefault( new Downloader() );[m
[32m+[m	[32m    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );[m
[32m+[m	[32m  }[m
[32m+[m	[32m}[m
[32m+[m	[32mEND[m
[32m+[m[32m  # For Cygwin/MinGW, switch paths to Windows format before running javac and java[m
[32m+[m[32m  verbose " - Compiling Downloader.java ..."[m
[32m+[m[32m  "$(native_path "$JAVACCMD")" "$(native_path "$javaSource")" || die "Failed to compile Downloader.java"[m
[32m+[m[32m  verbose " - Running Downloader.java ..."[m
[32m+[m[32m  "$(native_path "$JAVACMD")" -cp "$(native_path "$TMP_DOWNLOAD_DIR")" Downloader "$distributionUrl" "$(native_path "$targetZip")"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# If specified, validate the SHA-256 sum of the Maven distribution zip file[m
[32m+[m[32mif [ -n "${distributionSha256Sum-}" ]; then[m
[32m+[m[32m  distributionSha256Result=false[m
[32m+[m[32m  if [ "$MVN_CMD" = mvnd.sh ]; then[m
[32m+[m[32m    echo "Checksum validation is not supported for maven-mvnd." >&2[m
[32m+[m[32m    echo "Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  elif command -v sha256sum >/dev/null; then[m
[32m+[m[32m    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | sha256sum -c >/dev/null 2>&1; then[m
[32m+[m[32m      distributionSha256Result=true[m
[32m+[m[32m    fi[m
[32m+[m[32m  elif command -v shasum >/dev/null; then[m
[32m+[m[32m    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | shasum -a 256 -c >/dev/null 2>&1; then[m
[32m+[m[32m      distributionSha256Result=true[m
[32m+[m[32m    fi[m
[32m+[m[32m  else[m
[32m+[m[32m    echo "Checksum validation was requested but neither 'sha256sum' or 'shasum' are available." >&2[m
[32m+[m[32m    echo "Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  fi[m
[32m+[m[32m  if [ $distributionSha256Result = false ]; then[m
[32m+[m[32m    echo "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised." >&2[m
[32m+[m[32m    echo "If you updated your Maven version, you need to update the specified distributionSha256Sum property." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  fi[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# unzip and move[m
[32m+[m[32mif command -v unzip >/dev/null; then[m
[32m+[m[32m  unzip ${__MVNW_QUIET_UNZIP:+"$__MVNW_QUIET_UNZIP"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -d "$TMP_DOWNLOAD_DIR" || die "failed to unzip"[m
[32m+[m[32melse[m
[32m+[m[32m  tar xzf${__MVNW_QUIET_TAR:+"$__MVNW_QUIET_TAR"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -C "$TMP_DOWNLOAD_DIR" || die "failed to untar"[m
[32m+[m[32mfi[m
[32m+[m[32mprintf %s\\n "$distributionUrl" >"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain/mvnw.url"[m
[32m+[m[32mmv -- "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" "$MAVEN_HOME" || [ -d "$MAVEN_HOME" ] || die "fail to move MAVEN_HOME"[m
[32m+[m
[32m+[m[32mclean || :[m
[32m+[m[32mexec_maven "$@"[m
[1mdiff --git a/MovieApp/Eureka-Server/mvnw.cmd b/MovieApp/Eureka-Server/mvnw.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..249bdf3[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Eureka-Server/mvnw.cmd[m
[36m@@ -0,0 +1,149 @@[m
[32m+[m[32m<# : batch portion[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m[32m@REM Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m@REM or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m@REM distributed with this work for additional information[m
[32m+[m[32m@REM regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m@REM to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m@REM "License"); you may not use this file except in compliance[m
[32m+[m[32m@REM with the License.  You may obtain a copy of the License at[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM    http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m@REM software distributed under the License is distributed on an[m
[32m+[m[32m@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m@REM KIND, either express or implied.  See the License for the[m
[32m+[m[32m@REM specific language governing permissions and limitations[m
[32m+[m[32m@REM under the License.[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m[32m@REM Apache Maven Wrapper startup batch script, version 3.3.2[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Optional ENV vars[m
[32m+[m[32m@REM   MVNW_REPOURL - repo url base for downloading maven distribution[m
[32m+[m[32m@REM   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven[m
[32m+[m[32m@REM   MVNW_VERBOSE - true: enable verbose log; others: silence the output[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m@IF "%__MVNW_ARG0_NAME__%"=="" (SET __MVNW_ARG0_NAME__=%~nx0)[m
[32m+[m[32m@SET __MVNW_CMD__=[m
[32m+[m[32m@SET __MVNW_ERROR__=[m
[32m+[m[32m@SET __MVNW_PSMODULEP_SAVE=%PSModulePath%[m
[32m+[m[32m@SET PSModulePath=[m
[32m+[m[32m@FOR /F "usebackq tokens=1* delims==" %%A IN (`powershell -noprofile "& {$scriptDir='%~dp0'; $script='%__MVNW_ARG0_NAME__%'; icm -ScriptBlock ([Scriptblock]::Create((Get-Content -Raw '%~f0'))) -NoNewScope}"`) DO @([m
[32m+[m[32m  IF "%%A"=="MVN_CMD" (set __MVNW_CMD__=%%B) ELSE IF "%%B"=="" (echo %%A) ELSE (echo %%A=%%B)[m
[32m+[m[32m)[m
[32m+[m[32m@SET PSModulePath=%__MVNW_PSMODULEP_SAVE%[m
[32m+[m[32m@SET __MVNW_PSMODULEP_SAVE=[m
[32m+[m[32m@SET __MVNW_ARG0_NAME__=[m
[32m+[m[32m@SET MVNW_USERNAME=[m
[32m+[m[32m@SET MVNW_PASSWORD=[m
[32m+[m[32m@IF NOT "%__MVNW_CMD__%"=="" (%__MVNW_CMD__% %*)[m
[32m+[m[32m@echo Cannot start maven from wrapper >&2 && exit /b 1[m
[32m+[m[32m@GOTO :EOF[m
[32m+[m[32m: end batch / begin powershell #>[m
[32m+[m
[32m+[m[32m$ErrorActionPreference = "Stop"[m
[32m+[m[32mif ($env:MVNW_VERBOSE -eq "true") {[m
[32m+[m[32m  $VerbosePreference = "Continue"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# calculate distributionUrl, requires .mvn/wrapper/maven-wrapper.properties[m
[32m+[m[32m$distributionUrl = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionUrl[m
[32m+[m[32mif (!$distributionUrl) {[m
[32m+[m[32m  Write-Error "cannot read distributionUrl property in $scriptDir/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mswitch -wildcard -casesensitive ( $($distributionUrl -replace '^.*/','') ) {[m
[32m+[m[32m  "maven-mvnd-*" {[m
[32m+[m[32m    $USE_MVND = $true[m
[32m+[m[32m    $distributionUrl = $distributionUrl -replace '-bin\.[^.]*$',"-windows-amd64.zip"[m
[32m+[m[32m    $MVN_CMD = "mvnd.cmd"[m
[32m+[m[32m    break[m
[32m+[m[32m  }[m
[32m+[m[32m  default {[m
[32m+[m[32m    $USE_MVND = $false[m
[32m+[m[32m    $MVN_CMD = $script -replace '^mvnw','mvn'[m
[32m+[m[32m    break[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# apply MVNW_REPOURL and calculate MAVEN_HOME[m
[32m+[m[32m# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>[m
[32m+[m[32mif ($env:MVNW_REPOURL) {[m
[32m+[m[32m  $MVNW_REPO_PATTERN = if ($USE_MVND) { "/org/apache/maven/" } else { "/maven/mvnd/" }[m
[32m+[m[32m  $distributionUrl = "$env:MVNW_REPOURL$MVNW_REPO_PATTERN$($distributionUrl -replace '^.*'+$MVNW_REPO_PATTERN,'')"[m
[32m+[m[32m}[m
[32m+[m[32m$distributionUrlName = $distributionUrl -replace '^.*/',''[m
[32m+[m[32m$distributionUrlNameMain = $distributionUrlName -replace '\.[^.]*$','' -replace '-bin$',''[m
[32m+[m[32m$MAVEN_HOME_PARENT = "$HOME/.m2/wrapper/dists/$distributionUrlNameMain"[m
[32m+[m[32mif ($env:MAVEN_USER_HOME) {[m
[32m+[m[32m  $MAVEN_HOME_PARENT = "$env:MAVEN_USER_HOME/wrapper/dists/$distributionUrlNameMain"[m
[32m+[m[32m}[m
[32m+[m[32m$MAVEN_HOME_NAME = ([System.Security.Cryptography.MD5]::Create().ComputeHash([byte[]][char[]]$distributionUrl) | ForEach-Object {$_.ToString("x2")}) -join ''[m
[32m+[m[32m$MAVEN_HOME = "$MAVEN_HOME_PARENT/$MAVEN_HOME_NAME"[m
[32m+[m
[32m+[m[32mif (Test-Path -Path "$MAVEN_HOME" -PathType Container) {[m
[32m+[m[32m  Write-Verbose "found existing MAVEN_HOME at $MAVEN_HOME"[m
[32m+[m[32m  Write-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"[m
[32m+[m[32m  exit $?[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif (! $distributionUrlNameMain -or ($distributionUrlName -eq $distributionUrlNameMain)) {[m
[32m+[m[32m  Write-Error "distributionUrl is not valid, must end with *-bin.zip, but found $distributionUrl"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# prepare tmp dir[m
[32m+[m[32m$TMP_DOWNLOAD_DIR_HOLDER = New-TemporaryFile[m
[32m+[m[32m$TMP_DOWNLOAD_DIR = New-Item -Itemtype Directory -Path "$TMP_DOWNLOAD_DIR_HOLDER.dir"[m
[32m+[m[32m$TMP_DOWNLOAD_DIR_HOLDER.Delete() | Out-Null[m
[32m+[m[32mtrap {[m
[32m+[m[32m  if ($TMP_DOWNLOAD_DIR.Exists) {[m
[32m+[m[32m    try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }[m
[32m+[m[32m    catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mNew-Item -Itemtype Directory -Path "$MAVEN_HOME_PARENT" -Force | Out-Null[m
[32m+[m
[32m+[m[32m# Download and Install Apache Maven[m
[32m+[m[32mWrite-Verbose "Couldn't find MAVEN_HOME, downloading and installing it ..."[m
[32m+[m[32mWrite-Verbose "Downloading from: $distributionUrl"[m
[32m+[m[32mWrite-Verbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m
[32m+[m[32m$webclient = New-Object System.Net.WebClient[m
[32m+[m[32mif ($env:MVNW_USERNAME -and $env:MVNW_PASSWORD) {[m
[32m+[m[32m  $webclient.Credentials = New-Object System.Net.NetworkCredential($env:MVNW_USERNAME, $env:MVNW_PASSWORD)[m
[32m+[m[32m}[m
[32m+[m[32m[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12[m
[32m+[m[32m$webclient.DownloadFile($distributionUrl, "$TMP_DOWNLOAD_DIR/$distributionUrlName") | Out-Null[m
[32m+[m
[32m+[m[32m# If specified, validate the SHA-256 sum of the Maven distribution zip file[m
[32m+[m[32m$distributionSha256Sum = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionSha256Sum[m
[32m+[m[32mif ($distributionSha256Sum) {[m
[32m+[m[32m  if ($USE_MVND) {[m
[32m+[m[32m    Write-Error "Checksum validation is not supported for maven-mvnd. `nPlease disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties."[m
[32m+[m[32m  }[m
[32m+[m[32m  Import-Module $PSHOME\Modules\Microsoft.PowerShell.Utility -Function Get-FileHash[m
[32m+[m[32m  if ((Get-FileHash "$TMP_DOWNLOAD_DIR/$distributionUrlName" -Algorithm SHA256).Hash.ToLower() -ne $distributionSha256Sum) {[m
[32m+[m[32m    Write-Error "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised. If you updated your Maven version, you need to update the specified distributionSha256Sum property."[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# unzip and move[m
[32m+[m[32mExpand-Archive "$TMP_DOWNLOAD_DIR/$distributionUrlName" -DestinationPath "$TMP_DOWNLOAD_DIR" | Out-Null[m
[32m+[m[32mRename-Item -Path "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" -NewName $MAVEN_HOME_NAME | Out-Null[m
[32m+[m[32mtry {[m
[32m+[m[32m  Move-Item -Path "$TMP_DOWNLOAD_DIR/$MAVEN_HOME_NAME" -Destination $MAVEN_HOME_PARENT | Out-Null[m
[32m+[m[32m} catch {[m
[32m+[m[32m  if (! (Test-Path -Path "$MAVEN_HOME" -PathType Container)) {[m
[32m+[m[32m    Write-Error "fail to move MAVEN_HOME"[m
[32m+[m[32m  }[m
[32m+[m[32m} finally {[m
[32m+[m[32m  try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }[m
[32m+[m[32m  catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mWrite-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"[m
[1mdiff --git a/MovieApp/Eureka-Server/pom.xml b/MovieApp/Eureka-Server/pom.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..11f2b7e[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Eureka-Server/pom.xml[m
[36m@@ -0,0 +1,66 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[32m+[m	[32mxsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">[m
[32m+[m	[32m<modelVersion>4.0.0</modelVersion>[m
[32m+[m	[32m<parent>[m
[32m+[m		[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m		[32m<artifactId>spring-boot-starter-parent</artifactId>[m
[32m+[m		[32m<version>3.5.4</version>[m
[32m+[m		[32m<relativePath/> <!-- lookup parent from repository -->[m
[32m+[m	[32m</parent>[m
[32m+[m	[32m<groupId>com.booking</groupId>[m
[32m+[m	[32m<artifactId>Eureka-Server</artifactId>[m
[32m+[m	[32m<version>0.0.1-SNAPSHOT</version>[m
[32m+[m	[32m<name>Eureka-Server</name>[m
[32m+[m	[32m<description>Demo project for Spring Boot</description>[m
[32m+[m	[32m<url/>[m
[32m+[m	[32m<licenses>[m
[32m+[m		[32m<license/>[m
[32m+[m	[32m</licenses>[m
[32m+[m	[32m<developers>[m
[32m+[m		[32m<developer/>[m
[32m+[m	[32m</developers>[m
[32m+[m	[32m<scm>[m
[32m+[m		[32m<connection/>[m
[32m+[m		[32m<developerConnection/>[m
[32m+[m		[32m<tag/>[m
[32m+[m		[32m<url/>[m
[32m+[m	[32m</scm>[m
[32m+[m	[32m<properties>[m
[32m+[m		[32m<java.version>17</java.version>[m
[32m+[m		[32m<spring-cloud.version>2025.0.0</spring-cloud.version>[m
[32m+[m	[32m</properties>[m
[32m+[m	[32m<dependencies>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.cloud</groupId>[m
[32m+[m			[32m<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-test</artifactId>[m
[32m+[m			[32m<scope>test</scope>[m
[32m+[m		[32m</dependency>[m
[32m+[m	[32m</dependencies>[m
[32m+[m	[32m<dependencyManagement>[m
[32m+[m		[32m<dependencies>[m
[32m+[m			[32m<dependency>[m
[32m+[m				[32m<groupId>org.springframework.cloud</groupId>[m
[32m+[m				[32m<artifactId>spring-cloud-dependencies</artifactId>[m
[32m+[m				[32m<version>${spring-cloud.version}</version>[m
[32m+[m				[32m<type>pom</type>[m
[32m+[m				[32m<scope>import</scope>[m
[32m+[m			[32m</dependency>[m
[32m+[m		[32m</dependencies>[m
[32m+[m	[32m</dependencyManagement>[m
[32m+[m
[32m+[m	[32m<build>[m
[32m+[m		[32m<plugins>[m
[32m+[m			[32m<plugin>[m
[32m+[m				[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m				[32m<artifactId>spring-boot-maven-plugin</artifactId>[m
[32m+[m			[32m</plugin>[m
[32m+[m		[32m</plugins>[m
[32m+[m	[32m</build>[m
[32m+[m
[32m+[m[32m</project>[m
[1mdiff --git a/MovieApp/Eureka-Server/src/main/java/com/server/EurekaServerApplication.java b/MovieApp/Eureka-Server/src/main/java/com/server/EurekaServerApplication.java[m
[1mnew file mode 100644[m
[1mindex 0000000..d364acc[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Eureka-Server/src/main/java/com/server/EurekaServerApplication.java[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mpackage com.server;[m
[32m+[m
[32m+[m[32mimport org.springframework.boot.SpringApplication;[m
[32m+[m[32mimport org.springframework.boot.autoconfigure.SpringBootApplication;[m
[32m+[m[32mimport org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;[m
[32m+[m
[32m+[m[32m@SpringBootApplication[m
[32m+[m[32m@EnableEurekaServer[m
[32m+[m[32mpublic class EurekaServerApplication {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m		[32mSpringApplication.run(EurekaServerApplication.class, args);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Eureka-Server/src/main/resources/application.properties b/MovieApp/Eureka-Server/src/main/resources/application.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..53cbc6c[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Eureka-Server/src/main/resources/application.properties[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mspring.application.name=Eureka-Server[m
[32m+[m
[32m+[m[32mserver.port = 8761[m
[32m+[m
[32m+[m[32meureka.client.register-with-eureka=false[m
[32m+[m[32meureka.client.fetch-registry=false[m
\ No newline at end of file[m
[1mdiff --git a/MovieApp/Eureka-Server/src/test/java/com/server/EurekaServerApplicationTests.java b/MovieApp/Eureka-Server/src/test/java/com/server/EurekaServerApplicationTests.java[m
[1mnew file mode 100644[m
[1mindex 0000000..9adfb3a[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Eureka-Server/src/test/java/com/server/EurekaServerApplicationTests.java[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mpackage com.server;[m
[32m+[m
[32m+[m[32mimport org.junit.jupiter.api.Test;[m
[32m+[m[32mimport org.springframework.boot.test.context.SpringBootTest;[m
[32m+[m
[32m+[m[32m@SpringBootTest[m
[32m+[m[32mclass EurekaServerApplicationTests {[m
[32m+[m
[32m+[m	[32m@Test[m
[32m+[m	[32mvoid contextLoads() {[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Movie-Service-MS/.gitattributes b/MovieApp/Movie-Service-MS/.gitattributes[m
[1mnew file mode 100644[m
[1mindex 0000000..3b41682[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Movie-Service-MS/.gitattributes[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m/mvnw text eol=lf[m
[32m+[m[32m*.cmd text eol=crlf[m
[1mdiff --git a/MovieApp/Movie-Service-MS/.gitignore b/MovieApp/Movie-Service-MS/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..667aaef[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Movie-Service-MS/.gitignore[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32mHELP.md[m
[32m+[m[32mtarget/[m
[32m+[m[32m.mvn/wrapper/maven-wrapper.jar[m
[32m+[m[32m!**/src/main/**/target/[m
[32m+[m[32m!**/src/test/**/target/[m
[32m+[m
[32m+[m[32m### STS ###[m
[32m+[m[32m.apt_generated[m
[32m+[m[32m.classpath[m
[32m+[m[32m.factorypath[m
[32m+[m[32m.project[m
[32m+[m[32m.settings[m
[32m+[m[32m.springBeans[m
[32m+[m[32m.sts4-cache[m
[32m+[m
[32m+[m[32m### IntelliJ IDEA ###[m
[32m+[m[32m.idea[m
[32m+[m[32m*.iws[m
[32m+[m[32m*.iml[m
[32m+[m[32m*.ipr[m
[32m+[m
[32m+[m[32m### NetBeans ###[m
[32m+[m[32m/nbproject/private/[m
[32m+[m[32m/nbbuild/[m
[32m+[m[32m/dist/[m
[32m+[m[32m/nbdist/[m
[32m+[m[32m/.nb-gradle/[m
[32m+[m[32mbuild/[m
[32m+[m[32m!**/src/main/**/build/[m
[32m+[m[32m!**/src/test/**/build/[m
[32m+[m
[32m+[m[32m### VS Code ###[m
[32m+[m[32m.vscode/[m
[1mdiff --git a/MovieApp/Movie-Service-MS/.mvn/wrapper/maven-wrapper.properties b/MovieApp/Movie-Service-MS/.mvn/wrapper/maven-wrapper.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..12fbe1e[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Movie-Service-MS/.mvn/wrapper/maven-wrapper.properties[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m# Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m# or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m# distributed with this work for additional information[m
[32m+[m[32m# regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m# to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m# "License"); you may not use this file except in compliance[m
[32m+[m[32m# with the License.  You may obtain a copy of the License at[m
[32m+[m[32m#[m
[32m+[m[32m#   http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m#[m
[32m+[m[32m# Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m# software distributed under the License is distributed on an[m
[32m+[m[32m# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m# KIND, either express or implied.  See the License for the[m
[32m+[m[32m# specific language governing permissions and limitations[m
[32m+[m[32m# under the License.[m
[32m+[m[32mwrapperVersion=3.3.2[m
[32m+[m[32mdistributionType=only-script[m
[32m+[m[32mdistributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.11/apache-maven-3.9.11-bin.zip[m
[1mdiff --git a/MovieApp/Movie-Service-MS/mvnw b/MovieApp/Movie-Service-MS/mvnw[m
[1mnew file mode 100644[m
[1mindex 0000000..19529dd[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Movie-Service-MS/mvnw[m
[36m@@ -0,0 +1,259 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m# or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m# distributed with this work for additional information[m
[32m+[m[32m# regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m# to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m# "License"); you may not use this file except in compliance[m
[32m+[m[32m# with the License.  You may obtain a copy of the License at[m
[32m+[m[32m#[m
[32m+[m[32m#    http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m#[m
[32m+[m[32m# Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m# software distributed under the License is distributed on an[m
[32m+[m[32m# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m# KIND, either express or implied.  See the License for the[m
[32m+[m[32m# specific language governing permissions and limitations[m
[32m+[m[32m# under the License.[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Apache Maven Wrapper startup batch script, version 3.3.2[m
[32m+[m[32m#[m
[32m+[m[32m# Optional ENV vars[m
[32m+[m[32m# -----------------[m
[32m+[m[32m#   JAVA_HOME - location of a JDK home dir, required when download maven via java source[m
[32m+[m[32m#   MVNW_REPOURL - repo url base for downloading maven distribution[m
[32m+[m[32m#   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven[m
[32m+[m[32m#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mset -euf[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != debug ] || set -x[m
[32m+[m
[32m+[m[32m# OS specific support.[m
[32m+[m[32mnative_path() { printf %s\\n "$1"; }[m
[32m+[m[32mcase "$(uname)" in[m
[32m+[m[32mCYGWIN* | MINGW*)[m
[32m+[m[32m  [ -z "${JAVA_HOME-}" ] || JAVA_HOME="$(cygpath --unix "$JAVA_HOME")"[m
[32m+[m[32m  native_path() { cygpath --path --windows "$1"; }[m
[32m+[m[32m  ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# set JAVACMD and JAVACCMD[m
[32m+[m[32mset_java_home() {[m
[32m+[m[32m  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched[m
[32m+[m[32m  if [ -n "${JAVA_HOME-}" ]; then[m
[32m+[m[32m    if [ -x "$JAVA_HOME/jre/sh/java" ]; then[m
[32m+[m[32m      # IBM's JDK on AIX uses strange locations for the executables[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/jre/sh/java"[m
[32m+[m[32m      JAVACCMD="$JAVA_HOME/jre/sh/javac"[m
[32m+[m[32m    else[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/bin/java"[m
[32m+[m[32m      JAVACCMD="$JAVA_HOME/bin/javac"[m
[32m+[m
[32m+[m[32m      if [ ! -x "$JAVACMD" ] || [ ! -x "$JAVACCMD" ]; then[m
[32m+[m[32m        echo "The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run." >&2[m
[32m+[m[32m        echo "JAVA_HOME is set to \"$JAVA_HOME\", but \"\$JAVA_HOME/bin/java\" or \"\$JAVA_HOME/bin/javac\" does not exist." >&2[m
[32m+[m[32m        return 1[m
[32m+[m[32m      fi[m
[32m+[m[32m    fi[m
[32m+[m[32m  else[m
[32m+[m[32m    JAVACMD="$([m
[32m+[m[32m      'set' +e[m
[32m+[m[32m      'unset' -f command 2>/dev/null[m
[32m+[m[32m      'command' -v java[m
[32m+[m[32m    )" || :[m
[32m+[m[32m    JAVACCMD="$([m
[32m+[m[32m      'set' +e[m
[32m+[m[32m      'unset' -f command 2>/dev/null[m
[32m+[m[32m      'command' -v javac[m
[32m+[m[32m    )" || :[m
[32m+[m
[32m+[m[32m    if [ ! -x "${JAVACMD-}" ] || [ ! -x "${JAVACCMD-}" ]; then[m
[32m+[m[32m      echo "The java/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run." >&2[m
[32m+[m[32m      return 1[m
[32m+[m[32m    fi[m
[32m+[m[32m  fi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# hash string like Java String::hashCode[m
[32m+[m[32mhash_string() {[m
[32m+[m[32m  str="${1:-}" h=0[m
[32m+[m[32m  while [ -n "$str" ]; do[m
[32m+[m[32m    char="${str%"${str#?}"}"[m
[32m+[m[32m    h=$(((h * 31 + $(LC_CTYPE=C printf %d "'$char")) % 4294967296))[m
[32m+[m[32m    str="${str#?}"[m
[32m+[m[32m  done[m
[32m+[m[32m  printf %x\\n $h[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mverbose() { :; }[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != true ] || verbose() { printf %s\\n "${1-}"; }[m
[32m+[m
[32m+[m[32mdie() {[m
[32m+[m[32m  printf %s\\n "$1" >&2[m
[32m+[m[32m  exit 1[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtrim() {[m
[32m+[m[32m  # MWRAPPER-139:[m
[32m+[m[32m  #   Trims trailing and leading whitespace, carriage returns, tabs, and linefeeds.[m
[32m+[m[32m  #   Needed for removing poorly interpreted newline sequences when running in more[m
[32m+[m[32m  #   exotic environments such as mingw bash on Windows.[m
[32m+[m[32m  printf "%s" "${1}" | tr -d '[:space:]'[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# parse distributionUrl and optional distributionSha256Sum, requires .mvn/wrapper/maven-wrapper.properties[m
[32m+[m[32mwhile IFS="=" read -r key value; do[m
[32m+[m[32m  case "${key-}" in[m
[32m+[m[32m  distributionUrl) distributionUrl=$(trim "${value-}") ;;[m
[32m+[m[32m  distributionSha256Sum) distributionSha256Sum=$(trim "${value-}") ;;[m
[32m+[m[32m  esac[m
[32m+[m[32mdone <"${0%/*}/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m[32m[ -n "${distributionUrl-}" ] || die "cannot read distributionUrl property in ${0%/*}/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m
[32m+[m[32mcase "${distributionUrl##*/}" in[m
[32m+[m[32mmaven-mvnd-*bin.*)[m
[32m+[m[32m  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/[m
[32m+[m[32m  case "${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)" in[m
[32m+[m[32m  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;[m
[32m+[m[32m  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;[m
[32m+[m[32m  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;[m
[32m+[m[32m  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;[m
[32m+[m[32m  *)[m
[32m+[m[32m    echo "Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version" >&2[m
[32m+[m[32m    distributionPlatform=linux-amd64[m
[32m+[m[32m    ;;[m
[32m+[m[32m  esac[m
[32m+[m[32m  distributionUrl="${distributionUrl%-bin.*}-$distributionPlatform.zip"[m
[32m+[m[32m  ;;[m
[32m+[m[32mmaven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/ ;;[m
[32m+[m[32m*) MVN_CMD="mvn${0##*/mvnw}" _MVNW_REPO_PATTERN=/org/apache/maven/ ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# apply MVNW_REPOURL and calculate MAVEN_HOME[m
[32m+[m[32m# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>[m
[32m+[m[32m[ -z "${MVNW_REPOURL-}" ] || distributionUrl="$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*"$_MVNW_REPO_PATTERN"}"[m
[32m+[m[32mdistributionUrlName="${distributionUrl##*/}"[m
[32m+[m[32mdistributionUrlNameMain="${distributionUrlName%.*}"[m
[32m+[m[32mdistributionUrlNameMain="${distributionUrlNameMain%-bin}"[m
[32m+[m[32mMAVEN_USER_HOME="${MAVEN_USER_HOME:-${HOME}/.m2}"[m
[32m+[m[32mMAVEN_HOME="${MAVEN_USER_HOME}/wrapper/dists/${distributionUrlNameMain-}/$(hash_string "$distributionUrl")"[m
[32m+[m
[32m+[m[32mexec_maven() {[m
[32m+[m[32m  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :[m
[32m+[m[32m  exec "$MAVEN_HOME/bin/$MVN_CMD" "$@" || die "cannot exec $MAVEN_HOME/bin/$MVN_CMD"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif [ -d "$MAVEN_HOME" ]; then[m
[32m+[m[32m  verbose "found existing MAVEN_HOME at $MAVEN_HOME"[m
[32m+[m[32m  exec_maven "$@"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mcase "${distributionUrl-}" in[m
[32m+[m[32m*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;[m
[32m+[m[32m*) die "distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'" ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# prepare tmp dir[m
[32m+[m[32mif TMP_DOWNLOAD_DIR="$(mktemp -d)" && [ -d "$TMP_DOWNLOAD_DIR" ]; then[m
[32m+[m[32m  clean() { rm -rf -- "$TMP_DOWNLOAD_DIR"; }[m
[32m+[m[32m  trap clean HUP INT TERM EXIT[m
[32m+[m[32melse[m
[32m+[m[32m  die "cannot create temp dir"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mmkdir -p -- "${MAVEN_HOME%/*}"[m
[32m+[m
[32m+[m[32m# Download and Install Apache Maven[m
[32m+[m[32mverbose "Couldn't find MAVEN_HOME, downloading and installing it ..."[m
[32m+[m[32mverbose "Downloading from: $distributionUrl"[m
[32m+[m[32mverbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m
[32m+[m[32m# select .zip or .tar.gz[m
[32m+[m[32mif ! command -v unzip >/dev/null; then[m
[32m+[m[32m  distributionUrl="${distributionUrl%.zip}.tar.gz"[m
[32m+[m[32m  distributionUrlName="${distributionUrl##*/}"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# verbose opt[m
[32m+[m[32m__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v[m
[32m+[m
[32m+[m[32m# normalize http auth[m
[32m+[m[32mcase "${MVNW_PASSWORD:+has-password}" in[m
[32m+[m[32m'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;[m
[32m+[m[32mhas-password) [ -n "${MVNW_USERNAME-}" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -z "${MVNW_USERNAME-}" ] && command -v wget >/dev/null; then[m
[32m+[m[32m  verbose "Found wget ... using wget"[m
[32m+[m[32m  wget ${__MVNW_QUIET_WGET:+"$__MVNW_QUIET_WGET"} "$distributionUrl" -O "$TMP_DOWNLOAD_DIR/$distributionUrlName" || die "wget: Failed to fetch $distributionUrl"[m
[32m+[m[32melif [ -z "${MVNW_USERNAME-}" ] && command -v curl >/dev/null; then[m
[32m+[m[32m  verbose "Found curl ... using curl"[m
[32m+[m[32m  curl ${__MVNW_QUIET_CURL:+"$__MVNW_QUIET_CURL"} -f -L -o "$TMP_DOWNLOAD_DIR/$distributionUrlName" "$distributionUrl" || die "curl: Failed to fetch $distributionUrl"[m
[32m+[m[32melif set_java_home; then[m
[32m+[m[32m  verbose "Falling back to use Java to download"[m
[32m+[m[32m  javaSource="$TMP_DOWNLOAD_DIR/Downloader.java"[m
[32m+[m[32m  targetZip="$TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m[32m  cat >"$javaSource" <<-END[m
[32m+[m	[32mpublic class Downloader extends java.net.Authenticator[m
[32m+[m	[32m{[m
[32m+[m	[32m  protected java.net.PasswordAuthentication getPasswordAuthentication()[m
[32m+[m	[32m  {[m
[32m+[m	[32m    return new java.net.PasswordAuthentication( System.getenv( "MVNW_USERNAME" ), System.getenv( "MVNW_PASSWORD" ).toCharArray() );[m
[32m+[m	[32m  }[m
[32m+[m	[32m  public static void main( String[] args ) throws Exception[m
[32m+[m	[32m  {[m
[32m+[m	[32m    setDefault( new Downloader() );[m
[32m+[m	[32m    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );[m
[32m+[m	[32m  }[m
[32m+[m	[32m}[m
[32m+[m	[32mEND[m
[32m+[m[32m  # For Cygwin/MinGW, switch paths to Windows format before running javac and java[m
[32m+[m[32m  verbose " - Compiling Downloader.java ..."[m
[32m+[m[32m  "$(native_path "$JAVACCMD")" "$(native_path "$javaSource")" || die "Failed to compile Downloader.java"[m
[32m+[m[32m  verbose " - Running Downloader.java ..."[m
[32m+[m[32m  "$(native_path "$JAVACMD")" -cp "$(native_path "$TMP_DOWNLOAD_DIR")" Downloader "$distributionUrl" "$(native_path "$targetZip")"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# If specified, validate the SHA-256 sum of the Maven distribution zip file[m
[32m+[m[32mif [ -n "${distributionSha256Sum-}" ]; then[m
[32m+[m[32m  distributionSha256Result=false[m
[32m+[m[32m  if [ "$MVN_CMD" = mvnd.sh ]; then[m
[32m+[m[32m    echo "Checksum validation is not supported for maven-mvnd." >&2[m
[32m+[m[32m    echo "Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  elif command -v sha256sum >/dev/null; then[m
[32m+[m[32m    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | sha256sum -c >/dev/null 2>&1; then[m
[32m+[m[32m      distributionSha256Result=true[m
[32m+[m[32m    fi[m
[32m+[m[32m  elif command -v shasum >/dev/null; then[m
[32m+[m[32m    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | shasum -a 256 -c >/dev/null 2>&1; then[m
[32m+[m[32m      distributionSha256Result=true[m
[32m+[m[32m    fi[m
[32m+[m[32m  else[m
[32m+[m[32m    echo "Checksum validation was requested but neither 'sha256sum' or 'shasum' are available." >&2[m
[32m+[m[32m    echo "Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  fi[m
[32m+[m[32m  if [ $distributionSha256Result = false ]; then[m
[32m+[m[32m    echo "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised." >&2[m
[32m+[m[32m    echo "If you updated your Maven version, you need to update the specified distributionSha256Sum property." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  fi[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# unzip and move[m
[32m+[m[32mif command -v unzip >/dev/null; then[m
[32m+[m[32m  unzip ${__MVNW_QUIET_UNZIP:+"$__MVNW_QUIET_UNZIP"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -d "$TMP_DOWNLOAD_DIR" || die "failed to unzip"[m
[32m+[m[32melse[m
[32m+[m[32m  tar xzf${__MVNW_QUIET_TAR:+"$__MVNW_QUIET_TAR"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -C "$TMP_DOWNLOAD_DIR" || die "failed to untar"[m
[32m+[m[32mfi[m
[32m+[m[32mprintf %s\\n "$distributionUrl" >"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain/mvnw.url"[m
[32m+[m[32mmv -- "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" "$MAVEN_HOME" || [ -d "$MAVEN_HOME" ] || die "fail to move MAVEN_HOME"[m
[32m+[m
[32m+[m[32mclean || :[m
[32m+[m[32mexec_maven "$@"[m
[1mdiff --git a/MovieApp/Movie-Service-MS/mvnw.cmd b/MovieApp/Movie-Service-MS/mvnw.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..249bdf3[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Movie-Service-MS/mvnw.cmd[m
[36m@@ -0,0 +1,149 @@[m
[32m+[m[32m<# : batch portion[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m[32m@REM Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m@REM or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m@REM distributed with this work for additional information[m
[32m+[m[32m@REM regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m@REM to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m@REM "License"); you may not use this file except in compliance[m
[32m+[m[32m@REM with the License.  You may obtain a copy of the License at[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM    http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m@REM software distributed under the License is distributed on an[m
[32m+[m[32m@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m@REM KIND, either express or implied.  See the License for the[m
[32m+[m[32m@REM specific language governing permissions and limitations[m
[32m+[m[32m@REM under the License.[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m[32m@REM Apache Maven Wrapper startup batch script, version 3.3.2[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Optional ENV vars[m
[32m+[m[32m@REM   MVNW_REPOURL - repo url base for downloading maven distribution[m
[32m+[m[32m@REM   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven[m
[32m+[m[32m@REM   MVNW_VERBOSE - true: enable verbose log; others: silence the output[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m@IF "%__MVNW_ARG0_NAME__%"=="" (SET __MVNW_ARG0_NAME__=%~nx0)[m
[32m+[m[32m@SET __MVNW_CMD__=[m
[32m+[m[32m@SET __MVNW_ERROR__=[m
[32m+[m[32m@SET __MVNW_PSMODULEP_SAVE=%PSModulePath%[m
[32m+[m[32m@SET PSModulePath=[m
[32m+[m[32m@FOR /F "usebackq tokens=1* delims==" %%A IN (`powershell -noprofile "& {$scriptDir='%~dp0'; $script='%__MVNW_ARG0_NAME__%'; icm -ScriptBlock ([Scriptblock]::Create((Get-Content -Raw '%~f0'))) -NoNewScope}"`) DO @([m
[32m+[m[32m  IF "%%A"=="MVN_CMD" (set __MVNW_CMD__=%%B) ELSE IF "%%B"=="" (echo %%A) ELSE (echo %%A=%%B)[m
[32m+[m[32m)[m
[32m+[m[32m@SET PSModulePath=%__MVNW_PSMODULEP_SAVE%[m
[32m+[m[32m@SET __MVNW_PSMODULEP_SAVE=[m
[32m+[m[32m@SET __MVNW_ARG0_NAME__=[m
[32m+[m[32m@SET MVNW_USERNAME=[m
[32m+[m[32m@SET MVNW_PASSWORD=[m
[32m+[m[32m@IF NOT "%__MVNW_CMD__%"=="" (%__MVNW_CMD__% %*)[m
[32m+[m[32m@echo Cannot start maven from wrapper >&2 && exit /b 1[m
[32m+[m[32m@GOTO :EOF[m
[32m+[m[32m: end batch / begin powershell #>[m
[32m+[m
[32m+[m[32m$ErrorActionPreference = "Stop"[m
[32m+[m[32mif ($env:MVNW_VERBOSE -eq "true") {[m
[32m+[m[32m  $VerbosePreference = "Continue"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# calculate distributionUrl, requires .mvn/wrapper/maven-wrapper.properties[m
[32m+[m[32m$distributionUrl = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionUrl[m
[32m+[m[32mif (!$distributionUrl) {[m
[32m+[m[32m  Write-Error "cannot read distributionUrl property in $scriptDir/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mswitch -wildcard -casesensitive ( $($distributionUrl -replace '^.*/','') ) {[m
[32m+[m[32m  "maven-mvnd-*" {[m
[32m+[m[32m    $USE_MVND = $true[m
[32m+[m[32m    $distributionUrl = $distributionUrl -replace '-bin\.[^.]*$',"-windows-amd64.zip"[m
[32m+[m[32m    $MVN_CMD = "mvnd.cmd"[m
[32m+[m[32m    break[m
[32m+[m[32m  }[m
[32m+[m[32m  default {[m
[32m+[m[32m    $USE_MVND = $false[m
[32m+[m[32m    $MVN_CMD = $script -replace '^mvnw','mvn'[m
[32m+[m[32m    break[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# apply MVNW_REPOURL and calculate MAVEN_HOME[m
[32m+[m[32m# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>[m
[32m+[m[32mif ($env:MVNW_REPOURL) {[m
[32m+[m[32m  $MVNW_REPO_PATTERN = if ($USE_MVND) { "/org/apache/maven/" } else { "/maven/mvnd/" }[m
[32m+[m[32m  $distributionUrl = "$env:MVNW_REPOURL$MVNW_REPO_PATTERN$($distributionUrl -replace '^.*'+$MVNW_REPO_PATTERN,'')"[m
[32m+[m[32m}[m
[32m+[m[32m$distributionUrlName = $distributionUrl -replace '^.*/',''[m
[32m+[m[32m$distributionUrlNameMain = $distributionUrlName -replace '\.[^.]*$','' -replace '-bin$',''[m
[32m+[m[32m$MAVEN_HOME_PARENT = "$HOME/.m2/wrapper/dists/$distributionUrlNameMain"[m
[32m+[m[32mif ($env:MAVEN_USER_HOME) {[m
[32m+[m[32m  $MAVEN_HOME_PARENT = "$env:MAVEN_USER_HOME/wrapper/dists/$distributionUrlNameMain"[m
[32m+[m[32m}[m
[32m+[m[32m$MAVEN_HOME_NAME = ([System.Security.Cryptography.MD5]::Create().ComputeHash([byte[]][char[]]$distributionUrl) | ForEach-Object {$_.ToString("x2")}) -join ''[m
[32m+[m[32m$MAVEN_HOME = "$MAVEN_HOME_PARENT/$MAVEN_HOME_NAME"[m
[32m+[m
[32m+[m[32mif (Test-Path -Path "$MAVEN_HOME" -PathType Container) {[m
[32m+[m[32m  Write-Verbose "found existing MAVEN_HOME at $MAVEN_HOME"[m
[32m+[m[32m  Write-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"[m
[32m+[m[32m  exit $?[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif (! $distributionUrlNameMain -or ($distributionUrlName -eq $distributionUrlNameMain)) {[m
[32m+[m[32m  Write-Error "distributionUrl is not valid, must end with *-bin.zip, but found $distributionUrl"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# prepare tmp dir[m
[32m+[m[32m$TMP_DOWNLOAD_DIR_HOLDER = New-TemporaryFile[m
[32m+[m[32m$TMP_DOWNLOAD_DIR = New-Item -Itemtype Directory -Path "$TMP_DOWNLOAD_DIR_HOLDER.dir"[m
[32m+[m[32m$TMP_DOWNLOAD_DIR_HOLDER.Delete() | Out-Null[m
[32m+[m[32mtrap {[m
[32m+[m[32m  if ($TMP_DOWNLOAD_DIR.Exists) {[m
[32m+[m[32m    try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }[m
[32m+[m[32m    catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mNew-Item -Itemtype Directory -Path "$MAVEN_HOME_PARENT" -Force | Out-Null[m
[32m+[m
[32m+[m[32m# Download and Install Apache Maven[m
[32m+[m[32mWrite-Verbose "Couldn't find MAVEN_HOME, downloading and installing it ..."[m
[32m+[m[32mWrite-Verbose "Downloading from: $distributionUrl"[m
[32m+[m[32mWrite-Verbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m
[32m+[m[32m$webclient = New-Object System.Net.WebClient[m
[32m+[m[32mif ($env:MVNW_USERNAME -and $env:MVNW_PASSWORD) {[m
[32m+[m[32m  $webclient.Credentials = New-Object System.Net.NetworkCredential($env:MVNW_USERNAME, $env:MVNW_PASSWORD)[m
[32m+[m[32m}[m
[32m+[m[32m[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12[m
[32m+[m[32m$webclient.DownloadFile($distributionUrl, "$TMP_DOWNLOAD_DIR/$distributionUrlName") | Out-Null[m
[32m+[m
[32m+[m[32m# If specified, validate the SHA-256 sum of the Maven distribution zip file[m
[32m+[m[32m$distributionSha256Sum = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionSha256Sum[m
[32m+[m[32mif ($distributionSha256Sum) {[m
[32m+[m[32m  if ($USE_MVND) {[m
[32m+[m[32m    Write-Error "Checksum validation is not supported for maven-mvnd. `nPlease disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties."[m
[32m+[m[32m  }[m
[32m+[m[32m  Import-Module $PSHOME\Modules\Microsoft.PowerShell.Utility -Function Get-FileHash[m
[32m+[m[32m  if ((Get-FileHash "$TMP_DOWNLOAD_DIR/$distributionUrlName" -Algorithm SHA256).Hash.ToLower() -ne $distributionSha256Sum) {[m
[32m+[m[32m    Write-Error "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised. If you updated your Maven version, you need to update the specified distributionSha256Sum property."[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# unzip and move[m
[32m+[m[32mExpand-Archive "$TMP_DOWNLOAD_DIR/$distributionUrlName" -DestinationPath "$TMP_DOWNLOAD_DIR" | Out-Null[m
[32m+[m[32mRename-Item -Path "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" -NewName $MAVEN_HOME_NAME | Out-Null[m
[32m+[m[32mtry {[m
[32m+[m[32m  Move-Item -Path "$TMP_DOWNLOAD_DIR/$MAVEN_HOME_NAME" -Destination $MAVEN_HOME_PARENT | Out-Null[m
[32m+[m[32m} catch {[m
[32m+[m[32m  if (! (Test-Path -Path "$MAVEN_HOME" -PathType Container)) {[m
[32m+[m[32m    Write-Error "fail to move MAVEN_HOME"[m
[32m+[m[32m  }[m
[32m+[m[32m} finally {[m
[32m+[m[32m  try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }[m
[32m+[m[32m  catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mWrite-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"[m
[1mdiff --git a/MovieApp/Movie-Service-MS/pom.xml b/MovieApp/Movie-Service-MS/pom.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..6686c9e[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Movie-Service-MS/pom.xml[m
[36m@@ -0,0 +1,125 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[32m+[m	[32mxsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">[m
[32m+[m	[32m<modelVersion>4.0.0</modelVersion>[m
[32m+[m	[32m<parent>[m
[32m+[m		[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m		[32m<artifactId>spring-boot-starter-parent</artifactId>[m
[32m+[m		[32m<version>3.5.4</version>[m
[32m+[m		[32m<relativePath/> <!-- lookup parent from repository -->[m
[32m+[m	[32m</parent>[m
[32m+[m	[32m<groupId>com.movie</groupId>[m
[32m+[m	[32m<artifactId>Movie-Service-MS</artifactId>[m
[32m+[m	[32m<version>0.0.1-SNAPSHOT</version>[m
[32m+[m	[32m<name>Movie-Service-MS</name>[m
[32m+[m	[32m<description>Demo project for Spring Boot</description>[m
[32m+[m	[32m<url/>[m
[32m+[m	[32m<licenses>[m
[32m+[m		[32m<license/>[m
[32m+[m	[32m</licenses>[m
[32m+[m	[32m<developers>[m
[32m+[m		[32m<developer/>[m
[32m+[m	[32m</developers>[m
[32m+[m	[32m<scm>[m
[32m+[m		[32m<connection/>[m
[32m+[m		[32m<developerConnection/>[m
[32m+[m		[32m<tag/>[m
[32m+[m		[32m<url/>[m
[32m+[m	[32m</scm>[m
[32m+[m	[32m<properties>[m
[32m+[m		[32m<java.version>17</java.version>[m
[32m+[m		[32m<spring-cloud.version>2025.0.0</spring-cloud.version>[m
[32m+[m	[32m</properties>[m
[32m+[m	[32m<dependencies>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-actuator</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-data-jpa</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-web</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.cloud</groupId>[m
[32m+[m			[32m<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-devtools</artifactId>[m
[32m+[m			[32m<scope>runtime</scope>[m
[32m+[m			[32m<optional>true</optional>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.postgresql</groupId>[m
[32m+[m			[32m<artifactId>postgresql</artifactId>[m
[32m+[m			[32m<scope>runtime</scope>[m
[32m+[m		[32m</dependency>[m
[32m+[m[41m		[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.cloud</groupId>[m
[32m+[m			[32m<artifactId>spring-cloud-starter-openfeign</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m[41m		[m
[32m+[m		[32m<dependency>[m
[32m+[m[41m    [m		[32m<groupId>org.springdoc</groupId>[m
[32m+[m[41m    [m		[32m<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>[m
[32m+[m[41m    [m		[32m<version>2.8.9</version>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.projectlombok</groupId>[m
[32m+[m			[32m<artifactId>lombok</artifactId>[m
[32m+[m			[32m<optional>true</optional>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-test</artifactId>[m
[32m+[m			[32m<scope>test</scope>[m
[32m+[m		[32m</dependency>[m
[32m+[m	[32m</dependencies>[m
[32m+[m	[32m<dependencyManagement>[m
[32m+[m		[32m<dependencies>[m
[32m+[m			[32m<dependency>[m
[32m+[m				[32m<groupId>org.springframework.cloud</groupId>[m
[32m+[m				[32m<artifactId>spring-cloud-dependencies</artifactId>[m
[32m+[m				[32m<version>${spring-cloud.version}</version>[m
[32m+[m				[32m<type>pom</type>[m
[32m+[m				[32m<scope>import</scope>[m
[32m+[m			[32m</dependency>[m
[32m+[m		[32m</dependencies>[m
[32m+[m	[32m</dependencyManagement>[m
[32m+[m
[32m+[m	[32m<build>[m
[32m+[m		[32m<plugins>[m
[32m+[m			[32m<plugin>[m
[32m+[m				[32m<groupId>org.apache.maven.plugins</groupId>[m
[32m+[m				[32m<artifactId>maven-compiler-plugin</artifactId>[m
[32m+[m				[32m<configuration>[m
[32m+[m					[32m<annotationProcessorPaths>[m
[32m+[m						[32m<path>[m
[32m+[m							[32m<groupId>org.projectlombok</groupId>[m
[32m+[m							[32m<artifactId>lombok</artifactId>[m
[32m+[m						[32m</path>[m
[32m+[m					[32m</annotationProcessorPaths>[m
[32m+[m				[32m</configuration>[m
[32m+[m			[32m</plugin>[m
[32m+[m			[32m<plugin>[m
[32m+[m				[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m				[32m<artifactId>spring-boot-maven-plugin</artifactId>[m
[32m+[m				[32m<configuration>[m
[32m+[m					[32m<excludes>[m
[32m+[m						[32m<exclude>[m
[32m+[m							[32m<groupId>org.projectlombok</groupId>[m
[32m+[m							[32m<artifactId>lombok</artifactId>[m
[32m+[m						[32m</exclude>[m
[32m+[m					[32m</excludes>[m
[32m+[m				[32m</configuration>[m
[32m+[m			[32m</plugin>[m
[32m+[m		[32m</plugins>[m
[32m+[m	[32m</build>[m
[32m+[m
[32m+[m[32m</project>[m
[1mdiff --git a/MovieApp/Movie-Service-MS/src/main/java/com/movie/MovieServiceMsApplication.java b/MovieApp/Movie-Service-MS/src/main/java/com/movie/MovieServiceMsApplication.java[m
[1mnew file mode 100644[m
[1mindex 0000000..1c7b512[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Movie-Service-MS/src/main/java/com/movie/MovieServiceMsApplication.java[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mpackage com.movie;[m
[32m+[m
[32m+[m[32mimport org.springframework.boot.SpringApplication;[m
[32m+[m[32mimport org.springframework.boot.autoconfigure.SpringBootApplication;[m
[32m+[m[32mimport org.springframework.cloud.openfeign.EnableFeignClients;[m
[32m+[m
[32m+[m[32m@SpringBootApplication[m
[32m+[m[32m@EnableFeignClients[m
[32m+[m[32mpublic class MovieServiceMsApplication {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m		[32mSpringApplication.run(MovieServiceMsApplication.class, args);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Movie-Service-MS/src/main/java/com/movie/client/TheaterClient.java b/MovieApp/Movie-Service-MS/src/main/java/com/movie/client/TheaterClient.java[m
[1mnew file mode 100644[m
[1mindex 0000000..003d60e[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Movie-Service-MS/src/main/java/com/movie/client/TheaterClient.java[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32mpackage com.movie.client;[m
[32m+[m
[32m+[m[32mimport org.springframework.cloud.openfeign.FeignClient;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.GetMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PathVariable;[m
[32m+[m
[32m+[m[32mimport com.movie.dto.TheaterDTO;[m
[32m+[m
[32m+[m[32m@FeignClient(name = "Theater-Service-MS", url = "http://localhost:4444")[m
[32m+[m[32mpublic interface TheaterClient {[m
[32m+[m
[32m+[m[32m    @GetMapping("/theaters/{id}")[m
[32m+[m[32m    TheaterDTO getTheaterById(@PathVariable("id") Long id);[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Movie-Service-MS/src/main/java/com/movie/config/AppConfig.java b/MovieApp/Movie-Service-MS/src/main/java/com/movie/config/AppConfig.java[m
[1mnew file mode 100644[m
[1mindex 0000000..21813c4[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Movie-Service-MS/src/main/java/com/movie/config/AppConfig.java[m
[36m@@ -0,0 +1,50 @@[m
[32m+[m[32mpackage com.movie.config;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport org.springframework.beans.factory.annotation.Value;[m
[32m+[m[32mimport org.springframework.context.annotation.Bean;[m
[32m+[m[32mimport org.springframework.context.annotation.Configuration;[m
[32m+[m
[32m+[m[32mimport io.swagger.v3.oas.models.OpenAPI;[m
[32m+[m[32mimport io.swagger.v3.oas.models.info.Contact;[m
[32m+[m[32mimport io.swagger.v3.oas.models.info.Info;[m
[32m+[m[32mimport io.swagger.v3.oas.models.info.License;[m
[32m+[m[32mimport io.swagger.v3.oas.models.servers.Server;[m
[32m+[m
[32m+[m
[32m+[m[32m@Configuration[m
[32m+[m[32mpublic class AppConfig {[m
[32m+[m[41m	[m
[32m+[m	[32m@Value("${techacademy.openapi.dev-url}")[m
[32m+[m	[32mprivate String devUrl;[m
[32m+[m[41m [m
[32m+[m	[32m@Value("${techacademy.openapi.prod-url}")[m
[32m+[m	[32mprivate String prodUrl;[m
[32m+[m[41m [m
[32m+[m	[32m@Bean[m
[32m+[m	[32mpublic OpenAPI myOpenAPI() {[m
[32m+[m		[32mServer devServer = new Server();[m
[32m+[m		[32mdevServer.setUrl(devUrl);[m
[32m+[m		[32mdevServer.setDescription("Server URL in Development environment");[m
[32m+[m[41m [m
[32m+[m		[32mServer prodServer = new Server();[m
[32m+[m		[32mprodServer.setUrl(prodUrl);[m
[32m+[m		[32mprodServer.setDescription("Server URL in Production environment");[m
[32m+[m[41m [m
[32m+[m		[32mContact contact = new Contact();[m
[32m+[m		[32mcontact.setEmail("XXXX@gmail.com");[m
[32m+[m		[32mcontact.setName("XXXx");[m
[32m+[m		[32mcontact.setUrl("https://www.XXXX.com");[m
[32m+[m[41m [m
[32m+[m		[32mLicense mitLicense = new License().name("MIT License").url("https://choosealicense.com/licenses/mit/");[m
[32m+[m[41m [m
[32m+[m		[32mInfo info = new Info().title("Ecommerce REST API").version("1.0").contact(contact)[m
[32m+[m				[32m.description("This API exposes endpoints to manage ECOMMERCE OPERATIONS.")[m
[32m+[m				[32m.termsOfService("https://www.XXXX.com/terms").license(mitLicense);[m
[32m+[m[41m [m
[32m+[m		[32mreturn new OpenAPI().info(info).servers(List.of(devServer, prodServer));[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Movie-Service-MS/src/main/java/com/movie/controller/MovieController.java b/MovieApp/Movie-Service-MS/src/main/java/com/movie/controller/MovieController.java[m
[1mnew file mode 100644[m
[1mindex 0000000..c786b2b[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Movie-Service-MS/src/main/java/com/movie/controller/MovieController.java[m
[36m@@ -0,0 +1,58 @@[m
[32m+[m[32mpackage com.movie.controller;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport org.springframework.http.ResponseEntity;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.DeleteMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.GetMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PathVariable;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PostMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PutMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RequestBody;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RequestMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RestController;[m
[32m+[m
[32m+[m[32mimport com.movie.dto.TheaterDTO;[m
[32m+[m[32mimport com.movie.model.Movie;[m
[32m+[m[32mimport com.movie.service.MovieService;[m
[32m+[m
[32m+[m[32mimport lombok.RequiredArgsConstructor;[m
[32m+[m
[32m+[m[32m@RestController[m
[32m+[m[32m@RequestMapping("/movies")[m
[32m+[m[32m@RequiredArgsConstructor[m
[32m+[m[32mpublic class MovieController {[m
[32m+[m
[32m+[m[32m    private final MovieService movieService;[m
[32m+[m
[32m+[m[32m    @PostMapping[m
[32m+[m[32m    public ResponseEntity<Movie> createMovie(@RequestBody Movie movie) {[m
[32m+[m[32m        return ResponseEntity.ok(movieService.createMovie(movie));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @PutMapping("/{id}")[m
[32m+[m[32m    public ResponseEntity<Movie> updateMovie(@PathVariable Long id, @RequestBody Movie movie) {[m
[32m+[m[32m        return ResponseEntity.ok(movieService.updateMovie(id, movie));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @GetMapping("/{id}")[m
[32m+[m[32m    public ResponseEntity<Movie> getMovieById(@PathVariable Long id) {[m
[32m+[m[32m        return ResponseEntity.ok(movieService.getMovieById(id));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @GetMapping[m
[32m+[m[32m    public ResponseEntity<List<Movie>> getAllMovies() {[m
[32m+[m[32m        return ResponseEntity.ok(movieService.getAllMovies());[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @GetMapping("/{id}/theater")[m
[32m+[m[32m    public ResponseEntity<TheaterDTO> getMovieTheater(@PathVariable Long id) {[m
[32m+[m[32m        return ResponseEntity.ok(movieService.getMovieTheater(id));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @DeleteMapping("/{id}")[m
[32m+[m[32m    public ResponseEntity<String> deleteMovie(@PathVariable Long id) {[m
[32m+[m[32m        movieService.deleteMovie(id);[m
[32m+[m[32m        return ResponseEntity.ok("Movie with ID " + id + " deleted successfully");[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/MovieApp/Movie-Service-MS/src/main/java/com/movie/dto/TheaterDTO.java b/MovieApp/Movie-Service-MS/src/main/java/com/movie/dto/TheaterDTO.java[m
[1mnew file mode 100644[m
[1mindex 0000000..568260a[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Movie-Service-MS/src/main/java/com/movie/dto/TheaterDTO.java[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32mpackage com.movie.dto;[m
[32m+[m
[32m+[m[32mimport lombok.Data;[m
[32m+[m
[32m+[m[32m@Data[m
[32m+[m[32mpublic class TheaterDTO {[m
[32m+[m[32m    private Long id;[m
[32m+[m[32m    private String name;[m
[32m+[m[32m    private String location;[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Movie-Service-MS/src/main/java/com/movie/exception/GlobalExceptionHandler.java b/MovieApp/Movie-Service-MS/src/main/java/com/movie/exception/GlobalExceptionHandler.java[m
[1mnew file mode 100644[m
[1mindex 0000000..510f713[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Movie-Service-MS/src/main/java/com/movie/exception/GlobalExceptionHandler.java[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32mpackage com.movie.exception;[m
[32m+[m
[32m+[m[32mimport org.springframework.http.HttpStatus;[m
[32m+[m[32mimport org.springframework.http.ResponseEntity;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.ControllerAdvice;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.ExceptionHandler;[m
[32m+[m
[32m+[m[32m@ControllerAdvice[m
[32m+[m[32mpublic class GlobalExceptionHandler {[m
[32m+[m[41m	[m
[32m+[m
[32m+[m	[32m    @ExceptionHandler(ResourceNotFoundException.class)[m
[32m+[m	[32m    public ResponseEntity<String> handleResourceNotFound(ResourceNotFoundException ex) {[m
[32m+[m	[32m        return ResponseEntity.status(HttpStatus.NOT_FOUND).body(ex.getMessage());[m
[32m+[m	[32m    }[m
[32m+[m
[32m+[m	[32m    @ExceptionHandler(IllegalArgumentException.class)[m
[32m+[m	[32m    public ResponseEntity<String> handleIllegalArgument(IllegalArgumentException ex) {[m
[32m+[m	[32m        return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(ex.getMessage());[m
[32m+[m	[32m    }[m
[32m+[m	[32m}[m
[32m+[m
[1mdiff --git a/MovieApp/Movie-Service-MS/src/main/java/com/movie/exception/ResourceNotFoundException.java b/MovieApp/Movie-Service-MS/src/main/java/com/movie/exception/ResourceNotFoundException.java[m
[1mnew file mode 100644[m
[1mindex 0000000..5d4209e[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Movie-Service-MS/src/main/java/com/movie/exception/ResourceNotFoundException.java[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32mpackage com.movie.exception;[m
[32m+[m
[32m+[m[32mpublic class ResourceNotFoundException extends RuntimeException {[m
[32m+[m[41m    [m
[32m+[m	[32mprivate static final long serialVersionUID = 1L;[m
[32m+[m
[32m+[m	[32mpublic ResourceNotFoundException(String message) {[m
[32m+[m[32m        super(message);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Movie-Service-MS/src/main/java/com/movie/model/Movie.java b/MovieApp/Movie-Service-MS/src/main/java/com/movie/model/Movie.java[m
[1mnew file mode 100644[m
[1mindex 0000000..29ec936[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Movie-Service-MS/src/main/java/com/movie/model/Movie.java[m
[36m@@ -0,0 +1,30 @@[m
[32m+[m[32mpackage com.movie.model;[m
[32m+[m
[32m+[m[32mimport jakarta.persistence.Entity;[m
[32m+[m[32mimport jakarta.persistence.GeneratedValue;[m
[32m+[m[32mimport jakarta.persistence.GenerationType;[m
[32m+[m[32mimport jakarta.persistence.Id;[m
[32m+[m[32mimport jakarta.persistence.Table;[m
[32m+[m[32mimport lombok.AllArgsConstructor;[m
[32m+[m[32mimport lombok.Builder;[m
[32m+[m[32mimport lombok.Data;[m
[32m+[m[32mimport lombok.NoArgsConstructor;[m
[32m+[m
[32m+[m[32m@Entity[m
[32m+[m[32m@Table(name = "movies")[m
[32m+[m[32m@Data[m
[32m+[m[32m@NoArgsConstructor[m
[32m+[m[32m@AllArgsConstructor[m
[32m+[m[32m@Builder[m
[32m+[m[32mpublic class Movie {[m
[32m+[m
[32m+[m[32m    @Id[m
[32m+[m[32m    @GeneratedValue(strategy = GenerationType.IDENTITY)[m
[32m+[m[32m    private Long id;[m
[32m+[m
[32m+[m[32m    private String title;[m
[32m+[m[32m    private String genre;[m
[32m+[m
[32m+[m[32m    private Long theaterId;[m
[32m+[m[41m    [m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/MovieApp/Movie-Service-MS/src/main/java/com/movie/repository/MovieRepository.java b/MovieApp/Movie-Service-MS/src/main/java/com/movie/repository/MovieRepository.java[m
[1mnew file mode 100644[m
[1mindex 0000000..aa0bf9e[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Movie-Service-MS/src/main/java/com/movie/repository/MovieRepository.java[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mpackage com.movie.repository;[m
[32m+[m
[32m+[m[32mimport org.springframework.data.jpa.repository.JpaRepository;[m
[32m+[m[32mimport org.springframework.stereotype.Repository;[m
[32m+[m
[32m+[m[32mimport com.movie.model.Movie;[m
[32m+[m
[32m+[m[32m@Repository[m
[32m+[m[32mpublic interface MovieRepository extends JpaRepository<Movie, Long>{[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Movie-Service-MS/src/main/java/com/movie/service/MovieService.java b/MovieApp/Movie-Service-MS/src/main/java/com/movie/service/MovieService.java[m
[1mnew file mode 100644[m
[1mindex 0000000..1f2332f[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Movie-Service-MS/src/main/java/com/movie/service/MovieService.java[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32mpackage com.movie.service;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport com.movie.dto.TheaterDTO;[m
[32m+[m[32mimport com.movie.model.Movie;[m
[32m+[m
[32m+[m[32mpublic interface MovieService {[m
[32m+[m[41m	[m
[32m+[m	[32mMovie createMovie(Movie movie);[m
[32m+[m[32m    Movie updateMovie(Long id, Movie movie);[m
[32m+[m[32m    void deleteMovie(Long id);[m
[32m+[m[32m    Movie getMovieById(Long id);[m
[32m+[m[32m    List<Movie> getAllMovies();[m
[32m+[m[32m    TheaterDTO getMovieTheater(Long movieId);[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Movie-Service-MS/src/main/java/com/movie/service/impl/MovieServiceImpl.java b/MovieApp/Movie-Service-MS/src/main/java/com/movie/service/impl/MovieServiceImpl.java[m
[1mnew file mode 100644[m
[1mindex 0000000..14dccbb[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Movie-Service-MS/src/main/java/com/movie/service/impl/MovieServiceImpl.java[m
[36m@@ -0,0 +1,61 @@[m
[32m+[m[32mpackage com.movie.service.impl;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport org.springframework.stereotype.Service;[m
[32m+[m
[32m+[m[32mimport com.movie.client.TheaterClient;[m
[32m+[m[32mimport com.movie.dto.TheaterDTO;[m
[32m+[m[32mimport com.movie.exception.ResourceNotFoundException;[m
[32m+[m[32mimport com.movie.model.Movie;[m
[32m+[m[32mimport com.movie.repository.MovieRepository;[m
[32m+[m[32mimport com.movie.service.MovieService;[m
[32m+[m
[32m+[m[32mimport lombok.RequiredArgsConstructor;[m
[32m+[m
[32m+[m[32m@Service[m
[32m+[m[32m@RequiredArgsConstructor[m
[32m+[m[32mpublic class MovieServiceImpl implements MovieService{[m
[32m+[m[41m	[m
[32m+[m	[32mprivate final MovieRepository movieRepository;[m
[32m+[m[32m    private final TheaterClient theaterClient;[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public Movie createMovie(Movie movie) {[m
[32m+[m[32m        return movieRepository.save(movie);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public Movie updateMovie(Long id, Movie movie) {[m
[32m+[m[32m        Movie existing = getMovieById(id);[m
[32m+[m[32m        existing.setTitle(movie.getTitle());[m
[32m+[m[32m        existing.setGenre(movie.getGenre());[m
[32m+[m[32m        existing.setTheaterId(movie.getTheaterId());[m
[32m+[m[32m        return movieRepository.save(existing);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void deleteMovie(Long id) {[m
[32m+[m[32m        Movie existing = getMovieById(id);[m
[32m+[m[32m        movieRepository.delete(existing);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    @Override[m
[32m+[m[32m    public Movie getMovieById(Long id) {[m
[32m+[m[32m        return movieRepository.findById(id)[m
[32m+[m[32m                .orElseThrow(() -> new ResourceNotFoundException("Movie with ID " + id + " not found"));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public List<Movie> getAllMovies() {[m
[32m+[m[32m        return movieRepository.findAll();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public TheaterDTO getMovieTheater(Long movieId) {[m
[32m+[m[32m        Movie movie = getMovieById(movieId);[m
[32m+[m[32m        return theaterClient.getTheaterById(movie.getTheaterId());[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Movie-Service-MS/src/main/resources/application.properties b/MovieApp/Movie-Service-MS/src/main/resources/application.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..ac2002f[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Movie-Service-MS/src/main/resources/application.properties[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32mspring.application.name=Movie-Service-MS[m
[32m+[m
[32m+[m[32mserver.port = 3333[m
[32m+[m
[32m+[m[32meureka.client.register-with-eureka=true[m
[32m+[m[32meureka.client.fetch-registry=true[m
[32m+[m[32meureka.client.service-url.defaultZone=http://localhost:8761/eureka/[m
[32m+[m[32meureka.instance.hostname=localhost[m
[32m+[m
[32m+[m[32mspring.datasource.url=jdbc:postgresql://localhost:5432/movie-service-ms[m
[32m+[m[32mspring.datasource.username=postgres[m
[32m+[m[32mspring.datasource.password=root[m
[32m+[m[32mspring.datasource.driverClassName=org.postgresql.Driver[m
[32m+[m[32mspring.jpa.show-sql=true[m
[32m+[m[32mspring.jpa.format-sql=true[m
[32m+[m[41m [m
[32m+[m[32mspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect[m
[32m+[m[41m [m
[32m+[m[32mspring.jpa.hibernate.ddl-auto=update[m
[32m+[m
[32m+[m[32mspringdoc.swagger-ui.path=/swagger-ui-custom.html[m
[32m+[m[32mspringdoc.swagger-ui.operationsSorter=method[m
[32m+[m
[32m+[m[32mtechacademy.openapi.dev-url=http://localhost:3333[m
[32m+[m[32mtechacademy.openapi.prod-url=https://xxx-api.com[m
\ No newline at end of file[m
[1mdiff --git a/MovieApp/Movie-Service-MS/src/test/java/com/movie/MovieServiceMsApplicationTests.java b/MovieApp/Movie-Service-MS/src/test/java/com/movie/MovieServiceMsApplicationTests.java[m
[1mnew file mode 100644[m
[1mindex 0000000..8c29bf8[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Movie-Service-MS/src/test/java/com/movie/MovieServiceMsApplicationTests.java[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mpackage com.movie;[m
[32m+[m
[32m+[m[32mimport org.junit.jupiter.api.Test;[m
[32m+[m[32mimport org.springframework.boot.test.context.SpringBootTest;[m
[32m+[m
[32m+[m[32m@SpringBootTest[m
[32m+[m[32mclass MovieServiceMsApplicationTests {[m
[32m+[m
[32m+[m	[32m@Test[m
[32m+[m	[32mvoid contextLoads() {[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Theater-Service-MS/.gitattributes b/MovieApp/Theater-Service-MS/.gitattributes[m
[1mnew file mode 100644[m
[1mindex 0000000..3b41682[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Theater-Service-MS/.gitattributes[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m/mvnw text eol=lf[m
[32m+[m[32m*.cmd text eol=crlf[m
[1mdiff --git a/MovieApp/Theater-Service-MS/.gitignore b/MovieApp/Theater-Service-MS/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..667aaef[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Theater-Service-MS/.gitignore[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32mHELP.md[m
[32m+[m[32mtarget/[m
[32m+[m[32m.mvn/wrapper/maven-wrapper.jar[m
[32m+[m[32m!**/src/main/**/target/[m
[32m+[m[32m!**/src/test/**/target/[m
[32m+[m
[32m+[m[32m### STS ###[m
[32m+[m[32m.apt_generated[m
[32m+[m[32m.classpath[m
[32m+[m[32m.factorypath[m
[32m+[m[32m.project[m
[32m+[m[32m.settings[m
[32m+[m[32m.springBeans[m
[32m+[m[32m.sts4-cache[m
[32m+[m
[32m+[m[32m### IntelliJ IDEA ###[m
[32m+[m[32m.idea[m
[32m+[m[32m*.iws[m
[32m+[m[32m*.iml[m
[32m+[m[32m*.ipr[m
[32m+[m
[32m+[m[32m### NetBeans ###[m
[32m+[m[32m/nbproject/private/[m
[32m+[m[32m/nbbuild/[m
[32m+[m[32m/dist/[m
[32m+[m[32m/nbdist/[m
[32m+[m[32m/.nb-gradle/[m
[32m+[m[32mbuild/[m
[32m+[m[32m!**/src/main/**/build/[m
[32m+[m[32m!**/src/test/**/build/[m
[32m+[m
[32m+[m[32m### VS Code ###[m
[32m+[m[32m.vscode/[m
[1mdiff --git a/MovieApp/Theater-Service-MS/.mvn/wrapper/maven-wrapper.properties b/MovieApp/Theater-Service-MS/.mvn/wrapper/maven-wrapper.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..12fbe1e[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Theater-Service-MS/.mvn/wrapper/maven-wrapper.properties[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m# Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m# or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m# distributed with this work for additional information[m
[32m+[m[32m# regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m# to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m# "License"); you may not use this file except in compliance[m
[32m+[m[32m# with the License.  You may obtain a copy of the License at[m
[32m+[m[32m#[m
[32m+[m[32m#   http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m#[m
[32m+[m[32m# Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m# software distributed under the License is distributed on an[m
[32m+[m[32m# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m# KIND, either express or implied.  See the License for the[m
[32m+[m[32m# specific language governing permissions and limitations[m
[32m+[m[32m# under the License.[m
[32m+[m[32mwrapperVersion=3.3.2[m
[32m+[m[32mdistributionType=only-script[m
[32m+[m[32mdistributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.11/apache-maven-3.9.11-bin.zip[m
[1mdiff --git a/MovieApp/Theater-Service-MS/mvnw b/MovieApp/Theater-Service-MS/mvnw[m
[1mnew file mode 100644[m
[1mindex 0000000..19529dd[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Theater-Service-MS/mvnw[m
[36m@@ -0,0 +1,259 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m# or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m# distributed with this work for additional information[m
[32m+[m[32m# regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m# to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m# "License"); you may not use this file except in compliance[m
[32m+[m[32m# with the License.  You may obtain a copy of the License at[m
[32m+[m[32m#[m
[32m+[m[32m#    http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m#[m
[32m+[m[32m# Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m# software distributed under the License is distributed on an[m
[32m+[m[32m# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m# KIND, either express or implied.  See the License for the[m
[32m+[m[32m# specific language governing permissions and limitations[m
[32m+[m[32m# under the License.[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Apache Maven Wrapper startup batch script, version 3.3.2[m
[32m+[m[32m#[m
[32m+[m[32m# Optional ENV vars[m
[32m+[m[32m# -----------------[m
[32m+[m[32m#   JAVA_HOME - location of a JDK home dir, required when download maven via java source[m
[32m+[m[32m#   MVNW_REPOURL - repo url base for downloading maven distribution[m
[32m+[m[32m#   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven[m
[32m+[m[32m#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mset -euf[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != debug ] || set -x[m
[32m+[m
[32m+[m[32m# OS specific support.[m
[32m+[m[32mnative_path() { printf %s\\n "$1"; }[m
[32m+[m[32mcase "$(uname)" in[m
[32m+[m[32mCYGWIN* | MINGW*)[m
[32m+[m[32m  [ -z "${JAVA_HOME-}" ] || JAVA_HOME="$(cygpath --unix "$JAVA_HOME")"[m
[32m+[m[32m  native_path() { cygpath --path --windows "$1"; }[m
[32m+[m[32m  ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# set JAVACMD and JAVACCMD[m
[32m+[m[32mset_java_home() {[m
[32m+[m[32m  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched[m
[32m+[m[32m  if [ -n "${JAVA_HOME-}" ]; then[m
[32m+[m[32m    if [ -x "$JAVA_HOME/jre/sh/java" ]; then[m
[32m+[m[32m      # IBM's JDK on AIX uses strange locations for the executables[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/jre/sh/java"[m
[32m+[m[32m      JAVACCMD="$JAVA_HOME/jre/sh/javac"[m
[32m+[m[32m    else[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/bin/java"[m
[32m+[m[32m      JAVACCMD="$JAVA_HOME/bin/javac"[m
[32m+[m
[32m+[m[32m      if [ ! -x "$JAVACMD" ] || [ ! -x "$JAVACCMD" ]; then[m
[32m+[m[32m        echo "The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run." >&2[m
[32m+[m[32m        echo "JAVA_HOME is set to \"$JAVA_HOME\", but \"\$JAVA_HOME/bin/java\" or \"\$JAVA_HOME/bin/javac\" does not exist." >&2[m
[32m+[m[32m        return 1[m
[32m+[m[32m      fi[m
[32m+[m[32m    fi[m
[32m+[m[32m  else[m
[32m+[m[32m    JAVACMD="$([m
[32m+[m[32m      'set' +e[m
[32m+[m[32m      'unset' -f command 2>/dev/null[m
[32m+[m[32m      'command' -v java[m
[32m+[m[32m    )" || :[m
[32m+[m[32m    JAVACCMD="$([m
[32m+[m[32m      'set' +e[m
[32m+[m[32m      'unset' -f command 2>/dev/null[m
[32m+[m[32m      'command' -v javac[m
[32m+[m[32m    )" || :[m
[32m+[m
[32m+[m[32m    if [ ! -x "${JAVACMD-}" ] || [ ! -x "${JAVACCMD-}" ]; then[m
[32m+[m[32m      echo "The java/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run." >&2[m
[32m+[m[32m      return 1[m
[32m+[m[32m    fi[m
[32m+[m[32m  fi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# hash string like Java String::hashCode[m
[32m+[m[32mhash_string() {[m
[32m+[m[32m  str="${1:-}" h=0[m
[32m+[m[32m  while [ -n "$str" ]; do[m
[32m+[m[32m    char="${str%"${str#?}"}"[m
[32m+[m[32m    h=$(((h * 31 + $(LC_CTYPE=C printf %d "'$char")) % 4294967296))[m
[32m+[m[32m    str="${str#?}"[m
[32m+[m[32m  done[m
[32m+[m[32m  printf %x\\n $h[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mverbose() { :; }[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != true ] || verbose() { printf %s\\n "${1-}"; }[m
[32m+[m
[32m+[m[32mdie() {[m
[32m+[m[32m  printf %s\\n "$1" >&2[m
[32m+[m[32m  exit 1[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtrim() {[m
[32m+[m[32m  # MWRAPPER-139:[m
[32m+[m[32m  #   Trims trailing and leading whitespace, carriage returns, tabs, and linefeeds.[m
[32m+[m[32m  #   Needed for removing poorly interpreted newline sequences when running in more[m
[32m+[m[32m  #   exotic environments such as mingw bash on Windows.[m
[32m+[m[32m  printf "%s" "${1}" | tr -d '[:space:]'[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# parse distributionUrl and optional distributionSha256Sum, requires .mvn/wrapper/maven-wrapper.properties[m
[32m+[m[32mwhile IFS="=" read -r key value; do[m
[32m+[m[32m  case "${key-}" in[m
[32m+[m[32m  distributionUrl) distributionUrl=$(trim "${value-}") ;;[m
[32m+[m[32m  distributionSha256Sum) distributionSha256Sum=$(trim "${value-}") ;;[m
[32m+[m[32m  esac[m
[32m+[m[32mdone <"${0%/*}/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m[32m[ -n "${distributionUrl-}" ] || die "cannot read distributionUrl property in ${0%/*}/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m
[32m+[m[32mcase "${distributionUrl##*/}" in[m
[32m+[m[32mmaven-mvnd-*bin.*)[m
[32m+[m[32m  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/[m
[32m+[m[32m  case "${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)" in[m
[32m+[m[32m  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;[m
[32m+[m[32m  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;[m
[32m+[m[32m  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;[m
[32m+[m[32m  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;[m
[32m+[m[32m  *)[m
[32m+[m[32m    echo "Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version" >&2[m
[32m+[m[32m    distributionPlatform=linux-amd64[m
[32m+[m[32m    ;;[m
[32m+[m[32m  esac[m
[32m+[m[32m  distributionUrl="${distributionUrl%-bin.*}-$distributionPlatform.zip"[m
[32m+[m[32m  ;;[m
[32m+[m[32mmaven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/ ;;[m
[32m+[m[32m*) MVN_CMD="mvn${0##*/mvnw}" _MVNW_REPO_PATTERN=/org/apache/maven/ ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# apply MVNW_REPOURL and calculate MAVEN_HOME[m
[32m+[m[32m# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>[m
[32m+[m[32m[ -z "${MVNW_REPOURL-}" ] || distributionUrl="$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*"$_MVNW_REPO_PATTERN"}"[m
[32m+[m[32mdistributionUrlName="${distributionUrl##*/}"[m
[32m+[m[32mdistributionUrlNameMain="${distributionUrlName%.*}"[m
[32m+[m[32mdistributionUrlNameMain="${distributionUrlNameMain%-bin}"[m
[32m+[m[32mMAVEN_USER_HOME="${MAVEN_USER_HOME:-${HOME}/.m2}"[m
[32m+[m[32mMAVEN_HOME="${MAVEN_USER_HOME}/wrapper/dists/${distributionUrlNameMain-}/$(hash_string "$distributionUrl")"[m
[32m+[m
[32m+[m[32mexec_maven() {[m
[32m+[m[32m  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :[m
[32m+[m[32m  exec "$MAVEN_HOME/bin/$MVN_CMD" "$@" || die "cannot exec $MAVEN_HOME/bin/$MVN_CMD"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif [ -d "$MAVEN_HOME" ]; then[m
[32m+[m[32m  verbose "found existing MAVEN_HOME at $MAVEN_HOME"[m
[32m+[m[32m  exec_maven "$@"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mcase "${distributionUrl-}" in[m
[32m+[m[32m*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;[m
[32m+[m[32m*) die "distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'" ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32m# prepare tmp dir[m
[32m+[m[32mif TMP_DOWNLOAD_DIR="$(mktemp -d)" && [ -d "$TMP_DOWNLOAD_DIR" ]; then[m
[32m+[m[32m  clean() { rm -rf -- "$TMP_DOWNLOAD_DIR"; }[m
[32m+[m[32m  trap clean HUP INT TERM EXIT[m
[32m+[m[32melse[m
[32m+[m[32m  die "cannot create temp dir"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mmkdir -p -- "${MAVEN_HOME%/*}"[m
[32m+[m
[32m+[m[32m# Download and Install Apache Maven[m
[32m+[m[32mverbose "Couldn't find MAVEN_HOME, downloading and installing it ..."[m
[32m+[m[32mverbose "Downloading from: $distributionUrl"[m
[32m+[m[32mverbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m
[32m+[m[32m# select .zip or .tar.gz[m
[32m+[m[32mif ! command -v unzip >/dev/null; then[m
[32m+[m[32m  distributionUrl="${distributionUrl%.zip}.tar.gz"[m
[32m+[m[32m  distributionUrlName="${distributionUrl##*/}"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# verbose opt[m
[32m+[m[32m__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''[m
[32m+[m[32m[ "${MVNW_VERBOSE-}" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v[m
[32m+[m
[32m+[m[32m# normalize http auth[m
[32m+[m[32mcase "${MVNW_PASSWORD:+has-password}" in[m
[32m+[m[32m'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;[m
[32m+[m[32mhas-password) [ -n "${MVNW_USERNAME-}" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -z "${MVNW_USERNAME-}" ] && command -v wget >/dev/null; then[m
[32m+[m[32m  verbose "Found wget ... using wget"[m
[32m+[m[32m  wget ${__MVNW_QUIET_WGET:+"$__MVNW_QUIET_WGET"} "$distributionUrl" -O "$TMP_DOWNLOAD_DIR/$distributionUrlName" || die "wget: Failed to fetch $distributionUrl"[m
[32m+[m[32melif [ -z "${MVNW_USERNAME-}" ] && command -v curl >/dev/null; then[m
[32m+[m[32m  verbose "Found curl ... using curl"[m
[32m+[m[32m  curl ${__MVNW_QUIET_CURL:+"$__MVNW_QUIET_CURL"} -f -L -o "$TMP_DOWNLOAD_DIR/$distributionUrlName" "$distributionUrl" || die "curl: Failed to fetch $distributionUrl"[m
[32m+[m[32melif set_java_home; then[m
[32m+[m[32m  verbose "Falling back to use Java to download"[m
[32m+[m[32m  javaSource="$TMP_DOWNLOAD_DIR/Downloader.java"[m
[32m+[m[32m  targetZip="$TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m[32m  cat >"$javaSource" <<-END[m
[32m+[m	[32mpublic class Downloader extends java.net.Authenticator[m
[32m+[m	[32m{[m
[32m+[m	[32m  protected java.net.PasswordAuthentication getPasswordAuthentication()[m
[32m+[m	[32m  {[m
[32m+[m	[32m    return new java.net.PasswordAuthentication( System.getenv( "MVNW_USERNAME" ), System.getenv( "MVNW_PASSWORD" ).toCharArray() );[m
[32m+[m	[32m  }[m
[32m+[m	[32m  public static void main( String[] args ) throws Exception[m
[32m+[m	[32m  {[m
[32m+[m	[32m    setDefault( new Downloader() );[m
[32m+[m	[32m    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );[m
[32m+[m	[32m  }[m
[32m+[m	[32m}[m
[32m+[m	[32mEND[m
[32m+[m[32m  # For Cygwin/MinGW, switch paths to Windows format before running javac and java[m
[32m+[m[32m  verbose " - Compiling Downloader.java ..."[m
[32m+[m[32m  "$(native_path "$JAVACCMD")" "$(native_path "$javaSource")" || die "Failed to compile Downloader.java"[m
[32m+[m[32m  verbose " - Running Downloader.java ..."[m
[32m+[m[32m  "$(native_path "$JAVACMD")" -cp "$(native_path "$TMP_DOWNLOAD_DIR")" Downloader "$distributionUrl" "$(native_path "$targetZip")"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# If specified, validate the SHA-256 sum of the Maven distribution zip file[m
[32m+[m[32mif [ -n "${distributionSha256Sum-}" ]; then[m
[32m+[m[32m  distributionSha256Result=false[m
[32m+[m[32m  if [ "$MVN_CMD" = mvnd.sh ]; then[m
[32m+[m[32m    echo "Checksum validation is not supported for maven-mvnd." >&2[m
[32m+[m[32m    echo "Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  elif command -v sha256sum >/dev/null; then[m
[32m+[m[32m    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | sha256sum -c >/dev/null 2>&1; then[m
[32m+[m[32m      distributionSha256Result=true[m
[32m+[m[32m    fi[m
[32m+[m[32m  elif command -v shasum >/dev/null; then[m
[32m+[m[32m    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | shasum -a 256 -c >/dev/null 2>&1; then[m
[32m+[m[32m      distributionSha256Result=true[m
[32m+[m[32m    fi[m
[32m+[m[32m  else[m
[32m+[m[32m    echo "Checksum validation was requested but neither 'sha256sum' or 'shasum' are available." >&2[m
[32m+[m[32m    echo "Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  fi[m
[32m+[m[32m  if [ $distributionSha256Result = false ]; then[m
[32m+[m[32m    echo "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised." >&2[m
[32m+[m[32m    echo "If you updated your Maven version, you need to update the specified distributionSha256Sum property." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  fi[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# unzip and move[m
[32m+[m[32mif command -v unzip >/dev/null; then[m
[32m+[m[32m  unzip ${__MVNW_QUIET_UNZIP:+"$__MVNW_QUIET_UNZIP"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -d "$TMP_DOWNLOAD_DIR" || die "failed to unzip"[m
[32m+[m[32melse[m
[32m+[m[32m  tar xzf${__MVNW_QUIET_TAR:+"$__MVNW_QUIET_TAR"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -C "$TMP_DOWNLOAD_DIR" || die "failed to untar"[m
[32m+[m[32mfi[m
[32m+[m[32mprintf %s\\n "$distributionUrl" >"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain/mvnw.url"[m
[32m+[m[32mmv -- "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" "$MAVEN_HOME" || [ -d "$MAVEN_HOME" ] || die "fail to move MAVEN_HOME"[m
[32m+[m
[32m+[m[32mclean || :[m
[32m+[m[32mexec_maven "$@"[m
[1mdiff --git a/MovieApp/Theater-Service-MS/mvnw.cmd b/MovieApp/Theater-Service-MS/mvnw.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..249bdf3[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Theater-Service-MS/mvnw.cmd[m
[36m@@ -0,0 +1,149 @@[m
[32m+[m[32m<# : batch portion[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m[32m@REM Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m@REM or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m@REM distributed with this work for additional information[m
[32m+[m[32m@REM regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m@REM to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m@REM "License"); you may not use this file except in compliance[m
[32m+[m[32m@REM with the License.  You may obtain a copy of the License at[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM    http://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m@REM software distributed under the License is distributed on an[m
[32m+[m[32m@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m@REM KIND, either express or implied.  See the License for the[m
[32m+[m[32m@REM specific language governing permissions and limitations[m
[32m+[m[32m@REM under the License.[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m[32m@REM Apache Maven Wrapper startup batch script, version 3.3.2[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Optional ENV vars[m
[32m+[m[32m@REM   MVNW_REPOURL - repo url base for downloading maven distribution[m
[32m+[m[32m@REM   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven[m
[32m+[m[32m@REM   MVNW_VERBOSE - true: enable verbose log; others: silence the output[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m@IF "%__MVNW_ARG0_NAME__%"=="" (SET __MVNW_ARG0_NAME__=%~nx0)[m
[32m+[m[32m@SET __MVNW_CMD__=[m
[32m+[m[32m@SET __MVNW_ERROR__=[m
[32m+[m[32m@SET __MVNW_PSMODULEP_SAVE=%PSModulePath%[m
[32m+[m[32m@SET PSModulePath=[m
[32m+[m[32m@FOR /F "usebackq tokens=1* delims==" %%A IN (`powershell -noprofile "& {$scriptDir='%~dp0'; $script='%__MVNW_ARG0_NAME__%'; icm -ScriptBlock ([Scriptblock]::Create((Get-Content -Raw '%~f0'))) -NoNewScope}"`) DO @([m
[32m+[m[32m  IF "%%A"=="MVN_CMD" (set __MVNW_CMD__=%%B) ELSE IF "%%B"=="" (echo %%A) ELSE (echo %%A=%%B)[m
[32m+[m[32m)[m
[32m+[m[32m@SET PSModulePath=%__MVNW_PSMODULEP_SAVE%[m
[32m+[m[32m@SET __MVNW_PSMODULEP_SAVE=[m
[32m+[m[32m@SET __MVNW_ARG0_NAME__=[m
[32m+[m[32m@SET MVNW_USERNAME=[m
[32m+[m[32m@SET MVNW_PASSWORD=[m
[32m+[m[32m@IF NOT "%__MVNW_CMD__%"=="" (%__MVNW_CMD__% %*)[m
[32m+[m[32m@echo Cannot start maven from wrapper >&2 && exit /b 1[m
[32m+[m[32m@GOTO :EOF[m
[32m+[m[32m: end batch / begin powershell #>[m
[32m+[m
[32m+[m[32m$ErrorActionPreference = "Stop"[m
[32m+[m[32mif ($env:MVNW_VERBOSE -eq "true") {[m
[32m+[m[32m  $VerbosePreference = "Continue"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# calculate distributionUrl, requires .mvn/wrapper/maven-wrapper.properties[m
[32m+[m[32m$distributionUrl = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionUrl[m
[32m+[m[32mif (!$distributionUrl) {[m
[32m+[m[32m  Write-Error "cannot read distributionUrl property in $scriptDir/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mswitch -wildcard -casesensitive ( $($distributionUrl -replace '^.*/','') ) {[m
[32m+[m[32m  "maven-mvnd-*" {[m
[32m+[m[32m    $USE_MVND = $true[m
[32m+[m[32m    $distributionUrl = $distributionUrl -replace '-bin\.[^.]*$',"-windows-amd64.zip"[m
[32m+[m[32m    $MVN_CMD = "mvnd.cmd"[m
[32m+[m[32m    break[m
[32m+[m[32m  }[m
[32m+[m[32m  default {[m
[32m+[m[32m    $USE_MVND = $false[m
[32m+[m[32m    $MVN_CMD = $script -replace '^mvnw','mvn'[m
[32m+[m[32m    break[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# apply MVNW_REPOURL and calculate MAVEN_HOME[m
[32m+[m[32m# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>[m
[32m+[m[32mif ($env:MVNW_REPOURL) {[m
[32m+[m[32m  $MVNW_REPO_PATTERN = if ($USE_MVND) { "/org/apache/maven/" } else { "/maven/mvnd/" }[m
[32m+[m[32m  $distributionUrl = "$env:MVNW_REPOURL$MVNW_REPO_PATTERN$($distributionUrl -replace '^.*'+$MVNW_REPO_PATTERN,'')"[m
[32m+[m[32m}[m
[32m+[m[32m$distributionUrlName = $distributionUrl -replace '^.*/',''[m
[32m+[m[32m$distributionUrlNameMain = $distributionUrlName -replace '\.[^.]*$','' -replace '-bin$',''[m
[32m+[m[32m$MAVEN_HOME_PARENT = "$HOME/.m2/wrapper/dists/$distributionUrlNameMain"[m
[32m+[m[32mif ($env:MAVEN_USER_HOME) {[m
[32m+[m[32m  $MAVEN_HOME_PARENT = "$env:MAVEN_USER_HOME/wrapper/dists/$distributionUrlNameMain"[m
[32m+[m[32m}[m
[32m+[m[32m$MAVEN_HOME_NAME = ([System.Security.Cryptography.MD5]::Create().ComputeHash([byte[]][char[]]$distributionUrl) | ForEach-Object {$_.ToString("x2")}) -join ''[m
[32m+[m[32m$MAVEN_HOME = "$MAVEN_HOME_PARENT/$MAVEN_HOME_NAME"[m
[32m+[m
[32m+[m[32mif (Test-Path -Path "$MAVEN_HOME" -PathType Container) {[m
[32m+[m[32m  Write-Verbose "found existing MAVEN_HOME at $MAVEN_HOME"[m
[32m+[m[32m  Write-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"[m
[32m+[m[32m  exit $?[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif (! $distributionUrlNameMain -or ($distributionUrlName -eq $distributionUrlNameMain)) {[m
[32m+[m[32m  Write-Error "distributionUrl is not valid, must end with *-bin.zip, but found $distributionUrl"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# prepare tmp dir[m
[32m+[m[32m$TMP_DOWNLOAD_DIR_HOLDER = New-TemporaryFile[m
[32m+[m[32m$TMP_DOWNLOAD_DIR = New-Item -Itemtype Directory -Path "$TMP_DOWNLOAD_DIR_HOLDER.dir"[m
[32m+[m[32m$TMP_DOWNLOAD_DIR_HOLDER.Delete() | Out-Null[m
[32m+[m[32mtrap {[m
[32m+[m[32m  if ($TMP_DOWNLOAD_DIR.Exists) {[m
[32m+[m[32m    try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }[m
[32m+[m[32m    catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mNew-Item -Itemtype Directory -Path "$MAVEN_HOME_PARENT" -Force | Out-Null[m
[32m+[m
[32m+[m[32m# Download and Install Apache Maven[m
[32m+[m[32mWrite-Verbose "Couldn't find MAVEN_HOME, downloading and installing it ..."[m
[32m+[m[32mWrite-Verbose "Downloading from: $distributionUrl"[m
[32m+[m[32mWrite-Verbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"[m
[32m+[m
[32m+[m[32m$webclient = New-Object System.Net.WebClient[m
[32m+[m[32mif ($env:MVNW_USERNAME -and $env:MVNW_PASSWORD) {[m
[32m+[m[32m  $webclient.Credentials = New-Object System.Net.NetworkCredential($env:MVNW_USERNAME, $env:MVNW_PASSWORD)[m
[32m+[m[32m}[m
[32m+[m[32m[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12[m
[32m+[m[32m$webclient.DownloadFile($distributionUrl, "$TMP_DOWNLOAD_DIR/$distributionUrlName") | Out-Null[m
[32m+[m
[32m+[m[32m# If specified, validate the SHA-256 sum of the Maven distribution zip file[m
[32m+[m[32m$distributionSha256Sum = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionSha256Sum[m
[32m+[m[32mif ($distributionSha256Sum) {[m
[32m+[m[32m  if ($USE_MVND) {[m
[32m+[m[32m    Write-Error "Checksum validation is not supported for maven-mvnd. `nPlease disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties."[m
[32m+[m[32m  }[m
[32m+[m[32m  Import-Module $PSHOME\Modules\Microsoft.PowerShell.Utility -Function Get-FileHash[m
[32m+[m[32m  if ((Get-FileHash "$TMP_DOWNLOAD_DIR/$distributionUrlName" -Algorithm SHA256).Hash.ToLower() -ne $distributionSha256Sum) {[m
[32m+[m[32m    Write-Error "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised. If you updated your Maven version, you need to update the specified distributionSha256Sum property."[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# unzip and move[m
[32m+[m[32mExpand-Archive "$TMP_DOWNLOAD_DIR/$distributionUrlName" -DestinationPath "$TMP_DOWNLOAD_DIR" | Out-Null[m
[32m+[m[32mRename-Item -Path "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" -NewName $MAVEN_HOME_NAME | Out-Null[m
[32m+[m[32mtry {[m
[32m+[m[32m  Move-Item -Path "$TMP_DOWNLOAD_DIR/$MAVEN_HOME_NAME" -Destination $MAVEN_HOME_PARENT | Out-Null[m
[32m+[m[32m} catch {[m
[32m+[m[32m  if (! (Test-Path -Path "$MAVEN_HOME" -PathType Container)) {[m
[32m+[m[32m    Write-Error "fail to move MAVEN_HOME"[m
[32m+[m[32m  }[m
[32m+[m[32m} finally {[m
[32m+[m[32m  try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }[m
[32m+[m[32m  catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mWrite-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"[m
[1mdiff --git a/MovieApp/Theater-Service-MS/pom.xml b/MovieApp/Theater-Service-MS/pom.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..7dc9ef4[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Theater-Service-MS/pom.xml[m
[36m@@ -0,0 +1,119 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[32m+[m	[32mxsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">[m
[32m+[m	[32m<modelVersion>4.0.0</modelVersion>[m
[32m+[m	[32m<parent>[m
[32m+[m		[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m		[32m<artifactId>spring-boot-starter-parent</artifactId>[m
[32m+[m		[32m<version>3.5.4</version>[m
[32m+[m		[32m<relativePath/> <!-- lookup parent from repository -->[m
[32m+[m	[32m</parent>[m
[32m+[m	[32m<groupId>com.theater</groupId>[m
[32m+[m	[32m<artifactId>Theater-Service-MS</artifactId>[m
[32m+[m	[32m<version>0.0.1-SNAPSHOT</version>[m
[32m+[m	[32m<name>Theater-Service-MS</name>[m
[32m+[m	[32m<description>Demo project for Spring Boot</description>[m
[32m+[m	[32m<url/>[m
[32m+[m	[32m<licenses>[m
[32m+[m		[32m<license/>[m
[32m+[m	[32m</licenses>[m
[32m+[m	[32m<developers>[m
[32m+[m		[32m<developer/>[m
[32m+[m	[32m</developers>[m
[32m+[m	[32m<scm>[m
[32m+[m		[32m<connection/>[m
[32m+[m		[32m<developerConnection/>[m
[32m+[m		[32m<tag/>[m
[32m+[m		[32m<url/>[m
[32m+[m	[32m</scm>[m
[32m+[m	[32m<properties>[m
[32m+[m		[32m<java.version>17</java.version>[m
[32m+[m		[32m<spring-cloud.version>2025.0.0</spring-cloud.version>[m
[32m+[m	[32m</properties>[m
[32m+[m	[32m<dependencies>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-actuator</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-data-jpa</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-web</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.cloud</groupId>[m
[32m+[m			[32m<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m[41m    [m		[32m<groupId>org.springdoc</groupId>[m
[32m+[m[41m    [m		[32m<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>[m
[32m+[m[41m    [m		[32m<version>2.8.9</version>[m
[32m+[m		[32m</dependency>[m
[32m+[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-devtools</artifactId>[m
[32m+[m			[32m<scope>runtime</scope>[m
[32m+[m			[32m<optional>true</optional>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>com.mysql</groupId>[m
[32m+[m			[32m<artifactId>mysql-connector-j</artifactId>[m
[32m+[m			[32m<scope>runtime</scope>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.projectlombok</groupId>[m
[32m+[m			[32m<artifactId>lombok</artifactId>[m
[32m+[m			[32m<optional>true</optional>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-test</artifactId>[m
[32m+[m			[32m<scope>test</scope>[m
[32m+[m		[32m</dependency>[m
[32m+[m	[32m</dependencies>[m
[32m+[m	[32m<dependencyManagement>[m
[32m+[m		[32m<dependencies>[m
[32m+[m			[32m<dependency>[m
[32m+[m				[32m<groupId>org.springframework.cloud</groupId>[m
[32m+[m				[32m<artifactId>spring-cloud-dependencies</artifactId>[m
[32m+[m				[32m<version>${spring-cloud.version}</version>[m
[32m+[m				[32m<type>pom</type>[m
[32m+[m				[32m<scope>import</scope>[m
[32m+[m			[32m</dependency>[m
[32m+[m		[32m</dependencies>[m
[32m+[m	[32m</dependencyManagement>[m
[32m+[m
[32m+[m	[32m<build>[m
[32m+[m		[32m<plugins>[m
[32m+[m			[32m<plugin>[m
[32m+[m				[32m<groupId>org.apache.maven.plugins</groupId>[m
[32m+[m				[32m<artifactId>maven-compiler-plugin</artifactId>[m
[32m+[m				[32m<configuration>[m
[32m+[m					[32m<annotationProcessorPaths>[m
[32m+[m						[32m<path>[m
[32m+[m							[32m<groupId>org.projectlombok</groupId>[m
[32m+[m							[32m<artifactId>lombok</artifactId>[m
[32m+[m						[32m</path>[m
[32m+[m					[32m</annotationProcessorPaths>[m
[32m+[m				[32m</configuration>[m
[32m+[m			[32m</plugin>[m
[32m+[m			[32m<plugin>[m
[32m+[m				[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m				[32m<artifactId>spring-boot-maven-plugin</artifactId>[m
[32m+[m				[32m<configuration>[m
[32m+[m					[32m<excludes>[m
[32m+[m						[32m<exclude>[m
[32m+[m							[32m<groupId>org.projectlombok</groupId>[m
[32m+[m							[32m<artifactId>lombok</artifactId>[m
[32m+[m						[32m</exclude>[m
[32m+[m					[32m</excludes>[m
[32m+[m				[32m</configuration>[m
[32m+[m			[32m</plugin>[m
[32m+[m		[32m</plugins>[m
[32m+[m	[32m</build>[m
[32m+[m
[32m+[m[32m</project>[m
[1mdiff --git a/MovieApp/Theater-Service-MS/src/main/java/com/theater/TheaterServiceMsApplication.java b/MovieApp/Theater-Service-MS/src/main/java/com/theater/TheaterServiceMsApplication.java[m
[1mnew file mode 100644[m
[1mindex 0000000..0e47634[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Theater-Service-MS/src/main/java/com/theater/TheaterServiceMsApplication.java[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mpackage com.theater;[m
[32m+[m
[32m+[m[32mimport org.springframework.boot.SpringApplication;[m
[32m+[m[32mimport org.springframework.boot.autoconfigure.SpringBootApplication;[m
[32m+[m
[32m+[m[32m@SpringBootApplication[m
[32m+[m[32mpublic class TheaterServiceMsApplication {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m		[32mSpringApplication.run(TheaterServiceMsApplication.class, args);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Theater-Service-MS/src/main/java/com/theater/config/AppConfig.java b/MovieApp/Theater-Service-MS/src/main/java/com/theater/config/AppConfig.java[m
[1mnew file mode 100644[m
[1mindex 0000000..456972e[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Theater-Service-MS/src/main/java/com/theater/config/AppConfig.java[m
[36m@@ -0,0 +1,49 @@[m
[32m+[m[32mpackage com.theater.config;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport org.springframework.beans.factory.annotation.Value;[m
[32m+[m[32mimport org.springframework.context.annotation.Bean;[m
[32m+[m[32mimport org.springframework.context.annotation.Configuration;[m
[32m+[m
[32m+[m[32mimport io.swagger.v3.oas.models.OpenAPI;[m
[32m+[m[32mimport io.swagger.v3.oas.models.info.Contact;[m
[32m+[m[32mimport io.swagger.v3.oas.models.info.Info;[m
[32m+[m[32mimport io.swagger.v3.oas.models.info.License;[m
[32m+[m[32mimport io.swagger.v3.oas.models.servers.Server;[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m@Configuration[m
[32m+[m[32mpublic class AppConfig {[m
[32m+[m[41m	[m
[32m+[m	[32m@Value("${techacademy.openapi.dev-url}")[m
[32m+[m	[32mprivate String devUrl;[m
[32m+[m[41m [m
[32m+[m	[32m@Value("${techacademy.openapi.prod-url}")[m
[32m+[m	[32mprivate String prodUrl;[m
[32m+[m[41m [m
[32m+[m	[32m@Bean[m
[32m+[m	[32mpublic OpenAPI myOpenAPI() {[m
[32m+[m		[32mServer devServer = new Server();[m
[32m+[m		[32mdevServer.setUrl(devUrl);[m
[32m+[m		[32mdevServer.setDescription("Server URL in Development environment");[m
[32m+[m[41m [m
[32m+[m		[32mServer prodServer = new Server();[m
[32m+[m		[32mprodServer.setUrl(prodUrl);[m
[32m+[m		[32mprodServer.setDescription("Server URL in Production environment");[m
[32m+[m[41m [m
[32m+[m		[32mContact contact = new Contact();[m
[32m+[m		[32mcontact.setEmail("XXXX@gmail.com");[m
[32m+[m		[32mcontact.setName("XXXx");[m
[32m+[m		[32mcontact.setUrl("https://www.XXXX.com");[m
[32m+[m[41m [m
[32m+[m		[32mLicense mitLicense = new License().name("MIT License").url("https://choosealicense.com/licenses/mit/");[m
[32m+[m[41m [m
[32m+[m		[32mInfo info = new Info().title("Ecommerce REST API").version("1.0").contact(contact)[m
[32m+[m				[32m.description("This API exposes endpoints to manage ECOMMERCE OPERATIONS.")[m
[32m+[m				[32m.termsOfService("https://www.XXXX.com/terms").license(mitLicense);[m
[32m+[m[41m [m
[32m+[m		[32mreturn new OpenAPI().info(info).servers(List.of(devServer, prodServer));[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/MovieApp/Theater-Service-MS/src/main/java/com/theater/controller/TheaterController.java b/MovieApp/Theater-Service-MS/src/main/java/com/theater/controller/TheaterController.java[m
[1mnew file mode 100644[m
[1mindex 0000000..37cc807[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Theater-Service-MS/src/main/java/com/theater/controller/TheaterController.java[m
[36m@@ -0,0 +1,53 @@[m
[32m+[m[32mpackage com.theater.controller;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport org.springframework.http.ResponseEntity;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.DeleteMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.GetMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PathVariable;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PostMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PutMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RequestBody;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RequestMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RestController;[m
[32m+[m
[32m+[m[32mimport com.theater.model.Theater;[m
[32m+[m[32mimport com.theater.service.TheaterService;[m
[32m+[m
[32m+[m[32mimport lombok.RequiredArgsConstructor;[m
[32m+[m
[32m+[m[32m@RestController[m
[32m+[m[32m@RequestMapping("/theaters")[m
[32m+[m[32m@RequiredArgsConstructor[m
[32m+[m[32mpublic class TheaterController {[m
[32m+[m[41m	[m
[32m+[m	[32mprivate final TheaterService theaterService;[m
[32m+[m
[32m+[m[32m    @PostMapping[m
[32m+[m[32m    public ResponseEntity<Theater> createTheater(@RequestBody Theater theater) {[m
[32m+[m[32m        return ResponseEntity.ok(theaterService.createTheater(theater));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @GetMapping("/{id}")[m
[32m+[m[32m    public ResponseEntity<Theater> getTheaterById(@PathVariable Long id) {[m
[32m+[m[32m        return ResponseEntity.ok(theaterService.getTheaterById(id));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @GetMapping[m
[32m+[m[32m    public ResponseEntity<List<Theater>> getAllTheaters() {[m
[32m+[m[32m        return ResponseEntity.ok(theaterService.getAllTheaters());[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @PutMapping("/{id}")[m
[32m+[m[32m    public ResponseEntity<Theater> updateTheater(@PathVariable Long id, @RequestBody Theater theater) {[m
[32m+[m[32m        return ResponseEntity.ok(theaterService.updateTheater(id, theater));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @DeleteMapping("/{id}")[m
[32m+[m[32m    public ResponseEntity<Void> deleteTheater(@PathVariable Long id) {[m
[32m+[m[32m        theaterService.deleteTheater(id);[m
[32m+[m[32m        return ResponseEntity.noContent().build();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Theater-Service-MS/src/main/java/com/theater/exception/GlobalExceptionHandler.java b/MovieApp/Theater-Service-MS/src/main/java/com/theater/exception/GlobalExceptionHandler.java[m
[1mnew file mode 100644[m
[1mindex 0000000..d4fe0ef[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Theater-Service-MS/src/main/java/com/theater/exception/GlobalExceptionHandler.java[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32mpackage com.theater.exception;[m
[32m+[m
[32m+[m[32mimport org.springframework.http.HttpStatus;[m
[32m+[m[32mimport org.springframework.http.ResponseEntity;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.ControllerAdvice;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.ExceptionHandler;[m
[32m+[m
[32m+[m[32m@ControllerAdvice[m
[32m+[m[32mpublic class GlobalExceptionHandler {[m
[32m+[m[41m	[m
[32m+[m	[32m @ExceptionHandler(ResourceNotFoundException.class)[m
[32m+[m	[32m    public ResponseEntity<String> handleResourceNotFound(ResourceNotFoundException ex) {[m
[32m+[m	[32m        return ResponseEntity.status(HttpStatus.NOT_FOUND).body(ex.getMessage());[m
[32m+[m	[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Theater-Service-MS/src/main/java/com/theater/exception/ResourceNotFoundException.java b/MovieApp/Theater-Service-MS/src/main/java/com/theater/exception/ResourceNotFoundException.java[m
[1mnew file mode 100644[m
[1mindex 0000000..6eecd8f[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Theater-Service-MS/src/main/java/com/theater/exception/ResourceNotFoundException.java[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32mpackage com.theater.exception;[m
[32m+[m
[32m+[m[32mpublic class ResourceNotFoundException extends RuntimeException {[m
[32m+[m[41m    [m
[32m+[m	[32mprivate static final long serialVersionUID = 1L;[m
[32m+[m
[32m+[m	[32mpublic ResourceNotFoundException(String message) {[m
[32m+[m[32m        super(message);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Theater-Service-MS/src/main/java/com/theater/model/Theater.java b/MovieApp/Theater-Service-MS/src/main/java/com/theater/model/Theater.java[m
[1mnew file mode 100644[m
[1mindex 0000000..3b04bfa[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Theater-Service-MS/src/main/java/com/theater/model/Theater.java[m
[36m@@ -0,0 +1,27 @@[m
[32m+[m[32mpackage com.theater.model;[m
[32m+[m
[32m+[m[32mimport jakarta.persistence.Entity;[m
[32m+[m[32mimport jakarta.persistence.GeneratedValue;[m
[32m+[m[32mimport jakarta.persistence.GenerationType;[m
[32m+[m[32mimport jakarta.persistence.Id;[m
[32m+[m[32mimport jakarta.persistence.Table;[m
[32m+[m[32mimport lombok.AllArgsConstructor;[m
[32m+[m[32mimport lombok.Builder;[m
[32m+[m[32mimport lombok.Data;[m
[32m+[m[32mimport lombok.NoArgsConstructor;[m
[32m+[m
[32m+[m[32m@Entity[m
[32m+[m[32m@Table(name = "theaters")[m
[32m+[m[32m@Data[m
[32m+[m[32m@NoArgsConstructor[m
[32m+[m[32m@AllArgsConstructor[m
[32m+[m[32m@Builder[m
[32m+[m[32mpublic class Theater {[m
[32m+[m
[32m+[m[32m    @Id[m
[32m+[m[32m    @GeneratedValue(strategy = GenerationType.IDENTITY)[m
[32m+[m[32m    private Long id;[m
[32m+[m[41m [m
[32m+[m[32m    private String name;[m
[32m+[m[32m    private String location;[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Theater-Service-MS/src/main/java/com/theater/repository/TheaterRepository.java b/MovieApp/Theater-Service-MS/src/main/java/com/theater/repository/TheaterRepository.java[m
[1mnew file mode 100644[m
[1mindex 0000000..413f981[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Theater-Service-MS/src/main/java/com/theater/repository/TheaterRepository.java[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mpackage com.theater.repository;[m
[32m+[m
[32m+[m[32mimport org.springframework.data.jpa.repository.JpaRepository;[m
[32m+[m[32mimport org.springframework.stereotype.Repository;[m
[32m+[m
[32m+[m[32mimport com.theater.model.Theater;[m
[32m+[m
[32m+[m[32m@Repository[m
[32m+[m[32mpublic interface TheaterRepository extends JpaRepository<Theater, Long>{[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Theater-Service-MS/src/main/java/com/theater/service/TheaterService.java b/MovieApp/Theater-Service-MS/src/main/java/com/theater/service/TheaterService.java[m
[1mnew file mode 100644[m
[1mindex 0000000..4495dab[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Theater-Service-MS/src/main/java/com/theater/service/TheaterService.java[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mpackage com.theater.service;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport com.theater.model.Theater;[m
[32m+[m
[32m+[m[32mpublic interface TheaterService {[m
[32m+[m[41m	[m
[32m+[m	[32m Theater createTheater(Theater theater);[m
[32m+[m	[32m Theater getTheaterById(Long id);[m
[32m+[m[32m     List<Theater> getAllTheaters();[m
[32m+[m[32m     Theater updateTheater(Long id, Theater theater);[m
[32m+[m[32m     void deleteTheater(Long id);[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Theater-Service-MS/src/main/java/com/theater/service/impl/TheaterServiceImpl.java b/MovieApp/Theater-Service-MS/src/main/java/com/theater/service/impl/TheaterServiceImpl.java[m
[1mnew file mode 100644[m
[1mindex 0000000..8e0075a[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Theater-Service-MS/src/main/java/com/theater/service/impl/TheaterServiceImpl.java[m
[36m@@ -0,0 +1,50 @@[m
[32m+[m[32mpackage com.theater.service.impl;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport org.springframework.stereotype.Service;[m
[32m+[m
[32m+[m[32mimport com.theater.exception.ResourceNotFoundException;[m
[32m+[m[32mimport com.theater.model.Theater;[m
[32m+[m[32mimport com.theater.repository.TheaterRepository;[m
[32m+[m[32mimport com.theater.service.TheaterService;[m
[32m+[m
[32m+[m[32mimport lombok.RequiredArgsConstructor;[m
[32m+[m
[32m+[m[32m@Service[m
[32m+[m[32m@RequiredArgsConstructor[m
[32m+[m[32mpublic class TheaterServiceImpl implements TheaterService{[m
[32m+[m[41m	[m
[32m+[m	[32m private final TheaterRepository theaterRepository;[m
[32m+[m
[32m+[m	[32m    @Override[m
[32m+[m	[32m    public Theater createTheater(Theater theater) {[m
[32m+[m	[32m        return theaterRepository.save(theater);[m
[32m+[m	[32m    }[m
[32m+[m
[32m+[m	[32m    @Override[m
[32m+[m	[32m    public Theater getTheaterById(Long id) {[m
[32m+[m	[32m        return theaterRepository.findById(id)[m
[32m+[m	[32m                .orElseThrow(() -> new ResourceNotFoundException("Theater not found with id: " + id));[m
[32m+[m	[32m    }[m
[32m+[m
[32m+[m	[32m    @Override[m
[32m+[m	[32m    public List<Theater> getAllTheaters() {[m
[32m+[m	[32m        return theaterRepository.findAll();[m
[32m+[m	[32m    }[m
[32m+[m
[32m+[m	[32m    @Override[m
[32m+[m	[32m    public Theater updateTheater(Long id, Theater theater) {[m
[32m+[m	[32m        Theater existing = getTheaterById(id);[m
[32m+[m	[32m        existing.setName(theater.getName());[m
[32m+[m	[32m        existing.setLocation(theater.getLocation());[m
[32m+[m	[32m        return theaterRepository.save(existing);[m
[32m+[m	[32m    }[m
[32m+[m
[32m+[m	[32m    @Override[m
[32m+[m	[32m    public void deleteTheater(Long id) {[m
[32m+[m	[32m        Theater theater = getTheaterById(id);[m
[32m+[m	[32m        theaterRepository.delete(theater);[m
[32m+[m	[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/MovieApp/Theater-Service-MS/src/main/resources/application.properties b/MovieApp/Theater-Service-MS/src/main/resources/application.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..041481a[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Theater-Service-MS/src/main/resources/application.properties[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32mspring.application.name=Theater-Service-MS[m
[32m+[m
[32m+[m[32mserver.port = 4444[m
[32m+[m
[32m+[m[32meureka.client.register-with-eureka=true[m
[32m+[m[32meureka.client.fetch-registry=true[m
[32m+[m[32meureka.client.service-url.defaultZone=http://localhost:8761/eureka/[m
[32m+[m[32meureka.instance.hostname=localhost[m
[32m+[m
[32m+[m[32mspring.datasource.url=jdbc:mysql://localhost:3306/theater-service-ms?createDatabaseIfNotExist=true[m
[32m+[m[32mspring.datasource.username=root[m
[32m+[m[32mspring.datasource.password=root[m
[32m+[m[32mspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver[m
[32m+[m[32mspring.jpa.show-sql=true[m
[32m+[m[32mspring.jpa.format-sql = true[m
[32m+[m[32mspring.jpa.hibernate.ddl-auto=update[m
[32m+[m
[32m+[m[32mspring.jpa.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect[m
[32m+[m
[32m+[m[32mspringdoc.swagger-ui.path=/swagger-ui-custom.html[m
[32m+[m[32mspringdoc.swagger-ui.operationsSorter=method[m
[32m+[m
[32m+[m[32mtechacademy.openapi.dev-url=http://localhost:4444[m
[32m+[m[32mtechacademy.openapi.prod-url=https://xxx-api.com[m
\ No newline at end of file[m
[1mdiff --git a/MovieApp/Theater-Service-MS/src/test/java/com/theater/TheaterServiceMsApplicationTests.java b/MovieApp/Theater-Service-MS/src/test/java/com/theater/TheaterServiceMsApplicationTests.java[m
[1mnew file mode 100644[m
[1mindex 0000000..f5576eb[m
[1m--- /dev/null[m
[1m+++ b/MovieApp/Theater-Service-MS/src/test/java/com/theater/TheaterServiceMsApplicationTests.java[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mpackage com.theater;[m
[32m+[m
[32m+[m[32mimport org.junit.jupiter.api.Test;[m
[32m+[m[32mimport org.springframework.boot.test.context.SpringBootTest;[m
[32m+[m
[32m+[m[32m@SpringBootTest[m
[32m+[m[32mclass TheaterServiceMsApplicationTests {[m
[32m+[m
[32m+[m	[32m@Test[m
[32m+[m	[32mvoid contextLoads() {[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
